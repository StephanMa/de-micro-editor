{"version":3,"file":"de-editor.min.js","mappings":"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","sources":["webpack://LoadEditor/./src/utils/utils.js","webpack://LoadEditor/./node_modules/openseadragon/build/openseadragon/openseadragon.js","webpack://LoadEditor/./index.js","webpack://LoadEditor/./src/components/annotation_slider/main.js","webpack://LoadEditor/./src/components/full_screen/main.js","webpack://LoadEditor/./src/components/font_size/main.js","webpack://LoadEditor/./src/components/font_family/main.js","webpack://LoadEditor/./src/components/image_switch/main.js","webpack://LoadEditor/./src/components/image_loader/main.js","webpack://LoadEditor/./src/components/image_loader/pagination.js","webpack://LoadEditor/./src/components/image_loader/resize.js","webpack://LoadEditor/./src/components/search_params/main.js","webpack://LoadEditor/./src/utils/setCookie.js","webpack://LoadEditor/webpack/bootstrap","webpack://LoadEditor/webpack/runtime/define property getters","webpack://LoadEditor/webpack/runtime/hasOwnProperty shorthand","webpack://LoadEditor/webpack/runtime/make namespace object","webpack://LoadEditor/webpack/startup"],"sourcesContent":["\n// ## functions for accessing parsed class and adding or removing markup\n// by adding or removing classes. classes should hold CSS stylsheets\n// defined by the user separately.\n\nexport function removeMarkup(html_class, css_class, color, hide, style) {\n    \n    // find all provided classes\n    var selected = document.querySelectorAll(`.${html_class}`);\n    selected.forEach((el) => {\n\n        // in case classes come as object of two classes\n        // one of the classes must be part in HTML dom\n        // if one is present it is removed and another class added\n        // lets you control CSS styles\n        if (typeof css_class === \"object\") {\n            css_class.forEach((css) => {\n                if (el.classList.contains(css)) {\n                    el.classList.remove(css);\n                } else {\n                    el.classList.add(css);\n                }\n            });\n        \n        // if classes are a simple string\n        // removes additional class\n        } else {\n            el.classList.remove(css_class);\n        }\n\n        // removes color class\n        el.classList.remove(color);\n\n        // adds additional class for element styling\n        el.classList.add(style.css_class);\n\n        // if hide is true it sets display to none\n        if (hide) {\n            el.style.display = \"none\";\n        }\n    });\n\n    // returns number of nodes found as string\n    return String(selected.length);\n};\n\n// same logic as above but for adding classes\nexport function addMarkup(html_class, css_class, color, hide, style) {\n    var selected = document.querySelectorAll(`.${html_class}`);\n    selected.forEach((el) => {\n        if (typeof css_class === \"object\") {\n            css_class.forEach((css) => {\n                if (el.classList.contains(css)) {\n                    el.classList.remove(css);\n                } else {\n                    el.classList.add(css);\n                }\n            });\n        } else {\n            el.classList.add(css_class);\n        }\n        el.classList.add(color);\n        el.classList.add(style.css_class);\n        if (hide) {\n            el.style.display = \"inline\";\n        }\n    });\n    return String(selected.length);\n};\n\nexport function uptState(options) {\n\n    if (options.hist) {\n        // update url and state of history\n        window.history.replaceState({}, '', options.href);\n    } \n    \n    if (options.state) {\n        window.history.pushState(options.state, '', options.href);\n    }\n\n    if (options.cit) {\n        options.cit.innerHTML =  `${location.hostname}${location.pathname}${options.href}`;\n        options.cit.setAttribute(\"href\", options.href);\n    }\n\n}\n\nexport function hideLoading(id) { \n    let spinnerID = \"spinner_\" + id;\n    if ( document.getElementById(spinnerID) ) {\n        document.getElementById(spinnerID).remove();\n    }\n}","//! openseadragon 3.1.0\n//! Built on 2022-06-07\n//! Git commit: v3.1.0-1-c1c380f\n//! http://openseadragon.github.io\n//! License: http://openseadragon.github.io/license/\n\n/*\n * OpenSeadragon\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Portions of this source file taken from jQuery:\n *\n * Copyright 2011 John Resig\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n * Portions of this source file taken from mattsnider.com:\n *\n * Copyright (c) 2006-2013 Matt Snider\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n/**\n * @namespace OpenSeadragon\n * @version openseadragon 3.1.0\n * @classdesc The root namespace for OpenSeadragon.  All utility methods\n * and classes are defined on or below this namespace.\n *\n */\n\n\n// Typedefs\n\n /**\n  * All required and optional settings for instantiating a new instance of an OpenSeadragon image viewer.\n  *\n  * @typedef {Object} Options\n  * @memberof OpenSeadragon\n  *\n  * @property {String} id\n  *     Id of the element to append the viewer's container element to. If not provided, the 'element' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Element} element\n  *     The element to append the viewer's container element to. If not provided, the 'id' property must be provided.\n  *     If both the element and id properties are specified, the viewer is appended to the element provided in the element property.\n  *\n  * @property {Array|String|Function|Object} [tileSources=null]\n  *     Tile source(s) to open initially. This is a complex parameter; see\n  *     {@link OpenSeadragon.Viewer#open} for details.\n  *\n  * @property {Number} [tabIndex=0]\n  *     Tabbing order index to assign to the viewer element. Positive values are selected in increasing order. When tabIndex is 0\n  *     source order is used. A negative value omits the viewer from the tabbing order.\n  *\n  * @property {Array} overlays Array of objects defining permanent overlays of\n  *     the viewer. The overlays added via this option and later removed with\n  *     {@link OpenSeadragon.Viewer#removeOverlay} will be added back when a new\n  *     image is opened.\n  *     To add overlays which can be definitively removed, one must use\n  *     {@link OpenSeadragon.Viewer#addOverlay}\n  *     If displaying a sequence of images, the overlays can be associated\n  *     with a specific page by passing the overlays array to the page's\n  *     tile source configuration.\n  *     Expected properties:\n  *     * x, y, (or px, py for pixel coordinates) to define the location.\n  *     * width, height in point if using x,y or in pixels if using px,py. If width\n  *       and height are specified, the overlay size is adjusted when zooming,\n  *       otherwise the size stays the size of the content (or the size defined by CSS).\n  *     * className to associate a class to the overlay\n  *     * id to set the overlay element. If an element with this id already exists,\n  *       it is reused, otherwise it is created. If not specified, a new element is\n  *       created.\n  *     * placement a string to define the relative position to the viewport.\n  *       Only used if no width and height are specified. Default: 'TOP_LEFT'.\n  *       See {@link OpenSeadragon.Placement} for possible values.\n  *\n  * @property {String} [xmlPath=null]\n  *     <strong>DEPRECATED</strong>. A relative path to load a DZI file from the server.\n  *     Prefer the newer Options.tileSources.\n  *\n  * @property {String} [prefixUrl='/images/']\n  *     Prepends the prefixUrl to navImages paths, which is very useful\n  *     since the default paths are rarely useful for production\n  *     environments.\n  *\n  * @property {OpenSeadragon.NavImages} [navImages]\n  *     An object with a property for each button or other built-in navigation\n  *     control, eg the current 'zoomIn', 'zoomOut', 'home', and 'fullpage'.\n  *     Each of those in turn provides an image path for each state of the button\n  *     or navigation control, eg 'REST', 'GROUP', 'HOVER', 'PRESS'. Finally the\n  *     image paths, by default assume there is a folder on the servers root path\n  *     called '/images', eg '/images/zoomin_rest.png'.  If you need to adjust\n  *     these paths, prefer setting the option.prefixUrl rather than overriding\n  *     every image path directly through this setting.\n  *\n  * @property {Boolean} [debugMode=false]\n  *     TODO: provide an in-screen panel providing event detail feedback.\n  *\n  * @property {String} [debugGridColor=['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666']]\n  *     The colors of grids in debug mode. Each tiled image's grid uses a consecutive color.\n  *     If there are more tiled images than provided colors, the color vector is recycled.\n  *\n  * @property {Boolean} [silenceMultiImageWarnings=false]\n  *     Silences warnings when calling viewport coordinate functions with multi-image.\n  *     Useful when you're overlaying multiple images on top of one another.\n  *\n  * @property {Number} [blendTime=0]\n  *     Specifies the duration of animation as higher or lower level tiles are\n  *     replacing the existing tile.\n  *\n  * @property {Boolean} [alwaysBlend=false]\n  *     Forces the tile to always blend.  By default the tiles skip blending\n  *     when the blendTime is surpassed and the current animation frame would\n  *     not complete the blend.\n  *\n  * @property {Boolean} [autoHideControls=true]\n  *     If the user stops interacting with the viewport, fade the navigation\n  *     controls.  Useful for presentation since the controls are by default\n  *     floated on top of the image the user is viewing.\n  *\n  * @property {Boolean} [immediateRender=false]\n  *     Render the best closest level first, ignoring the lowering levels which\n  *     provide the effect of very blurry to sharp. It is recommended to change\n  *     setting to true for mobile devices.\n  *\n  * @property {Number} [defaultZoomLevel=0]\n  *     Zoom level to use when image is first opened or the home button is clicked.\n  *     If 0, adjusts to fit viewer.\n  *\n  * @property {Number} [opacity=1]\n  *     Default proportional opacity of the tiled images (1=opaque, 0=hidden)\n  *     Hidden images do not draw and only load when preloading is allowed.\n  *\n  * @property {Boolean} [preload=false]\n  *     Default switch for loading hidden images (true loads, false blocks)\n  *\n  * @property {String} [compositeOperation=null]\n  *     Valid values are 'source-over', 'source-atop', 'source-in', 'source-out',\n  *     'destination-over', 'destination-atop', 'destination-in', 'destination-out',\n  *     'lighter', 'difference', 'copy', 'xor', etc.\n  *     For complete list of modes, please @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation/ globalCompositeOperation}\n  *\n  * @property {Boolean} [imageSmoothingEnabled=true]\n  *     Image smoothing for canvas rendering (only if canvas is used). Note: Ignored\n  *     by some (especially older) browsers which do not support this canvas property.\n  *     This property can be changed in {@link Viewer.Drawer.setImageSmoothingEnabled}.\n  *\n  * @property {String|CanvasGradient|CanvasPattern|Function} [placeholderFillStyle=null]\n  *     Draws a colored rectangle behind the tile if it is not loaded yet.\n  *     You can pass a CSS color value like \"#FF8800\".\n  *     When passing a function the tiledImage and canvas context are available as argument which is useful when you draw a gradient or pattern.\n  *\n  * @property {Object} [subPixelRoundingForTransparency=null]\n  *     Determines when subpixel rounding should be applied for tiles when rendering images that support transparency.\n  *     This property is a subpixel rounding enum values dictionary [{@link BROWSERS}] --> {@link SUBPIXEL_ROUNDING_OCCURRENCES}.\n  *     The key is a {@link BROWSERS} value, and the value is one of {@link SUBPIXEL_ROUNDING_OCCURRENCES},\n  *     indicating, for a given browser, when to apply subpixel rounding.\n  *     Key '*' is the fallback value for any browser not specified in the dictionary.\n  *     This property has a simple mode, and one can set it directly to\n  *     {@link SUBPIXEL_ROUNDING_OCCURRENCES.NEVER}, {@link SUBPIXEL_ROUNDING_OCCURRENCES.ONLY_AT_REST} or {@link SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS}\n  *     in order to apply this rule for all browser. The values {@link SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS} would be equivalent to { '*', SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS }.\n  *     The default is {@link SUBPIXEL_ROUNDING_OCCURRENCES.NEVER} for all browsers, for backward compatibility reason.\n  *\n  * @property {Number} [degrees=0]\n  *     Initial rotation.\n  *\n  * @property {Boolean} [flipped=false]\n  *     Initial flip state.\n  *\n  * @property {Number} [minZoomLevel=null]\n  *\n  * @property {Number} [maxZoomLevel=null]\n  *\n  * @property {Boolean} [homeFillsViewer=false]\n  *     Make the 'home' button fill the viewer and clip the image, instead\n  *     of fitting the image to the viewer and letterboxing.\n  *\n  * @property {Boolean} [panHorizontal=true]\n  *     Allow horizontal pan.\n  *\n  * @property {Boolean} [panVertical=true]\n  *     Allow vertical pan.\n  *\n  * @property {Boolean} [constrainDuringPan=false]\n  *\n  * @property {Boolean} [wrapHorizontal=false]\n  *     Set to true to force the image to wrap horizontally within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Boolean} [wrapVertical=false]\n  *     Set to true to force the image to wrap vertically within the viewport.\n  *     Useful for maps or images representing the surface of a sphere or cylinder.\n  *\n  * @property {Number} [minZoomImageRatio=0.9]\n  *     The minimum percentage ( expressed as a number between 0 and 1 ) of\n  *     the viewport height or width at which the zoom out will be constrained.\n  *     Setting it to 0, for example will allow you to zoom out infinity.\n  *\n  * @property {Number} [maxZoomPixelRatio=1.1]\n  *     The maximum ratio to allow a zoom-in to affect the highest level pixel\n  *     ratio. This can be set to Infinity to allow 'infinite' zooming into the\n  *     image though it is less effective visually if the HTML5 Canvas is not\n  *     available on the viewing device.\n  *\n  * @property {Number} [smoothTileEdgesMinZoom=1.1]\n  *     A zoom percentage ( where 1 is 100% ) of the highest resolution level.\n  *     When zoomed in beyond this value alternative compositing will be used to\n  *     smooth out the edges between tiles. This will have a performance impact.\n  *     Can be set to Infinity to turn it off.\n  *     Note: This setting is ignored on iOS devices due to a known bug (See {@link https://github.com/openseadragon/openseadragon/issues/952})\n  *\n  * @property {Boolean} [iOSDevice=?]\n  *     True if running on an iOS device, false otherwise.\n  *     Used to disable certain features that behave differently on iOS devices.\n  *\n  * @property {Boolean} [autoResize=true]\n  *     Set to false to prevent polling for viewer size changes. Useful for providing custom resize behavior.\n  *\n  * @property {Boolean} [preserveImageSizeOnResize=false]\n  *     Set to true to have the image size preserved when the viewer is resized. This requires autoResize=true (default).\n  *\n  * @property {Number} [minScrollDeltaTime=50]\n  *     Number of milliseconds between canvas-scroll events. This value helps normalize the rate of canvas-scroll\n  *     events between different devices, causing the faster devices to slow down enough to make the zoom control\n  *     more manageable.\n  *\n  * @property {Number} [rotationIncrement=90]\n  *     The number of degrees to rotate right or left when the rotate buttons or keyboard shortcuts are activated.\n  *\n  * @property {Number} [pixelsPerWheelLine=40]\n  *     For pixel-resolution scrolling devices, the number of pixels equal to one scroll line.\n  *\n  * @property {Number} [pixelsPerArrowPress=40]\n  *     The number of pixels viewport moves when an arrow key is pressed.\n  *\n  * @property {Number} [visibilityRatio=0.5]\n  *     The percentage ( as a number from 0 to 1 ) of the source image which\n  *     must be kept within the viewport.  If the image is dragged beyond that\n  *     limit, it will 'bounce' back until the minimum visibility ratio is\n  *     achieved.  Setting this to 0 and wrapHorizontal ( or wrapVertical ) to\n  *     true will provide the effect of an infinitely scrolling viewport.\n  *\n  * @property {Object} [viewportMargins={}]\n  *     Pushes the \"home\" region in from the sides by the specified amounts.\n  *     Possible subproperties (Numbers, in screen coordinates): left, top, right, bottom.\n  *\n  * @property {Number} [imageLoaderLimit=0]\n  *     The maximum number of image requests to make concurrently. By default\n  *     it is set to 0 allowing the browser to make the maximum number of\n  *     image requests in parallel as allowed by the browsers policy.\n  *\n  * @property {Number} [clickTimeThreshold=300]\n  *      The number of milliseconds within which a pointer down-up event combination\n  *      will be treated as a click gesture.\n  *\n  * @property {Number} [clickDistThreshold=5]\n  *      The maximum distance allowed between a pointer down event and a pointer up event\n  *      to be treated as a click gesture.\n  *\n  * @property {Number} [dblClickTimeThreshold=300]\n  *      The number of milliseconds within which two pointer down-up event combinations\n  *      will be treated as a double-click gesture.\n  *\n  * @property {Number} [dblClickDistThreshold=20]\n  *      The maximum distance allowed between two pointer click events\n  *      to be treated as a double-click gesture.\n  *\n  * @property {Number} [springStiffness=6.5]\n  *\n  * @property {Number} [animationTime=1.2]\n  *     Specifies the animation duration per each {@link OpenSeadragon.Spring}\n  *     which occur when the image is dragged or zoomed.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsMouse]\n  *     Settings for gestures generated by a mouse pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsMouse.dragToPan=true] - Pan on drag gesture\n  * @property {Boolean} [gestureSettingsMouse.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsMouse.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsMouse.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsMouse.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsMouse.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsMouse.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsMouse.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsMouse.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsMouse.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsTouch]\n  *     Settings for gestures generated by a touch pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsTouch.dragToPan=true] - Pan on drag gesture\n  * @property {Boolean} [gestureSettingsTouch.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsTouch.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsTouch.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsTouch.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsTouch.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsTouch.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsTouch.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsTouch.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsTouch.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsPen]\n  *     Settings for gestures generated by a pen pointer device. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsPen.dragToPan=true] - Pan on drag gesture\n  * @property {Boolean} [gestureSettingsPen.scrollToZoom=false] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsPen.clickToZoom=true] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsPen.dblClickToZoom=false] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsPen.pinchToZoom=false] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsPen.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsPen.flickEnabled=false] - Enable flick gesture\n  * @property {Number} [gestureSettingsPen.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsPen.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsPen.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {OpenSeadragon.GestureSettings} [gestureSettingsUnknown]\n  *     Settings for gestures generated by unknown pointer devices. (See {@link OpenSeadragon.GestureSettings})\n  * @property {Boolean} [gestureSettingsUnknown.dragToPan=true] - Pan on drag gesture\n  * @property {Boolean} [gestureSettingsUnknown.scrollToZoom=true] - Zoom on scroll gesture\n  * @property {Boolean} [gestureSettingsUnknown.clickToZoom=false] - Zoom on click gesture\n  * @property {Boolean} [gestureSettingsUnknown.dblClickToZoom=true] - Zoom on double-click gesture. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  * @property {Boolean} [gestureSettingsUnknown.pinchToZoom=true] - Zoom on pinch gesture\n  * @property {Boolean} [gestureSettingsUnknown.zoomToRefPoint=true] - If zoomToRefPoint is true, the zoom is centered at the pointer position. Otherwise,\n  *     the zoom is centered at the canvas center.\n  * @property {Boolean} [gestureSettingsUnknown.flickEnabled=true] - Enable flick gesture\n  * @property {Number} [gestureSettingsUnknown.flickMinSpeed=120] - If flickEnabled is true, the minimum speed to initiate a flick gesture (pixels-per-second)\n  * @property {Number} [gestureSettingsUnknown.flickMomentum=0.25] - If flickEnabled is true, the momentum factor for the flick gesture\n  * @property {Boolean} [gestureSettingsUnknown.pinchRotate=false] - If pinchRotate is true, the user will have the ability to rotate the image using their fingers.\n  *\n  * @property {Number} [zoomPerClick=2.0]\n  *     The \"zoom distance\" per mouse click or touch tap. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the click-to-zoom feature (also see gestureSettings[Mouse|Touch|Pen].clickToZoom/dblClickToZoom).</em>\n  *\n  * @property {Number} [zoomPerScroll=1.2]\n  *     The \"zoom distance\" per mouse scroll or touch pinch. <em><strong>Note:</strong> Setting this to 1.0 effectively disables the mouse-wheel zoom feature (also see gestureSettings[Mouse|Touch|Pen].scrollToZoom}).</em>\n  *\n  * @property {Number} [zoomPerSecond=1.0]\n  *     Sets the zoom amount per second when zoomIn/zoomOut buttons are pressed and held.\n  *     The value is a factor of the current zoom, so 1.0 (the default) disables zooming when the zoomIn/zoomOut buttons\n  *     are held. Higher values will increase the rate of zoom when the zoomIn/zoomOut buttons are held. Note that values\n  *     < 1.0 will reverse the operation of the zoomIn/zoomOut buttons (zoomIn button will decrease the zoom, zoomOut will\n  *     increase the zoom).\n  *\n  * @property {Boolean} [showNavigator=false]\n  *     Set to true to make the navigator minimap appear.\n  *\n  * @property {String} [navigatorId=navigator-GENERATED DATE]\n  *     The ID of a div to hold the navigator minimap.\n  *     If an ID is specified, the navigatorPosition, navigatorSizeRatio, navigatorMaintainSizeRatio, navigator[Top|Left|Height|Width] and navigatorAutoFade options will be ignored.\n  *     If an ID is not specified, a div element will be generated and placed on top of the main image.\n  *\n  * @property {String} [navigatorPosition='TOP_RIGHT']\n  *     Valid values are 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', or 'ABSOLUTE'.<br>\n  *     If 'ABSOLUTE' is specified, then navigator[Top|Left|Height|Width] determines the size and position of the navigator minimap in the viewer, and navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.<br>\n  *     For 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', and 'BOTTOM_RIGHT', the navigatorSizeRatio or navigator[Height|Width] values determine the size of the navigator minimap.\n  *\n  * @property {Number} [navigatorSizeRatio=0.2]\n  *     Ratio of navigator size to viewer size. Ignored if navigator[Height|Width] are specified.\n  *\n  * @property {Boolean} [navigatorMaintainSizeRatio=false]\n  *     If true, the navigator minimap is resized (using navigatorSizeRatio) when the viewer size changes.\n  *\n  * @property {Number|String} [navigatorTop=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorLeft=null]\n  *     Specifies the location of the navigator minimap (see navigatorPosition).\n  *\n  * @property {Number|String} [navigatorHeight=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Number|String} [navigatorWidth=null]\n  *     Specifies the size of the navigator minimap (see navigatorPosition).\n  *     If specified, navigatorSizeRatio and navigatorMaintainSizeRatio are ignored.\n  *\n  * @property {Boolean} [navigatorAutoResize=true]\n  *     Set to false to prevent polling for navigator size changes. Useful for providing custom resize behavior.\n  *     Setting to false can also improve performance when the navigator is configured to a fixed size.\n  *\n  * @property {Boolean} [navigatorAutoFade=true]\n  *     If the user stops interacting with the viewport, fade the navigator minimap.\n  *     Setting to false will make the navigator minimap always visible.\n  *\n  * @property {Boolean} [navigatorRotate=true]\n  *     If true, the navigator will be rotated together with the viewer.\n  *\n  * @property {String} [navigatorBackground='#000']\n  *     Specifies the background color of the navigator minimap\n  *\n  * @property {Number} [navigatorOpacity=0.8]\n  *     Specifies the opacity of the navigator minimap.\n  *\n  * @property {String} [navigatorBorderColor='#555']\n  *     Specifies the border color of the navigator minimap\n  *\n  * @property {String} [navigatorDisplayRegionColor='#900']\n  *     Specifies the border color of the display region rectangle of the navigator minimap\n  *\n  * @property {Number} [controlsFadeDelay=2000]\n  *     The number of milliseconds to wait once the user has stopped interacting\n  *     with the interface before beginning to fade the controls. Assumes\n  *     showNavigationControl and autoHideControls are both true.\n  *\n  * @property {Number} [controlsFadeLength=1500]\n  *     The number of milliseconds to animate the controls fading out.\n  *\n  * @property {Number} [maxImageCacheCount=200]\n  *     The max number of images we should keep in memory (per drawer).\n  *\n  * @property {Number} [timeout=30000]\n  *     The max number of milliseconds that an image job may take to complete.\n  *\n  * @property {Boolean} [useCanvas=true]\n  *     Set to false to not use an HTML canvas element for image rendering even if canvas is supported.\n  *\n  * @property {Number} [minPixelRatio=0.5]\n  *     The higher the minPixelRatio, the lower the quality of the image that\n  *     is considered sufficient to stop rendering a given zoom level.  For\n  *     example, if you are targeting mobile devices with less bandwidth you may\n  *     try setting this to 1.5 or higher.\n  *\n  * @property {Boolean} [mouseNavEnabled=true]\n  *     Is the user able to interact with the image via mouse or touch. Default\n  *     interactions include draging the image in a plane, and zooming in toward\n  *     and away from the image.\n  *\n  * @property {Boolean} [showNavigationControl=true]\n  *     Set to false to prevent the appearance of the default navigation controls.<br>\n  *     Note that if set to false, the customs buttons set by the options\n  *     zoomInButton, zoomOutButton etc, are rendered inactive.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [navigationControlAnchor=TOP_LEFT]\n  *     Placement of the default navigation controls.\n  *     To set the placement of the sequence controls, see the\n  *     sequenceControlAnchor option.\n  *\n  * @property {Boolean} [showZoomControl=true]\n  *     If true then + and - buttons to zoom in and out are displayed.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showHomeControl=true]\n  *     If true then the 'Go home' button is displayed to go back to the original\n  *     zoom and pan.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showFullPageControl=true]\n  *     If true then the 'Toggle full page' button is displayed to switch\n  *     between full page and normal mode.<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showRotationControl=false]\n  *     If true then the rotate left/right controls will be displayed as part of the\n  *     standard controls. This is also subject to the browser support for rotate\n  *     (e.g. viewer.drawer.canRotate()).<br>\n  *     Note: {@link OpenSeadragon.Options.showNavigationControl} is overriding\n  *     this setting when set to false.\n  *\n  * @property {Boolean} [showFlipControl=false]\n  *     If true then the flip controls will be displayed as part of the\n  *     standard controls.\n  *\n  * @property {Boolean} [showSequenceControl=true]\n  *     If sequenceMode is true, then provide buttons for navigating forward and\n  *     backward through the images.\n  *\n  * @property {OpenSeadragon.ControlAnchor} [sequenceControlAnchor=TOP_LEFT]\n  *     Placement of the default sequence controls.\n  *\n  * @property {Boolean} [navPrevNextWrap=false]\n  *     If true then the 'previous' button will wrap to the last image when\n  *     viewing the first image and the 'next' button will wrap to the first\n  *     image when viewing the last image.\n  *\n  * @property {String} zoomInButton\n  *     Set the id of the custom 'Zoom in' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} zoomOutButton\n  *     Set the id of the custom 'Zoom out' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} homeButton\n  *     Set the id of the custom 'Go home' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} fullPageButton\n  *     Set the id of the custom 'Toggle full page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateLeftButton\n  *     Set the id of the custom 'Rotate left' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} rotateRightButton\n  *     Set the id of the custom 'Rotate right' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} previousButton\n  *     Set the id of the custom 'Previous page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {String} nextButton\n  *     Set the id of the custom 'Next page' button to use.\n  *     This is useful to have a custom button anywhere in the web page.<br>\n  *     To only change the button images, consider using\n  *     {@link OpenSeadragon.Options.navImages}\n  *\n  * @property {Boolean} [sequenceMode=false]\n  *     Set to true to have the viewer treat your tilesources as a sequence of images to\n  *     be opened one at a time rather than all at once.\n  *\n  * @property {Number} [initialPage=0]\n  *     If sequenceMode is true, display this page initially.\n  *\n  * @property {Boolean} [preserveViewport=false]\n  *     If sequenceMode is true, then normally navigating through each image resets the\n  *     viewport to 'home' position.  If preserveViewport is set to true, then the viewport\n  *     position is preserved when navigating between images in the sequence.\n  *\n  * @property {Boolean} [preserveOverlays=false]\n  *     If sequenceMode is true, then normally navigating through each image\n  *     resets the overlays.\n  *     If preserveOverlays is set to true, then the overlays added with {@link OpenSeadragon.Viewer#addOverlay}\n  *     are preserved when navigating between images in the sequence.\n  *     Note: setting preserveOverlays overrides any overlays specified in the global\n  *     \"overlays\" option for the Viewer. It's also not compatible with specifying\n  *     per-tileSource overlays via the options, as those overlays will persist\n  *     even after the tileSource is closed.\n  *\n  * @property {Boolean} [showReferenceStrip=false]\n  *     If sequenceMode is true, then display a scrolling strip of image thumbnails for\n  *     navigating through the images.\n  *\n  * @property {String} [referenceStripScroll='horizontal']\n  *\n  * @property {Element} [referenceStripElement=null]\n  *\n  * @property {Number} [referenceStripHeight=null]\n  *\n  * @property {Number} [referenceStripWidth=null]\n  *\n  * @property {String} [referenceStripPosition='BOTTOM_LEFT']\n  *\n  * @property {Number} [referenceStripSizeRatio=0.2]\n  *\n  * @property {Boolean} [collectionMode=false]\n  *     Set to true to have the viewer arrange your TiledImages in a grid or line.\n  *\n  * @property {Number} [collectionRows=3]\n  *     If collectionMode is true, specifies how many rows the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many columns instead.\n  *\n  * @property {Number} [collectionColumns=0]\n  *     If collectionMode is true, specifies how many columns the grid should have. Use 1 to make a line.\n  *     If collectionLayout is 'vertical', specifies how many rows instead. Ignored if collectionRows is not set to a falsy value.\n  *\n  * @property {String} [collectionLayout='horizontal']\n  *     If collectionMode is true, specifies whether to arrange vertically or horizontally.\n  *\n  * @property {Number} [collectionTileSize=800]\n  *     If collectionMode is true, specifies the size, in viewport coordinates, for each TiledImage to fit into.\n  *     The TiledImage will be centered within a square of the specified size.\n  *\n  * @property {Number} [collectionTileMargin=80]\n  *     If collectionMode is true, specifies the margin, in viewport coordinates, between each TiledImage.\n  *\n  * @property {String|Boolean} [crossOriginPolicy=false]\n  *     Valid values are 'Anonymous', 'use-credentials', and false. If false, canvas requests will\n  *     not use CORS, and the canvas will be tainted.\n  *\n  * @property {Boolean} [ajaxWithCredentials=false]\n  *     Whether to set the withCredentials XHR flag for AJAX requests.\n  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n  *\n  * @property {Boolean} [loadTilesWithAjax=false]\n  *     Whether to load tile data using AJAX requests.\n  *     Note that this can be overridden at the {@link OpenSeadragon.TileSource} level.\n  *\n  * @property {Object} [ajaxHeaders={}]\n  *     A set of headers to include when making AJAX requests for tile sources or tiles.\n  *\n  * @property {Boolean} [splitHashDataForPost=false]\n  *     Allows to treat _first_ hash ('#') symbol as a separator for POST data:\n  *     URL to be opened by a {@link OpenSeadragon.TileSource} can thus look like: http://some.url#postdata=here.\n  *     The whole URL is used to fetch image info metadata and it is then split to 'http://some.url' and\n  *     'postdata=here'; post data is given to the {@link OpenSeadragon.TileSource} of the choice and can be further\n  *     used within tile requests (see TileSource methods).\n  *     NOTE: {@link OpenSeadragon.TileSource.prototype.configure} return value should contain the post data\n  *     if you want to use it later - so that it is given to your constructor later.\n  *     NOTE: usually, post data is expected to be ampersand-separated (just like GET parameters), and is NOT USED\n  *     to fetch tile image data unless explicitly programmed, or if loadTilesWithAjax=false 4\n  *     (but it is still used for the initial image info request).\n  *     NOTE: passing POST data from URL by this feature only supports string values, however,\n  *     TileSource can send any data using POST as long as the header is correct\n  *     (@see OpenSeadragon.TileSource.prototype.getTilePostData)\n  */\n\n /**\n  * Settings for gestures generated by a pointer device.\n  *\n  * @typedef {Object} GestureSettings\n  * @memberof OpenSeadragon\n  *\n  * @property {Boolean} dragToPan\n  *     Set to false to disable panning on drag gestures.\n  *\n  * @property {Boolean} scrollToZoom\n  *     Set to false to disable zooming on scroll gestures.\n  *\n  * @property {Boolean} clickToZoom\n  *     Set to false to disable zooming on click gestures.\n  *\n  * @property {Boolean} dblClickToZoom\n  *     Set to false to disable zooming on double-click gestures. Note: If set to true\n  *     then clickToZoom should be set to false to prevent multiple zooms.\n  *\n  * @property {Boolean} pinchToZoom\n  *     Set to false to disable zooming on pinch gestures.\n  *\n  * @property {Boolean} flickEnabled\n  *     Set to false to disable the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMinSpeed\n  *     If flickEnabled is true, the minimum speed (in pixels-per-second) required to cause the kinetic panning effect (flick) at the end of a drag gesture.\n  *\n  * @property {Number} flickMomentum\n  *     If flickEnabled is true, a constant multiplied by the velocity to determine the distance of the kinetic panning effect (flick) at the end of a drag gesture.\n  *     A larger value will make the flick feel \"lighter\", while a smaller value will make the flick feel \"heavier\".\n  *     Note: springStiffness and animationTime also affect the \"spring\" used to stop the flick animation.\n  *\n  */\n\n/**\n  * The names for the image resources used for the image navigation buttons.\n  *\n  * @typedef {Object} NavImages\n  * @memberof OpenSeadragon\n  *\n  * @property {Object} zoomIn - Images for the zoom-in button.\n  * @property {String} zoomIn.REST\n  * @property {String} zoomIn.GROUP\n  * @property {String} zoomIn.HOVER\n  * @property {String} zoomIn.DOWN\n  *\n  * @property {Object} zoomOut - Images for the zoom-out button.\n  * @property {String} zoomOut.REST\n  * @property {String} zoomOut.GROUP\n  * @property {String} zoomOut.HOVER\n  * @property {String} zoomOut.DOWN\n  *\n  * @property {Object} home - Images for the home button.\n  * @property {String} home.REST\n  * @property {String} home.GROUP\n  * @property {String} home.HOVER\n  * @property {String} home.DOWN\n  *\n  * @property {Object} fullpage - Images for the full-page button.\n  * @property {String} fullpage.REST\n  * @property {String} fullpage.GROUP\n  * @property {String} fullpage.HOVER\n  * @property {String} fullpage.DOWN\n  *\n  * @property {Object} rotateleft - Images for the rotate left button.\n  * @property {String} rotateleft.REST\n  * @property {String} rotateleft.GROUP\n  * @property {String} rotateleft.HOVER\n  * @property {String} rotateleft.DOWN\n  *\n  * @property {Object} rotateright - Images for the rotate right button.\n  * @property {String} rotateright.REST\n  * @property {String} rotateright.GROUP\n  * @property {String} rotateright.HOVER\n  * @property {String} rotateright.DOWN\n  *\n  * @property {Object} flip - Images for the flip button.\n  * @property {String} flip.REST\n  * @property {String} flip.GROUP\n  * @property {String} flip.HOVER\n  * @property {String} flip.DOWN\n  *\n  * @property {Object} previous - Images for the previous button.\n  * @property {String} previous.REST\n  * @property {String} previous.GROUP\n  * @property {String} previous.HOVER\n  * @property {String} previous.DOWN\n  *\n  * @property {Object} next - Images for the next button.\n  * @property {String} next.REST\n  * @property {String} next.GROUP\n  * @property {String} next.HOVER\n  * @property {String} next.DOWN\n  *\n  */\n\n/* eslint-disable no-redeclare */\nfunction OpenSeadragon( options ){\n    return new OpenSeadragon.Viewer( options );\n}\n\n(function( $ ){\n\n\n    /**\n     * The OpenSeadragon version.\n     *\n     * @member {Object} OpenSeadragon.version\n     * @property {String} versionStr - The version number as a string ('major.minor.revision').\n     * @property {Number} major - The major version number.\n     * @property {Number} minor - The minor version number.\n     * @property {Number} revision - The revision number.\n     * @since 1.0.0\n     */\n    $.version = {\n        versionStr: '3.1.0',\n        major: parseInt('3', 10),\n        minor: parseInt('1', 10),\n        revision: parseInt('0', 10)\n    };\n\n\n    /**\n     * Taken from jquery 1.6.1\n     * [[Class]] -> type pairs\n     * @private\n     */\n    var class2type = {\n            '[object Boolean]':     'boolean',\n            '[object Number]':      'number',\n            '[object String]':      'string',\n            '[object Function]':    'function',\n            '[object Array]':       'array',\n            '[object Date]':        'date',\n            '[object RegExp]':      'regexp',\n            '[object Object]':      'object'\n        },\n        // Save a reference to some core methods\n        toString    = Object.prototype.toString,\n        hasOwn      = Object.prototype.hasOwnProperty;\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isFunction\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isFunction = function( obj ) {\n        return $.type(obj) === \"function\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isArray\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isArray = Array.isArray || function( obj ) {\n        return $.type(obj) === \"array\";\n    };\n\n\n    /**\n     * A crude way of determining if an object is a window.\n     * Taken from jQuery 1.6.1\n     * @function isWindow\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isWindow = function( obj ) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function type\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.type = function( obj ) {\n        return ( obj === null ) || ( obj === undefined ) ?\n            String( obj ) :\n            class2type[ toString.call(obj) ] || \"object\";\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isPlainObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isPlainObject = function( obj ) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if ( !obj || OpenSeadragon.type(obj) !== \"object\" || obj.nodeType || $.isWindow( obj ) ) {\n            return false;\n        }\n\n        // Not own constructor property must be Object\n        if ( obj.constructor &&\n            !hasOwn.call(obj, \"constructor\") &&\n            !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var lastKey;\n        for (var key in obj ) {\n            lastKey = key;\n        }\n\n        return lastKey === undefined || hasOwn.call( obj, lastKey );\n    };\n\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function isEmptyObject\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.isEmptyObject = function( obj ) {\n        for ( var name in obj ) {\n            return false;\n        }\n        return true;\n    };\n\n    /**\n     * Shim around Object.freeze. Does nothing if Object.freeze is not supported.\n     * @param {Object} obj The object to freeze.\n     * @return {Object} obj The frozen object.\n     */\n    $.freezeObject = function(obj) {\n        if (Object.freeze) {\n            $.freezeObject = Object.freeze;\n        } else {\n            $.freezeObject = function(obj) {\n                return obj;\n            };\n        }\n        return $.freezeObject(obj);\n    };\n\n    /**\n     * True if the browser supports the HTML5 canvas element\n     * @member {Boolean} supportsCanvas\n     * @memberof OpenSeadragon\n     */\n    $.supportsCanvas = (function () {\n        var canvasElement = document.createElement( 'canvas' );\n        return !!( $.isFunction( canvasElement.getContext ) &&\n                    canvasElement.getContext( '2d' ) );\n    }());\n\n    /**\n     * Test whether the submitted canvas is tainted or not.\n     * @argument {Canvas} canvas The canvas to test.\n     * @returns {Boolean} True if the canvas is tainted.\n     */\n    $.isCanvasTainted = function(canvas) {\n        var isTainted = false;\n        try {\n            // We test if the canvas is tainted by retrieving data from it.\n            // An exception will be raised if the canvas is tainted.\n            canvas.getContext('2d').getImageData(0, 0, 1, 1);\n        } catch (e) {\n            isTainted = true;\n        }\n        return isTainted;\n    };\n\n    /**\n     * True if the browser supports the EventTarget.addEventListener() method\n     * @member {Boolean} supportsAddEventListener\n     * @memberof OpenSeadragon\n     */\n    $.supportsAddEventListener = (function () {\n        return !!(document.documentElement.addEventListener && document.addEventListener);\n    }());\n\n    /**\n     * True if the browser supports the EventTarget.removeEventListener() method\n     * @member {Boolean} supportsRemoveEventListener\n     * @memberof OpenSeadragon\n     */\n    $.supportsRemoveEventListener = (function () {\n        return !!(document.documentElement.removeEventListener && document.removeEventListener);\n    }());\n\n    /**\n     * True if the browser supports the newer EventTarget.addEventListener options argument\n     * @member {Boolean} supportsEventListenerOptions\n     * @memberof OpenSeadragon\n     */\n    $.supportsEventListenerOptions = (function () {\n        var supported = 0;\n\n        if ( $.supportsAddEventListener ) {\n            try {\n                var options = {\n                    get capture() {\n                        supported++;\n                        return false;\n                    },\n                    get once() {\n                        supported++;\n                        return false;\n                    },\n                    get passive() {\n                        supported++;\n                        return false;\n                    }\n                };\n                window.addEventListener(\"test\", null, options);\n                window.removeEventListener(\"test\", null, options);\n            } catch ( e ) {\n                supported = 0;\n            }\n        }\n\n        return supported >= 3;\n    }());\n\n    /**\n     * A ratio comparing the device screen's pixel density to the canvas's backing store pixel density,\n     * clamped to a minimum of 1. Defaults to 1 if canvas isn't supported by the browser.\n     * @member {Number} pixelDensityRatio\n     * @memberof OpenSeadragon\n     */\n    $.getCurrentPixelDensityRatio = function() {\n        if ( $.supportsCanvas ) {\n            var context = document.createElement('canvas').getContext('2d');\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n                                    context.mozBackingStorePixelRatio ||\n                                    context.msBackingStorePixelRatio ||\n                                    context.oBackingStorePixelRatio ||\n                                    context.backingStorePixelRatio || 1;\n            return Math.max(devicePixelRatio, 1) / backingStoreRatio;\n        } else {\n            return 1;\n        }\n    };\n\n    /**\n     * @member {Number} pixelDensityRatio\n     * @memberof OpenSeadragon\n     */\n    $.pixelDensityRatio = $.getCurrentPixelDensityRatio();\n\n}( OpenSeadragon ));\n\n/**\n *  This closure defines all static methods available to the OpenSeadragon\n *  namespace.  Many, if not most, are taken directly from jQuery for use\n *  to simplify and reduce common programming patterns.  More static methods\n *  from jQuery may eventually make their way into this though we are\n *  attempting to avoid an explicit dependency on jQuery only because\n *  OpenSeadragon is a broadly useful code base and would be made less broad\n *  by requiring jQuery fully.\n *\n *  Some static methods have also been refactored from the original OpenSeadragon\n *  project.\n */\n(function( $ ){\n\n    /**\n     * Taken from jQuery 1.6.1\n     * @function extend\n     * @memberof OpenSeadragon\n     * @see {@link http://www.jquery.com/ jQuery}\n     */\n    $.extend = function() {\n        var options,\n            name,\n            src,\n            copy,\n            copyIsArray,\n            clone,\n            target  = arguments[ 0 ] || {},\n            length  = arguments.length,\n            deep    = false,\n            i       = 1;\n\n        // Handle a deep copy situation\n        if ( typeof target === \"boolean\" ) {\n            deep    = target;\n            target  = arguments[ 1 ] || {};\n            // skip the boolean and the target\n            i = 2;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if ( typeof target !== \"object\" && !OpenSeadragon.isFunction( target ) ) {\n            target = {};\n        }\n\n        // extend jQuery itself if only one argument is passed\n        if ( length === i ) {\n            target = this;\n            --i;\n        }\n\n        for ( ; i < length; i++ ) {\n            // Only deal with non-null/undefined values\n            options = arguments[ i ];\n            if ( options !== null || options !== undefined ) {\n                // Extend the base object\n                for ( name in options ) {\n                    src = target[ name ];\n                    copy = options[ name ];\n\n                    // Prevent never-ending loop\n                    if ( target === copy ) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if ( deep && copy && ( OpenSeadragon.isPlainObject( copy ) || ( copyIsArray = OpenSeadragon.isArray( copy ) ) ) ) {\n                        if ( copyIsArray ) {\n                            copyIsArray = false;\n                            clone = src && OpenSeadragon.isArray( src ) ? src : [];\n\n                        } else {\n                            clone = src && OpenSeadragon.isPlainObject( src ) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[ name ] = OpenSeadragon.extend( deep, clone, copy );\n\n                    // Don't bring in undefined values\n                    } else if ( copy !== undefined ) {\n                        target[ name ] = copy;\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    };\n\n    var isIOSDevice = function () {\n        if (typeof navigator !== 'object') {\n            return false;\n        }\n        var userAgent = navigator.userAgent;\n        if (typeof userAgent !== 'string') {\n            return false;\n        }\n        return userAgent.indexOf('iPhone') !== -1 ||\n               userAgent.indexOf('iPad') !== -1 ||\n               userAgent.indexOf('iPod') !== -1;\n    };\n\n    $.extend( $, /** @lends OpenSeadragon */{\n        /**\n         * The default values for the optional settings documented at {@link OpenSeadragon.Options}.\n         * @static\n         * @type {Object}\n         */\n        DEFAULT_SETTINGS: {\n            //DATA SOURCE DETAILS\n            xmlPath:                null,\n            tileSources:            null,\n            tileHost:               null,\n            initialPage:            0,\n            crossOriginPolicy:      false,\n            ajaxWithCredentials:    false,\n            loadTilesWithAjax:      false,\n            ajaxHeaders:            {},\n            splitHashDataForPost:   false,\n\n            //PAN AND ZOOM SETTINGS AND CONSTRAINTS\n            panHorizontal:          true,\n            panVertical:            true,\n            constrainDuringPan:     false,\n            wrapHorizontal:         false,\n            wrapVertical:           false,\n            visibilityRatio:        0.5, //-> how much of the viewer can be negative space\n            minPixelRatio:          0.5, //->closer to 0 draws tiles meant for a higher zoom at this zoom\n            defaultZoomLevel:       0,\n            minZoomLevel:           null,\n            maxZoomLevel:           null,\n            homeFillsViewer:        false,\n\n            //UI RESPONSIVENESS AND FEEL\n            clickTimeThreshold:     300,\n            clickDistThreshold:     5,\n            dblClickTimeThreshold:  300,\n            dblClickDistThreshold:  20,\n            springStiffness:        6.5,\n            animationTime:          1.2,\n            gestureSettingsMouse:   {\n                dragToPan: true,\n                scrollToZoom: true,\n                clickToZoom: true,\n                dblClickToZoom: false,\n                pinchToZoom: false,\n                zoomToRefPoint: true,\n                flickEnabled: false,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsTouch:   {\n                dragToPan: true,\n                scrollToZoom: false,\n                clickToZoom: false,\n                dblClickToZoom: true,\n                pinchToZoom: true,\n                zoomToRefPoint: true,\n                flickEnabled: true,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsPen:     {\n                dragToPan: true,\n                scrollToZoom: false,\n                clickToZoom: true,\n                dblClickToZoom: false,\n                pinchToZoom: false,\n                zoomToRefPoint: true,\n                flickEnabled: false,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            gestureSettingsUnknown: {\n                dragToPan: true,\n                scrollToZoom: false,\n                clickToZoom: false,\n                dblClickToZoom: true,\n                pinchToZoom: true,\n                zoomToRefPoint: true,\n                flickEnabled: true,\n                flickMinSpeed: 120,\n                flickMomentum: 0.25,\n                pinchRotate: false\n            },\n            zoomPerClick:           2,\n            zoomPerScroll:          1.2,\n            zoomPerSecond:          1.0,\n            blendTime:              0,\n            alwaysBlend:            false,\n            autoHideControls:       true,\n            immediateRender:        false,\n            minZoomImageRatio:      0.9, //-> closer to 0 allows zoom out to infinity\n            maxZoomPixelRatio:      1.1, //-> higher allows 'over zoom' into pixels\n            smoothTileEdgesMinZoom: 1.1, //-> higher than maxZoomPixelRatio disables it\n            iOSDevice:              isIOSDevice(),\n            pixelsPerWheelLine:     40,\n            pixelsPerArrowPress:    40,\n            autoResize:             true,\n            preserveImageSizeOnResize: false, // requires autoResize=true\n            minScrollDeltaTime:     50,\n            rotationIncrement:      90,\n\n            //DEFAULT CONTROL SETTINGS\n            showSequenceControl:     true,  //SEQUENCE\n            sequenceControlAnchor:   null,  //SEQUENCE\n            preserveViewport:        false, //SEQUENCE\n            preserveOverlays:        false, //SEQUENCE\n            navPrevNextWrap:         false, //SEQUENCE\n            showNavigationControl:   true,  //ZOOM/HOME/FULL/ROTATION\n            navigationControlAnchor: null,  //ZOOM/HOME/FULL/ROTATION\n            showZoomControl:         true,  //ZOOM\n            showHomeControl:         true,  //HOME\n            showFullPageControl:     true,  //FULL\n            showRotationControl:     false, //ROTATION\n            showFlipControl:         false,  //FLIP\n            controlsFadeDelay:       2000,  //ZOOM/HOME/FULL/SEQUENCE\n            controlsFadeLength:      1500,  //ZOOM/HOME/FULL/SEQUENCE\n            mouseNavEnabled:         true,  //GENERAL MOUSE INTERACTIVITY\n\n            //VIEWPORT NAVIGATOR SETTINGS\n            showNavigator:              false,\n            navigatorId:                null,\n            navigatorPosition:          null,\n            navigatorSizeRatio:         0.2,\n            navigatorMaintainSizeRatio: false,\n            navigatorTop:               null,\n            navigatorLeft:              null,\n            navigatorHeight:            null,\n            navigatorWidth:             null,\n            navigatorAutoResize:        true,\n            navigatorAutoFade:          true,\n            navigatorRotate:            true,\n            navigatorBackground:        '#000',\n            navigatorOpacity:           0.8,\n            navigatorBorderColor:       '#555',\n            navigatorDisplayRegionColor: '#900',\n\n            // INITIAL ROTATION\n            degrees:                    0,\n\n            // INITIAL FLIP STATE\n            flipped:                    false,\n\n            // APPEARANCE\n            opacity:                           1,\n            preload:                           false,\n            compositeOperation:                null,\n            imageSmoothingEnabled:             true,\n            placeholderFillStyle:              null,\n            subPixelRoundingForTransparency:   null,\n\n            //REFERENCE STRIP SETTINGS\n            showReferenceStrip:          false,\n            referenceStripScroll:       'horizontal',\n            referenceStripElement:       null,\n            referenceStripHeight:        null,\n            referenceStripWidth:         null,\n            referenceStripPosition:      'BOTTOM_LEFT',\n            referenceStripSizeRatio:     0.2,\n\n            //COLLECTION VISUALIZATION SETTINGS\n            collectionRows:         3, //or columns depending on layout\n            collectionColumns:      0, //columns in horizontal layout, rows in vertical layout\n            collectionLayout:       'horizontal', //vertical\n            collectionMode:         false,\n            collectionTileSize:     800,\n            collectionTileMargin:   80,\n\n            //PERFORMANCE SETTINGS\n            imageLoaderLimit:       0,\n            maxImageCacheCount:     200,\n            timeout:                30000,\n            useCanvas:              true,  // Use canvas element for drawing if available\n\n            //INTERFACE RESOURCE SETTINGS\n            prefixUrl:              \"/images/\",\n            navImages: {\n                zoomIn: {\n                    REST:   'zoomin_rest.png',\n                    GROUP:  'zoomin_grouphover.png',\n                    HOVER:  'zoomin_hover.png',\n                    DOWN:   'zoomin_pressed.png'\n                },\n                zoomOut: {\n                    REST:   'zoomout_rest.png',\n                    GROUP:  'zoomout_grouphover.png',\n                    HOVER:  'zoomout_hover.png',\n                    DOWN:   'zoomout_pressed.png'\n                },\n                home: {\n                    REST:   'home_rest.png',\n                    GROUP:  'home_grouphover.png',\n                    HOVER:  'home_hover.png',\n                    DOWN:   'home_pressed.png'\n                },\n                fullpage: {\n                    REST:   'fullpage_rest.png',\n                    GROUP:  'fullpage_grouphover.png',\n                    HOVER:  'fullpage_hover.png',\n                    DOWN:   'fullpage_pressed.png'\n                },\n                rotateleft: {\n                    REST:   'rotateleft_rest.png',\n                    GROUP:  'rotateleft_grouphover.png',\n                    HOVER:  'rotateleft_hover.png',\n                    DOWN:   'rotateleft_pressed.png'\n                },\n                rotateright: {\n                    REST:   'rotateright_rest.png',\n                    GROUP:  'rotateright_grouphover.png',\n                    HOVER:  'rotateright_hover.png',\n                    DOWN:   'rotateright_pressed.png'\n                },\n                flip: { // Flip icon designed by Yaroslav Samoylov from the Noun Project and modified by Nelson Campos ncampos@criteriamarathon.com, https://thenounproject.com/term/flip/136289/\n                    REST:   'flip_rest.png',\n                    GROUP:  'flip_grouphover.png',\n                    HOVER:  'flip_hover.png',\n                    DOWN:   'flip_pressed.png'\n                },\n                previous: {\n                    REST:   'previous_rest.png',\n                    GROUP:  'previous_grouphover.png',\n                    HOVER:  'previous_hover.png',\n                    DOWN:   'previous_pressed.png'\n                },\n                next: {\n                    REST:   'next_rest.png',\n                    GROUP:  'next_grouphover.png',\n                    HOVER:  'next_hover.png',\n                    DOWN:   'next_pressed.png'\n                }\n            },\n\n            //DEVELOPER SETTINGS\n            debugMode:              false,\n            debugGridColor:         ['#437AB2', '#1B9E77', '#D95F02', '#7570B3', '#E7298A', '#66A61E', '#E6AB02', '#A6761D', '#666666'],\n            silenceMultiImageWarnings: false\n\n        },\n\n\n        /**\n         * TODO: get rid of this.  I can't see how it's required at all.  Looks\n         *       like an early legacy code artifact.\n         * @static\n         * @ignore\n         */\n        SIGNAL: \"----seadragon----\",\n\n\n        /**\n         * Returns a function which invokes the method as if it were a method belonging to the object.\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @returns {Function}\n         */\n        delegate: function( object, method ) {\n            return function(){\n                var args = arguments;\n                if ( args === undefined ){\n                    args = [];\n                }\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * An enumeration of Browser vendors.\n         * @static\n         * @type {Object}\n         * @property {Number} UNKNOWN\n         * @property {Number} IE\n         * @property {Number} FIREFOX\n         * @property {Number} SAFARI\n         * @property {Number} CHROME\n         * @property {Number} OPERA\n         * @property {Number} EDGE\n         * @property {Number} CHROMEEDGE\n         */\n        BROWSERS: {\n            UNKNOWN:    0,\n            IE:         1,\n            FIREFOX:    2,\n            SAFARI:     3,\n            CHROME:     4,\n            OPERA:      5,\n            EDGE:       6,\n            CHROMEEDGE: 7\n        },\n\n        /**\n         * An enumeration of when subpixel rounding should occur.\n         * @static\n         * @type {Object}\n         * @property {Number} NEVER Never apply subpixel rounding for transparency.\n         * @property {Number} ONLY_AT_REST Do not apply subpixel rounding for transparency during animation (panning, zoom, rotation) and apply it once animation is over.\n         * @property {Number} ALWAYS Apply subpixel rounding for transparency during animation and when animation is over.\n         */\n        SUBPIXEL_ROUNDING_OCCURRENCES: {\n            NEVER:        0,\n            ONLY_AT_REST: 1,\n            ALWAYS:       2\n        },\n\n        /**\n         * Keep track of which {@link Viewer}s have been created.\n         * - Key: {@link Element} to which a Viewer is attached.\n         * - Value: {@link Viewer} of the element defined by the key.\n         * @private\n         * @static\n         * @type {Object}\n         */\n        _viewers: new Map(),\n\n       /**\n         * Returns the {@link Viewer} attached to a given DOM element. If there is\n         * no viewer attached to the provided element, undefined is returned.\n         * @function\n         * @param {String|Element} element Accepts an id or element.\n         * @returns {Viewer} The viewer attached to the given element, or undefined.\n         */\n        getViewer: function(element) {\n            return $._viewers.get(this.getElement(element));\n        },\n\n        /**\n         * Returns a DOM Element for the given id or element.\n         * @function\n         * @param {String|Element} element Accepts an id or element.\n         * @returns {Element} The element with the given id, null, or the element itself.\n         */\n        getElement: function( element ) {\n            if ( typeof ( element ) === \"string\" ) {\n                element = document.getElementById( element );\n            }\n            return element;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element.\n         * @function\n         * @param {Element|String} element - the element we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element.\n         */\n        getElementPosition: function( element ) {\n            var result = new $.Point(),\n                isFixed,\n                offsetParent;\n\n            element      = $.getElement( element );\n            isFixed      = $.getElementStyle( element ).position === \"fixed\";\n            offsetParent = getOffsetParent( element, isFixed );\n\n            while ( offsetParent ) {\n\n                result.x += element.offsetLeft;\n                result.y += element.offsetTop;\n\n                if ( isFixed ) {\n                    result = result.plus( $.getPageScroll() );\n                }\n\n                element = offsetParent;\n                isFixed = $.getElementStyle( element ).position === \"fixed\";\n                offsetParent = getOffsetParent( element, isFixed );\n            }\n\n            return result;\n        },\n\n\n        /**\n         * Determines the position of the upper-left corner of the element adjusted for current page and/or element scroll.\n         * @function\n         * @param {Element|String} element - the element we want the position for.\n         * @returns {OpenSeadragon.Point} - the position of the upper left corner of the element adjusted for current page and/or element scroll.\n         */\n        getElementOffset: function( element ) {\n            element = $.getElement( element );\n\n            var doc = element && element.ownerDocument,\n                docElement,\n                win,\n                boundingRect = { top: 0, left: 0 };\n\n            if ( !doc ) {\n                return new $.Point();\n            }\n\n            docElement = doc.documentElement;\n\n            if ( typeof element.getBoundingClientRect !== typeof undefined ) {\n                boundingRect = element.getBoundingClientRect();\n            }\n\n            win = ( doc === doc.window ) ?\n                doc :\n                ( doc.nodeType === 9 ) ?\n                    doc.defaultView || doc.parentWindow :\n                    false;\n\n            return new $.Point(\n                boundingRect.left + ( win.pageXOffset || docElement.scrollLeft ) - ( docElement.clientLeft || 0 ),\n                boundingRect.top + ( win.pageYOffset || docElement.scrollTop ) - ( docElement.clientTop || 0 )\n            );\n        },\n\n\n        /**\n         * Determines the height and width of the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {OpenSeadragon.Point}\n         */\n        getElementSize: function( element ) {\n            element = $.getElement( element );\n\n            return new $.Point(\n                element.clientWidth,\n                element.clientHeight\n            );\n        },\n\n\n        /**\n         * Returns the CSSStyle object for the given element.\n         * @function\n         * @param {Element|String} element\n         * @returns {CSSStyle}\n         */\n        getElementStyle:\n            document.documentElement.currentStyle ?\n            function( element ) {\n                element = $.getElement( element );\n                return element.currentStyle;\n            } :\n            function( element ) {\n                element = $.getElement( element );\n                return window.getComputedStyle( element, \"\" );\n            },\n\n        /**\n         * Returns the property with the correct vendor prefix appended.\n         * @param {String} property the property name\n         * @returns {String} the property with the correct prefix or null if not\n         * supported.\n         */\n        getCssPropertyWithVendorPrefix: function(property) {\n            var memo = {};\n\n            $.getCssPropertyWithVendorPrefix = function(property) {\n                if (memo[property] !== undefined) {\n                    return memo[property];\n                }\n                var style = document.createElement('div').style;\n                var result = null;\n                if (style[property] !== undefined) {\n                    result = property;\n                } else {\n                    var prefixes = ['Webkit', 'Moz', 'MS', 'O',\n                        'webkit', 'moz', 'ms', 'o'];\n                    var suffix = $.capitalizeFirstLetter(property);\n                    for (var i = 0; i < prefixes.length; i++) {\n                        var prop = prefixes[i] + suffix;\n                        if (style[prop] !== undefined) {\n                            result = prop;\n                            break;\n                        }\n                    }\n                }\n                memo[property] = result;\n                return result;\n            };\n            return $.getCssPropertyWithVendorPrefix(property);\n        },\n\n        /**\n         * Capitalizes the first letter of a string\n         * @param {String} string\n         * @returns {String} The string with the first letter capitalized\n         */\n        capitalizeFirstLetter: function(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        },\n\n        /**\n         * Compute the modulo of a number but makes sure to always return\n         * a positive value.\n         * @param {Number} number the number to computes the modulo of\n         * @param {Number} modulo the modulo\n         * @returns {Number} the result of the modulo of number\n         */\n        positiveModulo: function(number, modulo) {\n            var result = number % modulo;\n            if (result < 0) {\n                result += modulo;\n            }\n            return result;\n        },\n\n        /**\n         * Determines if a point is within the bounding rectangle of the given element (hit-test).\n         * @function\n         * @param {Element|String} element\n         * @param {OpenSeadragon.Point} point\n         * @returns {Boolean}\n         */\n        pointInElement: function( element, point ) {\n            element = $.getElement( element );\n            var offset = $.getElementOffset( element ),\n                size = $.getElementSize( element );\n            return point.x >= offset.x && point.x < offset.x + size.x && point.y < offset.y + size.y && point.y >= offset.y;\n        },\n\n\n        /**\n         * Gets the position of the mouse on the screen for a given event.\n         * @function\n         * @param {Event} [event]\n         * @returns {OpenSeadragon.Point}\n         */\n        getMousePosition: function( event ) {\n\n            if ( typeof ( event.pageX ) === \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    result.x = event.pageX;\n                    result.y = event.pageY;\n\n                    return result;\n                };\n            } else if ( typeof ( event.clientX ) === \"number\" ) {\n                $.getMousePosition = function( event ){\n                    var result = new $.Point();\n\n                    result.x =\n                        event.clientX +\n                        document.body.scrollLeft +\n                        document.documentElement.scrollLeft;\n                    result.y =\n                        event.clientY +\n                        document.body.scrollTop +\n                        document.documentElement.scrollTop;\n\n                    return result;\n                };\n            } else {\n                throw new Error(\n                    \"Unknown event mouse position, no known technique.\"\n                );\n            }\n\n            return $.getMousePosition( event );\n        },\n\n\n        /**\n         * Determines the page's current scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getPageScroll: function() {\n            var docElement  = document.documentElement || {},\n                body        = document.body || {};\n\n            if ( typeof ( window.pageXOffset ) === \"number\" ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        window.pageXOffset,\n                        window.pageYOffset\n                    );\n                };\n            } else if ( body.scrollLeft || body.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.body.scrollLeft,\n                        document.body.scrollTop\n                    );\n                };\n            } else if ( docElement.scrollLeft || docElement.scrollTop ) {\n                $.getPageScroll = function(){\n                    return new $.Point(\n                        document.documentElement.scrollLeft,\n                        document.documentElement.scrollTop\n                    );\n                };\n            } else {\n                // We can't reassign the function yet, as there was no scroll.\n                return new $.Point(0, 0);\n            }\n\n            return $.getPageScroll();\n        },\n\n        /**\n         * Set the page scroll position.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        setPageScroll: function( scroll ) {\n            if ( typeof ( window.scrollTo ) !== \"undefined\" ) {\n                $.setPageScroll = function( scroll ) {\n                    window.scrollTo( scroll.x, scroll.y );\n                };\n            } else {\n                var originalScroll = $.getPageScroll();\n                if ( originalScroll.x === scroll.x &&\n                    originalScroll.y === scroll.y ) {\n                    // We are already correctly positioned and there\n                    // is no way to detect the correct method.\n                    return;\n                }\n\n                document.body.scrollLeft = scroll.x;\n                document.body.scrollTop = scroll.y;\n                var currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.body.scrollLeft = scroll.x;\n                        document.body.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                document.documentElement.scrollLeft = scroll.x;\n                document.documentElement.scrollTop = scroll.y;\n                currentScroll = $.getPageScroll();\n                if ( currentScroll.x !== originalScroll.x &&\n                    currentScroll.y !== originalScroll.y ) {\n                    $.setPageScroll = function( scroll ) {\n                        document.documentElement.scrollLeft = scroll.x;\n                        document.documentElement.scrollTop = scroll.y;\n                    };\n                    return;\n                }\n\n                // We can't find anything working, so we do nothing.\n                $.setPageScroll = function( scroll ) {\n                };\n            }\n\n            $.setPageScroll( scroll );\n        },\n\n        /**\n         * Determines the size of the browsers window.\n         * @function\n         * @returns {OpenSeadragon.Point}\n         */\n        getWindowSize: function() {\n            var docElement = document.documentElement || {},\n                body    = document.body || {};\n\n            if ( typeof ( window.innerWidth ) === 'number' ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        window.innerWidth,\n                        window.innerHeight\n                    );\n                };\n            } else if ( docElement.clientWidth || docElement.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.documentElement.clientWidth,\n                        document.documentElement.clientHeight\n                    );\n                };\n            } else if ( body.clientWidth || body.clientHeight ) {\n                $.getWindowSize = function(){\n                    return new $.Point(\n                        document.body.clientWidth,\n                        document.body.clientHeight\n                    );\n                };\n            } else {\n                throw new Error(\"Unknown window size, no known technique.\");\n            }\n\n            return $.getWindowSize();\n        },\n\n\n        /**\n         * Wraps the given element in a nest of divs so that the element can\n         * be easily centered using CSS tables\n         * @function\n         * @param {Element|String} element\n         * @returns {Element} outermost wrapper element\n         */\n        makeCenteredNode: function( element ) {\n            // Convert a possible ID to an actual HTMLElement\n            element = $.getElement( element );\n\n            /*\n                CSS tables require you to have a display:table/row/cell hierarchy so we need to create\n                three nested wrapper divs:\n             */\n\n            var wrappers = [\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' ),\n                $.makeNeutralElement( 'div' )\n            ];\n\n            // It feels like we should be able to pass style dicts to makeNeutralElement:\n            $.extend(wrappers[0].style, {\n                display: \"table\",\n                height: \"100%\",\n                width: \"100%\"\n            });\n\n            $.extend(wrappers[1].style, {\n                display: \"table-row\"\n            });\n\n            $.extend(wrappers[2].style, {\n                display: \"table-cell\",\n                verticalAlign: \"middle\",\n                textAlign: \"center\"\n            });\n\n            wrappers[0].appendChild(wrappers[1]);\n            wrappers[1].appendChild(wrappers[2]);\n            wrappers[2].appendChild(element);\n\n            return wrappers[0];\n        },\n\n\n        /**\n         * Creates an easily positionable element of the given type that therefor\n         * serves as an excellent container element.\n         * @function\n         * @param {String} tagName\n         * @returns {Element}\n         */\n        makeNeutralElement: function( tagName ) {\n            var element = document.createElement( tagName ),\n                style   = element.style;\n\n            style.background = \"transparent none\";\n            style.border     = \"none\";\n            style.margin     = \"0px\";\n            style.padding    = \"0px\";\n            style.position   = \"static\";\n\n            return element;\n        },\n\n\n        /**\n         * Returns the current milliseconds, using Date.now() if available\n         * @function\n         */\n        now: function( ) {\n            if (Date.now) {\n                $.now = Date.now;\n            } else {\n                $.now = function() {\n                    return new Date().getTime();\n                };\n            }\n\n            return $.now();\n        },\n\n\n        /**\n         * Ensures an image is loaded correctly to support alpha transparency.\n         * @function\n         * @param {String} src\n         * @returns {Element}\n         */\n        makeTransparentImage: function( src ) {\n            var img = $.makeNeutralElement( \"img\" );\n\n            img.src = src;\n\n            return img;\n        },\n\n\n        /**\n         * Sets the opacity of the specified element.\n         * @function\n         * @param {Element|String} element\n         * @param {Number} opacity\n         * @param {Boolean} [usesAlpha]\n         */\n        setElementOpacity: function( element, opacity, usesAlpha ) {\n\n            var ieOpacity,\n                ieFilter;\n\n            element = $.getElement( element );\n\n            if ( usesAlpha && !$.Browser.alpha ) {\n                opacity = Math.round( opacity );\n            }\n\n            if ( $.Browser.opacity ) {\n                element.style.opacity = opacity < 1 ? opacity : \"\";\n            } else {\n                if ( opacity < 1 ) {\n                    ieOpacity = Math.round( 100 * opacity );\n                    ieFilter  = \"alpha(opacity=\" + ieOpacity + \")\";\n                    element.style.filter = ieFilter;\n                } else {\n                    element.style.filter = \"\";\n                }\n            }\n        },\n\n\n        /**\n         * Sets the specified element's touch-action style attribute to 'none'.\n         * @function\n         * @param {Element|String} element\n         */\n        setElementTouchActionNone: function( element ) {\n            element = $.getElement( element );\n            if ( typeof element.style.touchAction !== 'undefined' ) {\n                element.style.touchAction = 'none';\n            } else if ( typeof element.style.msTouchAction !== 'undefined' ) {\n                element.style.msTouchAction = 'none';\n            }\n        },\n\n\n        /**\n         * Sets the specified element's pointer-events style attribute to the passed value.\n         * @function\n         * @param {Element|String} element\n         * @param {String} value\n         */\n        setElementPointerEvents: function( element, value ) {\n            element = $.getElement( element );\n            if (typeof element.style !== 'undefined' && typeof element.style.pointerEvents !== 'undefined' ) {\n                element.style.pointerEvents = value;\n            }\n        },\n\n\n        /**\n         * Sets the specified element's pointer-events style attribute to 'none'.\n         * @function\n         * @param {Element|String} element\n         */\n        setElementPointerEventsNone: function( element ) {\n            $.setElementPointerEvents( element, 'none' );\n        },\n\n\n        /**\n         * Add the specified CSS class to the element if not present.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        addClass: function( element, className ) {\n            element = $.getElement( element );\n\n            if (!element.className) {\n                element.className = className;\n            } else if ( ( ' ' + element.className + ' ' ).\n                indexOf( ' ' + className + ' ' ) === -1 ) {\n                element.className += ' ' + className;\n            }\n        },\n\n        /**\n         * Find the first index at which an element is found in an array or -1\n         * if not present.\n         *\n         * Code taken and adapted from\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Compatibility\n         *\n         * @function\n         * @param {Array} array The array from which to find the element\n         * @param {Object} searchElement The element to find\n         * @param {Number} [fromIndex=0] Index to start research.\n         * @returns {Number} The index of the element in the array.\n         */\n        indexOf: function( array, searchElement, fromIndex ) {\n            if ( Array.prototype.indexOf ) {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    return array.indexOf( searchElement, fromIndex );\n                };\n            } else {\n                this.indexOf = function( array, searchElement, fromIndex ) {\n                    var i,\n                        pivot = ( fromIndex ) ? fromIndex : 0,\n                        length;\n                    if ( !array ) {\n                        throw new TypeError( );\n                    }\n\n                    length = array.length;\n                    if ( length === 0 || pivot >= length ) {\n                        return -1;\n                    }\n\n                    if ( pivot < 0 ) {\n                        pivot = length - Math.abs( pivot );\n                    }\n\n                    for ( i = pivot; i < length; i++ ) {\n                        if ( array[i] === searchElement ) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n            }\n            return this.indexOf( array, searchElement, fromIndex );\n        },\n\n        /**\n         * Remove the specified CSS class from the element.\n         * @function\n         * @param {Element|String} element\n         * @param {String} className\n         */\n        removeClass: function( element, className ) {\n            var oldClasses,\n                newClasses = [],\n                i;\n\n            element = $.getElement( element );\n            oldClasses = element.className.split( /\\s+/ );\n            for ( i = 0; i < oldClasses.length; i++ ) {\n                if ( oldClasses[ i ] && oldClasses[ i ] !== className ) {\n                    newClasses.push( oldClasses[ i ] );\n                }\n            }\n            element.className = newClasses.join(' ');\n        },\n\n        /**\n         * Convert passed addEventListener() options to boolean or options object,\n         * depending on browser support.\n         * @function\n         * @param {Boolean|Object} [options] Boolean useCapture, or if [supportsEventListenerOptions]{@link OpenSeadragon.supportsEventListenerOptions}, can be an object\n         * @param {Boolean} [options.capture]\n         * @param {Boolean} [options.passive]\n         * @param {Boolean} [options.once]\n         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n         */\n        normalizeEventListenerOptions: function (options) {\n            var opts;\n            if ( typeof options !== 'undefined' ) {\n                if ( typeof options === 'boolean' ) {\n                    // Legacy Boolean useCapture\n                    opts = $.supportsEventListenerOptions ? { capture: options } : options;\n                } else {\n                    // Options object\n                    opts = $.supportsEventListenerOptions ? options :\n                        ( ( typeof options.capture !== 'undefined' ) ? options.capture : false );\n                }\n            } else {\n                // No options specified - Legacy optional useCapture argument\n                //   (for IE, first supported on version 9, so we'll pass a Boolean)\n                opts = $.supportsEventListenerOptions ? { capture: false } : false;\n            }\n            return opts;\n        },\n\n        /**\n         * Adds an event listener for the given element, eventName and handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean|Object} [options] Boolean useCapture, or if [supportsEventListenerOptions]{@link OpenSeadragon.supportsEventListenerOptions}, can be an object\n         * @param {Boolean} [options.capture]\n         * @param {Boolean} [options.passive]\n         * @param {Boolean} [options.once]\n         */\n        addEvent: (function () {\n            if ( $.supportsAddEventListener ) {\n                return function ( element, eventName, handler, options ) {\n                    options = $.normalizeEventListenerOptions(options);\n                    element = $.getElement( element );\n                    element.addEventListener( eventName, handler, options );\n                };\n            } else if ( document.documentElement.attachEvent && document.attachEvent ) {\n                return function ( element, eventName, handler ) {\n                    element = $.getElement( element );\n                    element.attachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Remove a given event listener for the given element, event type and\n         * handler.\n         * @function\n         * @param {Element|String} element\n         * @param {String} eventName\n         * @param {Function} handler\n         * @param {Boolean|Object} [options] Boolean useCapture, or if [supportsEventListenerOptions]{@link OpenSeadragon.supportsEventListenerOptions}, can be an object\n         * @param {Boolean} [options.capture]\n         */\n        removeEvent: (function () {\n            if ( $.supportsRemoveEventListener ) {\n                return function ( element, eventName, handler, options ) {\n                    options = $.normalizeEventListenerOptions(options);\n                    element = $.getElement( element );\n                    element.removeEventListener( eventName, handler, options );\n                };\n            } else if ( document.documentElement.detachEvent && document.detachEvent ) {\n                return function( element, eventName, handler ) {\n                    element = $.getElement( element );\n                    element.detachEvent( 'on' + eventName, handler );\n                };\n            } else {\n                throw new Error( \"No known event model.\" );\n            }\n        }()),\n\n\n        /**\n         * Cancels the default browser behavior had the event propagated all\n         * the way up the DOM to the window object.\n         * @function\n         * @param {Event} [event]\n         */\n        cancelEvent: function( event ) {\n            event.preventDefault();\n        },\n\n\n        /**\n         * Returns true if {@link OpenSeadragon.cancelEvent|cancelEvent} has been called on\n         * the event, otherwise returns false.\n         * @function\n         * @param {Event} [event]\n         */\n        eventIsCanceled: function( event ) {\n            return event.defaultPrevented;\n        },\n\n\n        /**\n         * Stops the propagation of the event through the DOM in the capturing and bubbling phases.\n         * @function\n         * @param {Event} [event]\n         */\n        stopEvent: function( event ) {\n            event.stopPropagation();\n        },\n\n\n        /**\n         * Similar to OpenSeadragon.delegate, but it does not immediately call\n         * the method on the object, returning a function which can be called\n         * repeatedly to delegate the method. It also allows additional arguments\n         * to be passed during construction which will be added during each\n         * invocation, and each invocation can add additional arguments as well.\n         *\n         * @function\n         * @param {Object} object\n         * @param {Function} method\n         * @param [args] any additional arguments are passed as arguments to the\n         *  created callback\n         * @returns {Function}\n         */\n        createCallback: function( object, method ) {\n            //TODO: This pattern is painful to use and debug.  It's much cleaner\n            //      to use pinning plus anonymous functions.  Get rid of this\n            //      pattern!\n            var initialArgs = [],\n                i;\n            for ( i = 2; i < arguments.length; i++ ) {\n                initialArgs.push( arguments[ i ] );\n            }\n\n            return function() {\n                var args = initialArgs.concat( [] ),\n                    i;\n                for ( i = 0; i < arguments.length; i++ ) {\n                    args.push( arguments[ i ] );\n                }\n\n                return method.apply( object, args );\n            };\n        },\n\n\n        /**\n         * Retrieves the value of a url parameter from the window.location string.\n         * @function\n         * @param {String} key\n         * @returns {String} The value of the url parameter or null if no param matches.\n         */\n        getUrlParameter: function( key ) {\n            // eslint-disable-next-line no-use-before-define\n            var value = URLPARAMS[ key ];\n            return value ? value : null;\n        },\n\n        /**\n         * Retrieves the protocol used by the url. The url can either be absolute\n         * or relative.\n         * @function\n         * @private\n         * @param {String} url The url to retrieve the protocol from.\n         * @return {String} The protocol (http:, https:, file:, ftp: ...)\n         */\n        getUrlProtocol: function( url ) {\n            var match = url.match(/^([a-z]+:)\\/\\//i);\n            if ( match === null ) {\n                // Relative URL, retrive the protocol from window.location\n                return window.location.protocol;\n            }\n            return match[1].toLowerCase();\n        },\n\n        /**\n         * Create an XHR object\n         * @private\n         * @param {type} [local] If set to true, the XHR will be file: protocol\n         * compatible if possible (but may raise a warning in the browser).\n         * @returns {XMLHttpRequest}\n         */\n        createAjaxRequest: function( local ) {\n            // IE11 does not support window.ActiveXObject so we just try to\n            // create one to see if it is supported.\n            // See: http://msdn.microsoft.com/en-us/library/ie/dn423948%28v=vs.85%29.aspx\n            var supportActiveX;\n            try {\n                /* global ActiveXObject:true */\n                supportActiveX = !!new ActiveXObject( \"Microsoft.XMLHTTP\" );\n            } catch( e ) {\n                supportActiveX = false;\n            }\n\n            if ( supportActiveX ) {\n                if ( window.XMLHttpRequest ) {\n                    $.createAjaxRequest = function( local ) {\n                        if ( local ) {\n                            return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                        }\n                        return new XMLHttpRequest();\n                    };\n                } else {\n                    $.createAjaxRequest = function() {\n                        return new ActiveXObject( \"Microsoft.XMLHTTP\" );\n                    };\n                }\n            } else if ( window.XMLHttpRequest ) {\n                $.createAjaxRequest = function() {\n                    return new XMLHttpRequest();\n                };\n            } else {\n                throw new Error( \"Browser doesn't support XMLHttpRequest.\" );\n            }\n            return $.createAjaxRequest( local );\n        },\n\n        /**\n         * Makes an AJAX request.\n         * @param {Object} options\n         * @param {String} options.url - the url to request\n         * @param {Function} options.success - a function to call on a successful response\n         * @param {Function} options.error - a function to call on when an error occurs\n         * @param {Object} options.headers - headers to add to the AJAX request\n         * @param {String} options.responseType - the response type of the AJAX request\n         * @param {String} options.postData - HTTP POST data (usually but not necessarily in k=v&k2=v2... form,\n         *      see TileSrouce::getPostData), GET method used if null\n         * @param {Boolean} [options.withCredentials=false] - whether to set the XHR's withCredentials\n         * @throws {Error}\n         * @returns {XMLHttpRequest}\n         */\n        makeAjaxRequest: function( url, onSuccess, onError ) {\n            var withCredentials;\n            var headers;\n            var responseType;\n            var postData;\n\n            // Note that our preferred API is that you pass in a single object; the named\n            // arguments are for legacy support.\n            if( $.isPlainObject( url ) ){\n                onSuccess = url.success;\n                onError = url.error;\n                withCredentials = url.withCredentials;\n                headers = url.headers;\n                responseType = url.responseType || null;\n                postData = url.postData || null;\n                url = url.url;\n            }\n\n            var protocol = $.getUrlProtocol( url );\n            var request = $.createAjaxRequest( protocol === \"file:\" );\n\n            if ( !$.isFunction( onSuccess ) ) {\n                throw new Error( \"makeAjaxRequest requires a success callback\" );\n            }\n\n            request.onreadystatechange = function() {\n                // 4 = DONE (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties)\n                if ( request.readyState === 4 ) {\n                    request.onreadystatechange = function(){};\n\n                    // With protocols other than http/https, a successful request status is in\n                    // the 200's on Firefox and 0 on other browsers\n                    if ( (request.status >= 200 && request.status < 300) ||\n                        ( request.status === 0 &&\n                          protocol !== \"http:\" &&\n                          protocol !== \"https:\" )) {\n                        onSuccess( request );\n                    } else {\n                        if ( $.isFunction( onError ) ) {\n                            onError( request );\n                        } else {\n                            $.console.error( \"AJAX request returned %d: %s\", request.status, url );\n                        }\n                    }\n                }\n            };\n\n            var method = postData ? \"POST\" : \"GET\";\n            try {\n                request.open( method, url, true );\n\n                if (responseType) {\n                    request.responseType = responseType;\n                }\n\n                if (headers) {\n                    for (var headerName in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, headerName) && headers[headerName]) {\n                            request.setRequestHeader(headerName, headers[headerName]);\n                        }\n                    }\n                }\n\n                if (withCredentials) {\n                    request.withCredentials = true;\n                }\n\n                request.send(postData);\n            } catch (e) {\n                $.console.error( \"%s while making AJAX request: %s\", e.name, e.message );\n\n                request.onreadystatechange = function(){};\n\n                if ( $.isFunction( onError ) ) {\n                    onError( request, e );\n                }\n            }\n\n            return request;\n        },\n\n        /**\n         * Taken from jQuery 1.6.1\n         * @function\n         * @param {Object} options\n         * @param {String} options.url\n         * @param {Function} options.callback\n         * @param {String} [options.param='callback'] The name of the url parameter\n         *      to request the jsonp provider with.\n         * @param {String} [options.callbackName=] The name of the callback to\n         *      request the jsonp provider with.\n         */\n        jsonp: function( options ){\n            var script,\n                url     = options.url,\n                head    = document.head ||\n                    document.getElementsByTagName( \"head\" )[ 0 ] ||\n                    document.documentElement,\n                jsonpCallback = options.callbackName || 'openseadragon' + $.now(),\n                previous      = window[ jsonpCallback ],\n                replace       = \"$1\" + jsonpCallback + \"$2\",\n                callbackParam = options.param || 'callback',\n                callback      = options.callback;\n\n            url = url.replace( /(=)\\?(&|$)|\\?\\?/i, replace );\n            // Add callback manually\n            url += (/\\?/.test( url ) ? \"&\" : \"?\") + callbackParam + \"=\" + jsonpCallback;\n\n            // Install callback\n            window[ jsonpCallback ] = function( response ) {\n                if ( !previous ){\n                    try{\n                        delete window[ jsonpCallback ];\n                    }catch(e){\n                        //swallow\n                    }\n                } else {\n                    window[ jsonpCallback ] = previous;\n                }\n                if( callback && $.isFunction( callback ) ){\n                    callback( response );\n                }\n            };\n\n            script = document.createElement( \"script\" );\n\n            //TODO: having an issue with async info requests\n            if( undefined !== options.async || false !== options.async ){\n                script.async = \"async\";\n            }\n\n            if ( options.scriptCharset ) {\n                script.charset = options.scriptCharset;\n            }\n\n            script.src = url;\n\n            // Attach handlers for all browsers\n            script.onload = script.onreadystatechange = function( _, isAbort ) {\n\n                if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n                    // Handle memory leak in IE\n                    script.onload = script.onreadystatechange = null;\n\n                    // Remove the script\n                    if ( head && script.parentNode ) {\n                        head.removeChild( script );\n                    }\n\n                    // Dereference the script\n                    script = undefined;\n                }\n            };\n            // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n            // This arises when a base node is used (#2709 and #4378).\n            head.insertBefore( script, head.firstChild );\n\n        },\n\n\n        /**\n         * Fully deprecated. Will throw an error.\n         * @function\n         * @deprecated use {@link OpenSeadragon.Viewer#open}\n         */\n        createFromDZI: function() {\n            throw \"OpenSeadragon.createFromDZI is deprecated, use Viewer.open.\";\n        },\n\n        /**\n         * Parses an XML string into a DOM Document.\n         * @function\n         * @param {String} string\n         * @returns {Document}\n         */\n        parseXml: function( string ) {\n            if ( window.DOMParser ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null,\n                        parser;\n\n                    parser = new DOMParser();\n                    xmlDoc = parser.parseFromString( string, \"text/xml\" );\n                    return xmlDoc;\n                };\n\n            } else if ( window.ActiveXObject ) {\n\n                $.parseXml = function( string ) {\n                    var xmlDoc = null;\n\n                    xmlDoc = new ActiveXObject( \"Microsoft.XMLDOM\" );\n                    xmlDoc.async = false;\n                    xmlDoc.loadXML( string );\n                    return xmlDoc;\n                };\n\n            } else {\n                throw new Error( \"Browser doesn't support XML DOM.\" );\n            }\n\n            return $.parseXml( string );\n        },\n\n        /**\n         * Parses a JSON string into a Javascript object.\n         * @function\n         * @param {String} string\n         * @returns {Object}\n         */\n        parseJSON: function(string) {\n            $.parseJSON = window.JSON.parse;\n            return $.parseJSON(string);\n        },\n\n        /**\n         * Reports whether the image format is supported for tiling in this\n         * version.\n         * @function\n         * @param {String} [extension]\n         * @returns {Boolean}\n         */\n        imageFormatSupported: function( extension ) {\n            extension = extension ? extension : \"\";\n            // eslint-disable-next-line no-use-before-define\n            return !!FILEFORMATS[ extension.toLowerCase() ];\n        },\n\n        /**\n         * Updates supported image formats with user-specified values.\n         * Preexisting formats that are not being updated are left unchanged.\n         * By default, the defined formats are\n         * <pre><code>{\n         *      bmp:  false,\n         *      jpeg: true,\n         *      jpg:  true,\n         *      png:  true,\n         *      tif:  false,\n         *      wdp:  false\n         * }\n         * </code></pre>\n         * @function\n         * @example\n         * // sets webp as supported and png as unsupported\n         * setImageFormatsSupported({webp: true, png: false});\n         * @param {Object} formats An object containing format extensions as\n         * keys and booleans as values.\n         */\n        setImageFormatsSupported: function(formats) {\n            // eslint-disable-next-line no-use-before-define\n            $.extend(FILEFORMATS, formats);\n        }\n\n    });\n\n\n    //TODO: $.console is often used inside a try/catch block which generally\n    //      prevents allowings errors to occur with detection until a debugger\n    //      is attached.  Although I've been guilty of the same anti-pattern\n    //      I eventually was convinced that errors should naturally propagate in\n    //      all but the most special cases.\n    /**\n     * A convenient alias for console when available, and a simple null\n     * function when console is unavailable.\n     * @static\n     * @private\n     */\n    var nullfunction = function( msg ){\n        //document.location.hash = msg;\n    };\n\n    $.console = window.console || {\n        log:    nullfunction,\n        debug:  nullfunction,\n        info:   nullfunction,\n        warn:   nullfunction,\n        error:  nullfunction,\n        assert: nullfunction\n    };\n\n\n    /**\n     * The current browser vendor, version, and related information regarding detected features.\n     * @member {Object} Browser\n     * @memberof OpenSeadragon\n     * @static\n     * @type {Object}\n     * @property {OpenSeadragon.BROWSERS} vendor - One of the {@link OpenSeadragon.BROWSERS} enumeration values.\n     * @property {Number} version\n     * @property {Boolean} alpha - Does the browser support image alpha transparency.\n     */\n    $.Browser = {\n        vendor:     $.BROWSERS.UNKNOWN,\n        version:    0,\n        alpha:      true\n    };\n\n\n    var FILEFORMATS = {\n            bmp:  false,\n            jpeg: true,\n            jpg:  true,\n            png:  true,\n            tif:  false,\n            wdp:  false\n        },\n        URLPARAMS = {};\n\n    (function() {\n        //A small auto-executing routine to determine the browser vendor,\n        //version and supporting feature sets.\n        var ver = navigator.appVersion,\n            ua  = navigator.userAgent,\n            regex;\n\n        //console.error( 'appName: ' + navigator.appName );\n        //console.error( 'appVersion: ' + navigator.appVersion );\n        //console.error( 'userAgent: ' + navigator.userAgent );\n\n        switch( navigator.appName ){\n            case \"Microsoft Internet Explorer\":\n                if( !!window.attachEvent &&\n                    !!window.ActiveXObject ) {\n\n                    $.Browser.vendor = $.BROWSERS.IE;\n                    $.Browser.version = parseFloat(\n                        ua.substring(\n                            ua.indexOf( \"MSIE\" ) + 5,\n                            ua.indexOf( \";\", ua.indexOf( \"MSIE\" ) ) )\n                        );\n                }\n                break;\n            case \"Netscape\":\n                if (window.addEventListener) {\n                    if ( ua.indexOf( \"Edge\" ) >= 0 ) {\n                        $.Browser.vendor = $.BROWSERS.EDGE;\n                        $.Browser.version = parseFloat(\n                            ua.substring( ua.indexOf( \"Edge\" ) + 5 )\n                        );\n                    } else if ( ua.indexOf( \"Edg\" ) >= 0 ) {\n                        $.Browser.vendor = $.BROWSERS.CHROMEEDGE;\n                        $.Browser.version = parseFloat(\n                            ua.substring( ua.indexOf( \"Edg\" ) + 4 )\n                        );\n                    } else if ( ua.indexOf( \"Firefox\" ) >= 0 ) {\n                        $.Browser.vendor = $.BROWSERS.FIREFOX;\n                        $.Browser.version = parseFloat(\n                            ua.substring( ua.indexOf( \"Firefox\" ) + 8 )\n                        );\n                    } else if ( ua.indexOf( \"Safari\" ) >= 0 ) {\n                        $.Browser.vendor = ua.indexOf( \"Chrome\" ) >= 0 ?\n                            $.BROWSERS.CHROME :\n                            $.BROWSERS.SAFARI;\n                        $.Browser.version = parseFloat(\n                            ua.substring(\n                                ua.substring( 0, ua.indexOf( \"Safari\" ) ).lastIndexOf( \"/\" ) + 1,\n                                ua.indexOf( \"Safari\" )\n                            )\n                        );\n                    } else {\n                        regex = new RegExp( \"Trident/.*rv:([0-9]{1,}[.0-9]{0,})\");\n                        if ( regex.exec( ua ) !== null ) {\n                            $.Browser.vendor = $.BROWSERS.IE;\n                            $.Browser.version = parseFloat( RegExp.$1 );\n                        }\n                    }\n                }\n                break;\n            case \"Opera\":\n                $.Browser.vendor = $.BROWSERS.OPERA;\n                $.Browser.version = parseFloat( ver );\n                break;\n        }\n\n            // ignore '?' portion of query string\n        var query = window.location.search.substring( 1 ),\n            parts = query.split('&'),\n            part,\n            sep,\n            i;\n\n        for ( i = 0; i < parts.length; i++ ) {\n            part = parts[ i ];\n            sep  = part.indexOf( '=' );\n\n            if ( sep > 0 ) {\n                var key = part.substring( 0, sep ),\n                    value = part.substring( sep + 1 );\n                try {\n                    URLPARAMS[ key ] = decodeURIComponent( value );\n                } catch (e) {\n                    $.console.error( \"Ignoring malformed URL parameter: %s=%s\", key, value );\n                }\n            }\n        }\n\n        //determine if this browser supports image alpha transparency\n        $.Browser.alpha = !(\n            $.Browser.vendor === $.BROWSERS.CHROME && $.Browser.version < 2\n        );\n\n        //determine if this browser supports element.style.opacity\n        $.Browser.opacity = true;\n\n        if ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version < 11 ) {\n            $.console.error('Internet Explorer versions < 11 are not supported by OpenSeadragon');\n        }\n    })();\n\n\n    // Adding support for HTML5's requestAnimationFrame as suggested by acdha.\n    // Implementation taken from matt synder's post here:\n    // http://mattsnider.com/cross-browser-and-legacy-supported-requestframeanimation/\n    (function( w ) {\n\n        // most browsers have an implementation\n        var requestAnimationFrame = w.requestAnimationFrame ||\n            w.mozRequestAnimationFrame ||\n            w.webkitRequestAnimationFrame ||\n            w.msRequestAnimationFrame;\n\n        var cancelAnimationFrame = w.cancelAnimationFrame ||\n            w.mozCancelAnimationFrame ||\n            w.webkitCancelAnimationFrame ||\n            w.msCancelAnimationFrame;\n\n        // polyfill, when necessary\n        if ( requestAnimationFrame && cancelAnimationFrame ) {\n            // We can't assign these window methods directly to $ because they\n            // expect their \"this\" to be \"window\", so we call them in wrappers.\n            $.requestAnimationFrame = function(){\n                return requestAnimationFrame.apply( w, arguments );\n            };\n            $.cancelAnimationFrame = function(){\n                return cancelAnimationFrame.apply( w, arguments );\n            };\n        } else {\n            var aAnimQueue = [],\n                processing = [],\n                iRequestId = 0,\n                iIntervalId;\n\n            // create a mock requestAnimationFrame function\n            $.requestAnimationFrame = function( callback ) {\n                aAnimQueue.push( [ ++iRequestId, callback ] );\n\n                if ( !iIntervalId ) {\n                    iIntervalId = setInterval( function() {\n                        if ( aAnimQueue.length ) {\n                            var time = $.now();\n                            // Process all of the currently outstanding frame\n                            // requests, but none that get added during the\n                            // processing.\n                            // Swap the arrays so we don't have to create a new\n                            // array every frame.\n                            var temp = processing;\n                            processing = aAnimQueue;\n                            aAnimQueue = temp;\n                            while ( processing.length ) {\n                                processing.shift()[ 1 ]( time );\n                            }\n                        } else {\n                            // don't continue the interval, if unnecessary\n                            clearInterval( iIntervalId );\n                            iIntervalId = undefined;\n                        }\n                    }, 1000 / 50);  // estimating support for 50 frames per second\n                }\n\n                return iRequestId;\n            };\n\n            // create a mock cancelAnimationFrame function\n            $.cancelAnimationFrame = function( requestId ) {\n                // find the request ID and remove it\n                var i, j;\n                for ( i = 0, j = aAnimQueue.length; i < j; i += 1 ) {\n                    if ( aAnimQueue[ i ][ 0 ] === requestId ) {\n                        aAnimQueue.splice( i, 1 );\n                        return;\n                    }\n                }\n\n                // If it's not in the queue, it may be in the set we're currently\n                // processing (if cancelAnimationFrame is called from within a\n                // requestAnimationFrame callback).\n                for ( i = 0, j = processing.length; i < j; i += 1 ) {\n                    if ( processing[ i ][ 0 ] === requestId ) {\n                        processing.splice( i, 1 );\n                        return;\n                    }\n                }\n            };\n        }\n    })( window );\n\n    /**\n     * @private\n     * @inner\n     * @function\n     * @param {Element} element\n     * @param {Boolean} [isFixed]\n     * @returns {Element}\n     */\n    function getOffsetParent( element, isFixed ) {\n        if ( isFixed && element !== document.body ) {\n            return document.body;\n        } else {\n            return element.offsetParent;\n        }\n    }\n\n}(OpenSeadragon));\n\n\n// Universal Module Definition, supports CommonJS, AMD and simple script tag\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // expose as amd module\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // expose as commonjs module\n        module.exports = factory();\n    } else {\n        // expose as window.OpenSeadragon\n        root.OpenSeadragon = factory();\n    }\n}(this, function () {\n    return OpenSeadragon;\n}));\n\n/*\n * OpenSeadragon - full-screen support functions\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ) {\n    /**\n     * Determine native full screen support we can get from the browser.\n     * @member fullScreenApi\n     * @memberof OpenSeadragon\n     * @type {object}\n     * @property {Boolean} supportsFullScreen Return true if full screen API is supported.\n     * @property {Function} isFullScreen Return true if currently in full screen mode.\n     * @property {Function} getFullScreenElement Return the element currently in full screen mode.\n     * @property {Function} requestFullScreen Make a request to go in full screen mode.\n     * @property {Function} exitFullScreen Make a request to exit full screen mode.\n     * @property {Function} cancelFullScreen Deprecated, use exitFullScreen instead.\n     * @property {String} fullScreenEventName Event fired when the full screen mode change.\n     * @property {String} fullScreenErrorEventName Event fired when a request to go\n     * in full screen mode failed.\n     */\n    var fullScreenApi = {\n        supportsFullScreen: false,\n        isFullScreen: function() { return false; },\n        getFullScreenElement: function() { return null; },\n        requestFullScreen: function() {},\n        exitFullScreen: function() {},\n        cancelFullScreen: function() {},\n        fullScreenEventName: '',\n        fullScreenErrorEventName: ''\n    };\n\n    // check for native support\n    if ( document.exitFullscreen ) {\n        // W3C standard\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.fullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.requestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.exitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"fullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"fullscreenerror\";\n    } else if ( document.msExitFullscreen ) {\n        // IE 11\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.msFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.msRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.msExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"MSFullscreenChange\";\n        fullScreenApi.fullScreenErrorEventName = \"MSFullscreenError\";\n    } else if ( document.webkitExitFullscreen ) {\n        // Recent webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitFullscreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullscreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitExitFullscreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.webkitCancelFullScreen ) {\n        // Old webkit\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.webkitCurrentFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.webkitRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.webkitCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"webkitfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"webkitfullscreenerror\";\n    } else if ( document.mozCancelFullScreen ) {\n        // Firefox\n        fullScreenApi.supportsFullScreen = true;\n        fullScreenApi.getFullScreenElement = function() {\n            return document.mozFullScreenElement;\n        };\n        fullScreenApi.requestFullScreen = function( element ) {\n            return element.mozRequestFullScreen();\n        };\n        fullScreenApi.exitFullScreen = function() {\n            document.mozCancelFullScreen();\n        };\n        fullScreenApi.fullScreenEventName = \"mozfullscreenchange\";\n        fullScreenApi.fullScreenErrorEventName = \"mozfullscreenerror\";\n    }\n    fullScreenApi.isFullScreen = function() {\n        return fullScreenApi.getFullScreenElement() !== null;\n    };\n    fullScreenApi.cancelFullScreen = function() {\n        $.console.error(\"cancelFullScreen is deprecated. Use exitFullScreen instead.\");\n        fullScreenApi.exitFullScreen();\n    };\n\n    // export api\n    $.extend( $, fullScreenApi );\n\n})( OpenSeadragon );\n\n/*\n * OpenSeadragon - EventSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($){\n\n/**\n * Event handler method signature used by all OpenSeadragon events.\n *\n * @callback EventHandler\n * @memberof OpenSeadragon\n * @param {Object} event - See individual events for event-specific properties.\n */\n\n\n/**\n * @class EventSource\n * @classdesc For use by classes which want to support custom, non-browser events.\n *\n * @memberof OpenSeadragon\n */\n$.EventSource = function() {\n    this.events = {};\n};\n\n/** @lends OpenSeadragon.EventSource.prototype */\n$.EventSource.prototype = {\n\n    /**\n     * Add an event handler to be triggered only once (or a given number of times)\n     * for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event\n     * is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged\n     * to the handler.\n     * @param {Number} [times=1] - The number of times to handle the event\n     * before removing it.\n     */\n    addOnceHandler: function(eventName, handler, userData, times) {\n        var self = this;\n        times = times || 1;\n        var count = 0;\n        var onceHandler = function(event) {\n            count++;\n            if (count === times) {\n                self.removeHandler(eventName, onceHandler);\n            }\n            handler(event);\n        };\n        this.addHandler(eventName, onceHandler, userData);\n    },\n\n    /**\n     * Add an event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {OpenSeadragon.EventHandler} handler - Function to call when event is triggered.\n     * @param {Object} [userData=null] - Arbitrary object to be passed unchanged to the handler.\n     */\n    addHandler: function ( eventName, handler, userData ) {\n        var events = this.events[ eventName ];\n        if ( !events ) {\n            this.events[ eventName ] = events = [];\n        }\n        if ( handler && $.isFunction( handler ) ) {\n            events[ events.length ] = { handler: handler, userData: userData || null };\n        }\n    },\n\n    /**\n     * Remove a specific event handler for a given event.\n     * @function\n     * @param {String} eventName - Name of event for which the handler is to be removed.\n     * @param {OpenSeadragon.EventHandler} handler - Function to be removed.\n     */\n    removeHandler: function ( eventName, handler ) {\n        var events = this.events[ eventName ],\n            handlers = [],\n            i;\n        if ( !events ) {\n            return;\n        }\n        if ( $.isArray( events ) ) {\n            for ( i = 0; i < events.length; i++ ) {\n                if ( events[i].handler !== handler ) {\n                    handlers.push( events[ i ] );\n                }\n            }\n            this.events[ eventName ] = handlers;\n        }\n    },\n\n    /**\n     * Get the amount of handlers registered for a given event.\n     * @param {String} eventName - Name of event to inspect.\n     * @return {number} amount of events\n     */\n    numberOfHandlers: function (eventName) {\n        var events = this.events[ eventName ];\n        if ( !events ) {\n            return 0;\n        }\n        return events.length;\n    },\n\n    /**\n     * Remove all event handlers for a given event type. If no type is given all\n     * event handlers for every event type are removed.\n     * @function\n     * @param {String} eventName - Name of event for which all handlers are to be removed.\n     */\n    removeAllHandlers: function( eventName ) {\n        if ( eventName ){\n            this.events[ eventName ] = [];\n        } else{\n            for ( var eventType in this.events ) {\n                this.events[ eventType ] = [];\n            }\n        }\n    },\n\n    /**\n     * Get a function which iterates the list of all handlers registered for a given event, calling the handler for each.\n     * @function\n     * @param {String} eventName - Name of event to get handlers for.\n     */\n    getHandler: function ( eventName ) {\n        var events = this.events[ eventName ];\n        if ( !events || !events.length ) {\n            return null;\n        }\n        events = events.length === 1 ?\n            [ events[ 0 ] ] :\n            Array.apply( null, events );\n        return function ( source, args ) {\n            var i,\n                length = events.length;\n            for ( i = 0; i < length; i++ ) {\n                if ( events[ i ] ) {\n                    args.eventSource = source;\n                    args.userData = events[ i ].userData;\n                    events[ i ].handler( args );\n                }\n            }\n        };\n    },\n\n    /**\n     * Trigger an event, optionally passing additional information.\n     * @function\n     * @param {String} eventName - Name of event to register.\n     * @param {Object} eventArgs - Event-specific data.\n     */\n    raiseEvent: function( eventName, eventArgs ) {\n        //uncomment if you want to get a log of all events\n        //$.console.log( eventName );\n        var handler = this.getHandler( eventName );\n\n        if ( handler ) {\n            if ( !eventArgs ) {\n                eventArgs = {};\n            }\n\n            handler( this, eventArgs );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - MouseTracker\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n    // All MouseTracker instances\n    var MOUSETRACKERS  = [];\n\n    // dictionary from hash to private properties\n    var THIS           = {};\n\n\n    /**\n     * @class MouseTracker\n     * @classdesc Provides simplified handling of common pointer device (mouse, touch, pen, etc.) gestures\n     *            and keyboard events on a specified element.\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     *      Allows configurable properties to be entirely specified by passing\n     *      an options object to the constructor.  The constructor also supports\n     *      the original positional arguments 'element', 'clickTimeThreshold',\n     *      and 'clickDistThreshold' in that order.\n     * @param {Element|String} options.element\n     *      A reference to an element or an element id for which the pointer/key\n     *      events will be monitored.\n     * @param {Boolean} [options.startDisabled=false]\n     *      If true, event tracking on the element will not start until\n     *      {@link OpenSeadragon.MouseTracker.setTracking|setTracking} is called.\n     * @param {Number} options.clickTimeThreshold\n     *      The number of milliseconds within which a pointer down-up event combination\n     *      will be treated as a click gesture.\n     * @param {Number} options.clickDistThreshold\n     *      The maximum distance allowed between a pointer down event and a pointer up event\n     *      to be treated as a click gesture.\n     * @param {Number} options.dblClickTimeThreshold\n     *      The number of milliseconds within which two pointer down-up event combinations\n     *      will be treated as a double-click gesture.\n     * @param {Number} options.dblClickDistThreshold\n     *      The maximum distance allowed between two pointer click events\n     *      to be treated as a click gesture.\n     * @param {Number} [options.stopDelay=50]\n     *      The number of milliseconds without pointer move before the stop\n     *      event is fired.\n     * @param {OpenSeadragon.EventHandler} [options.preProcessEventHandler=null]\n     *      An optional handler for controlling DOM event propagation and processing.\n     * @param {OpenSeadragon.EventHandler} [options.contextMenuHandler=null]\n     *      An optional handler for contextmenu.\n     * @param {OpenSeadragon.EventHandler} [options.enterHandler=null]\n     *      An optional handler for pointer enter.\n     * @param {OpenSeadragon.EventHandler} [options.leaveHandler=null]\n     *      An optional handler for pointer leave.\n     * @param {OpenSeadragon.EventHandler} [options.exitHandler=null]\n     *      An optional handler for pointer leave. <span style=\"color:red;\">Deprecated. Use leaveHandler instead.</span>\n     * @param {OpenSeadragon.EventHandler} [options.overHandler=null]\n     *      An optional handler for pointer over.\n     * @param {OpenSeadragon.EventHandler} [options.outHandler=null]\n     *      An optional handler for pointer out.\n     * @param {OpenSeadragon.EventHandler} [options.pressHandler=null]\n     *      An optional handler for pointer press.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryPressHandler=null]\n     *      An optional handler for pointer non-primary button press.\n     * @param {OpenSeadragon.EventHandler} [options.releaseHandler=null]\n     *      An optional handler for pointer release.\n     * @param {OpenSeadragon.EventHandler} [options.nonPrimaryReleaseHandler=null]\n     *      An optional handler for pointer non-primary button release.\n     * @param {OpenSeadragon.EventHandler} [options.moveHandler=null]\n     *      An optional handler for pointer move.\n     * @param {OpenSeadragon.EventHandler} [options.scrollHandler=null]\n     *      An optional handler for mouse wheel scroll.\n     * @param {OpenSeadragon.EventHandler} [options.clickHandler=null]\n     *      An optional handler for pointer click.\n     * @param {OpenSeadragon.EventHandler} [options.dblClickHandler=null]\n     *      An optional handler for pointer double-click.\n     * @param {OpenSeadragon.EventHandler} [options.dragHandler=null]\n     *      An optional handler for the drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.dragEndHandler=null]\n     *      An optional handler for after a drag gesture.\n     * @param {OpenSeadragon.EventHandler} [options.pinchHandler=null]\n     *      An optional handler for the pinch gesture.\n     * @param {OpenSeadragon.EventHandler} [options.keyDownHandler=null]\n     *      An optional handler for keydown.\n     * @param {OpenSeadragon.EventHandler} [options.keyUpHandler=null]\n     *      An optional handler for keyup.\n     * @param {OpenSeadragon.EventHandler} [options.keyHandler=null]\n     *      An optional handler for keypress.\n     * @param {OpenSeadragon.EventHandler} [options.focusHandler=null]\n     *      An optional handler for focus.\n     * @param {OpenSeadragon.EventHandler} [options.blurHandler=null]\n     *      An optional handler for blur.\n     * @param {Object} [options.userData=null]\n     *      Arbitrary object to be passed unchanged to any attached handler methods.\n     */\n    $.MouseTracker = function ( options ) {\n\n        MOUSETRACKERS.push( this );\n\n        var args = arguments;\n\n        if ( !$.isPlainObject( options ) ) {\n            options = {\n                element:            args[ 0 ],\n                clickTimeThreshold: args[ 1 ],\n                clickDistThreshold: args[ 2 ]\n            };\n        }\n\n        this.hash               = Math.random(); // An unique hash for this tracker.\n        /**\n         * The element for which pointer events are being monitored.\n         * @member {Element} element\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.element            = $.getElement( options.element );\n        /**\n         * The number of milliseconds within which a pointer down-up event combination\n         * will be treated as a click gesture.\n         * @member {Number} clickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickTimeThreshold = options.clickTimeThreshold || $.DEFAULT_SETTINGS.clickTimeThreshold;\n        /**\n         * The maximum distance allowed between a pointer down event and a pointer up event\n         * to be treated as a click gesture.\n         * @member {Number} clickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.clickDistThreshold = options.clickDistThreshold || $.DEFAULT_SETTINGS.clickDistThreshold;\n        /**\n         * The number of milliseconds within which two pointer down-up event combinations\n         * will be treated as a double-click gesture.\n         * @member {Number} dblClickTimeThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickTimeThreshold = options.dblClickTimeThreshold || $.DEFAULT_SETTINGS.dblClickTimeThreshold;\n        /**\n         * The maximum distance allowed between two pointer click events\n         * to be treated as a double-click gesture.\n         * @member {Number} dblClickDistThreshold\n         * @memberof OpenSeadragon.MouseTracker#\n         */\n        this.dblClickDistThreshold = options.dblClickDistThreshold || $.DEFAULT_SETTINGS.dblClickDistThreshold;\n        /*eslint-disable no-multi-spaces*/\n        this.userData              = options.userData          || null;\n        this.stopDelay             = options.stopDelay         || 50;\n\n        this.preProcessEventHandler   = options.preProcessEventHandler   || null;\n        this.contextMenuHandler       = options.contextMenuHandler       || null;\n        this.enterHandler             = options.enterHandler             || null;\n        this.leaveHandler             = options.leaveHandler             || null;\n        this.exitHandler              = options.exitHandler              || null; // Deprecated v2.5.0\n        this.overHandler              = options.overHandler              || null;\n        this.outHandler               = options.outHandler               || null;\n        this.pressHandler             = options.pressHandler             || null;\n        this.nonPrimaryPressHandler   = options.nonPrimaryPressHandler   || null;\n        this.releaseHandler           = options.releaseHandler           || null;\n        this.nonPrimaryReleaseHandler = options.nonPrimaryReleaseHandler || null;\n        this.moveHandler              = options.moveHandler              || null;\n        this.scrollHandler            = options.scrollHandler            || null;\n        this.clickHandler             = options.clickHandler             || null;\n        this.dblClickHandler          = options.dblClickHandler          || null;\n        this.dragHandler              = options.dragHandler              || null;\n        this.dragEndHandler           = options.dragEndHandler           || null;\n        this.pinchHandler             = options.pinchHandler             || null;\n        this.stopHandler              = options.stopHandler              || null;\n        this.keyDownHandler           = options.keyDownHandler           || null;\n        this.keyUpHandler             = options.keyUpHandler             || null;\n        this.keyHandler               = options.keyHandler               || null;\n        this.focusHandler             = options.focusHandler             || null;\n        this.blurHandler              = options.blurHandler              || null;\n        /*eslint-enable no-multi-spaces*/\n\n        //Store private properties in a scope sealed hash map\n        var _this = this;\n\n        /**\n         * @private\n         * @property {Boolean} tracking\n         *      Are we currently tracking pointer events for this element.\n         */\n        THIS[ this.hash ] = {\n            click:                 function ( event ) { onClick( _this, event ); },\n            dblclick:              function ( event ) { onDblClick( _this, event ); },\n            keydown:               function ( event ) { onKeyDown( _this, event ); },\n            keyup:                 function ( event ) { onKeyUp( _this, event ); },\n            keypress:              function ( event ) { onKeyPress( _this, event ); },\n            focus:                 function ( event ) { onFocus( _this, event ); },\n            blur:                  function ( event ) { onBlur( _this, event ); },\n            contextmenu:           function ( event ) { onContextMenu( _this, event ); },\n\n            wheel:                 function ( event ) { onWheel( _this, event ); },\n            mousewheel:            function ( event ) { onMouseWheel( _this, event ); },\n            DOMMouseScroll:        function ( event ) { onMouseWheel( _this, event ); },\n            MozMousePixelScroll:   function ( event ) { onMouseWheel( _this, event ); },\n\n            losecapture:           function ( event ) { onLoseCapture( _this, event ); },\n\n            mouseenter:            function ( event ) { onPointerEnter( _this, event ); },\n            mouseleave:            function ( event ) { onPointerLeave( _this, event ); },\n            mouseover:             function ( event ) { onPointerOver( _this, event ); },\n            mouseout:              function ( event ) { onPointerOut( _this, event ); },\n            mousedown:             function ( event ) { onPointerDown( _this, event ); },\n            mouseup:               function ( event ) { onPointerUp( _this, event ); },\n            mousemove:             function ( event ) { onPointerMove( _this, event ); },\n\n            touchstart:            function ( event ) { onTouchStart( _this, event ); },\n            touchend:              function ( event ) { onTouchEnd( _this, event ); },\n            touchmove:             function ( event ) { onTouchMove( _this, event ); },\n            touchcancel:           function ( event ) { onTouchCancel( _this, event ); },\n\n            gesturestart:          function ( event ) { onGestureStart( _this, event ); }, // Safari/Safari iOS\n            gesturechange:         function ( event ) { onGestureChange( _this, event ); }, // Safari/Safari iOS\n\n            gotpointercapture:     function ( event ) { onGotPointerCapture( _this, event ); },\n            lostpointercapture:    function ( event ) { onLostPointerCapture( _this, event ); },\n            pointerenter:          function ( event ) { onPointerEnter( _this, event ); },\n            pointerleave:          function ( event ) { onPointerLeave( _this, event ); },\n            pointerover:           function ( event ) { onPointerOver( _this, event ); },\n            pointerout:            function ( event ) { onPointerOut( _this, event ); },\n            pointerdown:           function ( event ) { onPointerDown( _this, event ); },\n            pointerup:             function ( event ) { onPointerUp( _this, event ); },\n            pointermove:           function ( event ) { onPointerMove( _this, event ); },\n            pointercancel:         function ( event ) { onPointerCancel( _this, event ); },\n            pointerupcaptured:     function ( event ) { onPointerUpCaptured( _this, event ); },\n            pointermovecaptured:   function ( event ) { onPointerMoveCaptured( _this, event ); },\n\n            tracking:              false,\n\n            // Active pointers lists. Array of GesturePointList objects, one for each pointer device type.\n            // GesturePointList objects are added each time a pointer is tracked by a new pointer device type (see getActivePointersListByType()).\n            // Active pointers are any pointer being tracked for this element which are in the hit-test area\n            //     of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n            activePointersLists:   [],\n\n            // Tracking for double-click gesture\n            lastClickPos:          null,\n            dblClickTimeOut:       null,\n\n            // Tracking for pinch gesture\n            pinchGPoints:          [],\n            lastPinchDist:         0,\n            currentPinchDist:      0,\n            lastPinchCenter:       null,\n            currentPinchCenter:    null,\n\n            // Tracking for drag\n            sentDragEvent:         false\n        };\n\n        this.hasGestureHandlers = !!( this.pressHandler || this.nonPrimaryPressHandler ||\n                                this.releaseHandler || this.nonPrimaryReleaseHandler ||\n                                this.clickHandler || this.dblClickHandler ||\n                                this.dragHandler || this.dragEndHandler ||\n                                this.pinchHandler );\n        this.hasScrollHandler = !!this.scrollHandler;\n\n        if ( $.MouseTracker.havePointerEvents ) {\n            $.setElementPointerEvents( this.element, 'auto' );\n        }\n\n        if (this.exitHandler) {\n            $.console.error(\"MouseTracker.exitHandler is deprecated. Use MouseTracker.leaveHandler instead.\");\n        }\n\n        if ( !options.startDisabled ) {\n            this.setTracking( true );\n        }\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.prototype */\n    $.MouseTracker.prototype = {\n\n        /**\n         * Clean up any events or objects created by the tracker.\n         * @function\n         */\n        destroy: function () {\n            var i;\n\n            stopTracking( this );\n            this.element = null;\n\n            for ( i = 0; i < MOUSETRACKERS.length; i++ ) {\n                if ( MOUSETRACKERS[ i ] === this ) {\n                    MOUSETRACKERS.splice( i, 1 );\n                    break;\n                }\n            }\n\n            THIS[ this.hash ] = null;\n            delete THIS[ this.hash ];\n        },\n\n        /**\n         * Are we currently tracking events on this element.\n         * @deprecated Just use this.tracking\n         * @function\n         * @returns {Boolean} Are we currently tracking events on this element.\n         */\n        isTracking: function () {\n            return THIS[ this.hash ].tracking;\n        },\n\n        /**\n         * Enable or disable whether or not we are tracking events on this element.\n         * @function\n         * @param {Boolean} track True to start tracking, false to stop tracking.\n         * @returns {OpenSeadragon.MouseTracker} Chainable.\n         */\n        setTracking: function ( track ) {\n            if ( track ) {\n                startTracking( this );\n            } else {\n                stopTracking( this );\n            }\n            //chain\n            return this;\n        },\n\n        /**\n         * Returns the {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} for the given pointer device type,\n         * creating and caching a new {@link OpenSeadragon.MouseTracker.GesturePointList|GesturePointList} if one doesn't already exist for the type.\n         * @function\n         * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @returns {OpenSeadragon.MouseTracker.GesturePointList}\n         */\n        getActivePointersListByType: function ( type ) {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                list;\n\n            for ( i = 0; i < len; i++ ) {\n                if ( delegate.activePointersLists[ i ].type === type ) {\n                    return delegate.activePointersLists[ i ];\n                }\n            }\n\n            list = new $.MouseTracker.GesturePointList( type );\n            delegate.activePointersLists.push( list );\n            return list;\n        },\n\n        /**\n         * Returns the total number of pointers currently active on the tracked element.\n         * @function\n         * @returns {Number}\n         */\n        getActivePointerCount: function () {\n            var delegate = THIS[ this.hash ],\n                i,\n                len = delegate.activePointersLists.length,\n                count = 0;\n\n            for ( i = 0; i < len; i++ ) {\n                count += delegate.activePointersLists[ i ].getLength();\n            }\n\n            return count;\n        },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n         */\n        preProcessEventHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefault\n         *      Set to true to prevent the default user-agent's handling of the contextmenu event.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        contextMenuHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        enterHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @since v2.5.0\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        leaveHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @deprecated v2.5.0 Use leaveHandler instead\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        exitHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @since v2.5.0\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        overHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @since v2.5.0\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Number} event.pointers\n         *      Number of pointers (all types) active in the tracked element.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.buttonDownAny\n         *      Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        outHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryPressHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.insideElementPressed\n         *      True if the left mouse button is currently being pressed and was\n         *      initiated inside the tracked element, otherwise false.\n         * @param {Boolean} event.insideElementReleased\n         *      True if the cursor inside the tracked element when the button was released.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        releaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.button\n         *      Button which caused the event.\n         *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        nonPrimaryReleaseHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        moveHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.scroll\n         *      The scroll delta for the event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead. Touch devices no longer generate scroll event.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefault\n         *      Set to true to prevent the default user-agent's handling of the wheel event.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        scrollHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.quick\n         *      True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for ignoring drag events.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Element} event.originalTarget\n         *      The DOM element clicked on.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        clickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dblClickHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {OpenSeadragon.Point} event.delta\n         *      The x,y components of the difference between the current position and the last drag event position.  Useful for ignoring or weighting the events.\n         * @param {Number} event.speed\n         *     Current computed speed, in pixels per second.\n         * @param {Number} event.direction\n         *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.speed\n         *     Speed at the end of a drag gesture, in pixels per second.\n         * @param {Number} event.direction\n         *     Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        dragEndHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {Array.<OpenSeadragon.MouseTracker.GesturePoint>} event.gesturePoints\n         *      Gesture points associated with the gesture. Velocity data can be found here.\n         * @param {OpenSeadragon.Point} event.lastCenter\n         *      The previous center point of the two pinch contact points relative to the tracked element.\n         * @param {OpenSeadragon.Point} event.center\n         *      The center point of the two pinch contact points relative to the tracked element.\n         * @param {Number} event.lastDistance\n         *      The previous distance between the two pinch contact points in CSS pixels.\n         * @param {Number} event.distance\n         *      The distance between the two pinch contact points in CSS pixels.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        pinchHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {String} event.pointerType\n         *     \"mouse\", \"touch\", \"pen\", etc.\n         * @param {OpenSeadragon.Point} event.position\n         *      The position of the event relative to the tracked element.\n         * @param {Number} event.buttons\n         *      Current buttons pressed.\n         *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @param {Boolean} event.isTouchEvent\n         *      True if the original event is a touch event, otherwise false. <span style=\"color:red;\">Deprecated. Use pointerType and/or originalEvent instead.</span>\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        stopHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefault\n         *      Set to true to prevent the default user-agent's handling of the keydown event.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyDownHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefault\n         *      Set to true to prevent the default user-agent's handling of the keyup event.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyUpHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Number} event.keyCode\n         *      The key code that was pressed.\n         * @param {Boolean} event.ctrl\n         *      True if the ctrl key was pressed during this event.\n         * @param {Boolean} event.shift\n         *      True if the shift key was pressed during this event.\n         * @param {Boolean} event.alt\n         *      True if the alt key was pressed during this event.\n         * @param {Boolean} event.meta\n         *      True if the meta key was pressed during this event.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Boolean} event.preventDefault\n         *      Set to true to prevent the default user-agent's handling of the keypress event.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        keyHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        focusHandler: function () { },\n\n        /**\n         * Implement or assign implementation to these handlers during or after\n         * calling the constructor.\n         * @function\n         * @param {Object} event\n         * @param {OpenSeadragon.MouseTracker} event.eventSource\n         *      A reference to the tracker instance.\n         * @param {Object} event.originalEvent\n         *      The original event object.\n         * @param {Object} event.userData\n         *      Arbitrary user-defined object.\n         */\n        blurHandler: function () { }\n    };\n\n    // https://github.com/openseadragon/openseadragon/pull/790\n    /**\n     * True if inside an iframe, otherwise false.\n     * @member {Boolean} isInIframe\n     * @private\n     * @inner\n     */\n    var isInIframe = (function() {\n        try {\n            return window.self !== window.top;\n        } catch (e) {\n            return true;\n        }\n    })();\n\n    // https://github.com/openseadragon/openseadragon/pull/790\n    /**\n     * @function\n     * @private\n     * @inner\n     * @returns {Boolean} True if the target supports DOM Level 2 event subscription methods, otherwise false.\n     */\n    function canAccessEvents (target) {\n        try {\n            return target.addEventListener && target.removeEventListener;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Provides continuous computation of velocity (speed and direction) of active pointers.\n     * This is a singleton, used by all MouseTracker instances, as it is unlikely there will ever be more than\n     * two active gesture pointers at a time.\n     *\n     * @private\n     * @member gesturePointVelocityTracker\n     * @memberof OpenSeadragon.MouseTracker\n     */\n    $.MouseTracker.gesturePointVelocityTracker = (function () {\n        var trackerPoints = [],\n            intervalId = 0,\n            lastTime = 0;\n\n        // Generates a unique identifier for a tracked gesture point\n        var _generateGuid = function ( tracker, gPoint ) {\n            return tracker.hash.toString() + gPoint.type + gPoint.id.toString();\n        };\n\n        // Interval timer callback. Computes velocity for all tracked gesture points.\n        var _doTracking = function () {\n            var i,\n                len = trackerPoints.length,\n                trackPoint,\n                gPoint,\n                now = $.now(),\n                elapsedTime,\n                distance,\n                speed;\n\n            elapsedTime = now - lastTime;\n            lastTime = now;\n\n            for ( i = 0; i < len; i++ ) {\n                trackPoint = trackerPoints[ i ];\n                gPoint = trackPoint.gPoint;\n                // Math.atan2 gives us just what we need for a velocity vector, as we can simply\n                //   use cos()/sin() to extract the x/y velocity components.\n                gPoint.direction = Math.atan2( gPoint.currentPos.y - trackPoint.lastPos.y, gPoint.currentPos.x - trackPoint.lastPos.x );\n                // speed = distance / elapsed time\n                distance = trackPoint.lastPos.distanceTo( gPoint.currentPos );\n                trackPoint.lastPos = gPoint.currentPos;\n                speed = 1000 * distance / ( elapsedTime + 1 );\n                // Simple biased average, favors the most recent speed computation. Smooths out erratic gestures a bit.\n                gPoint.speed = 0.75 * speed + 0.25 * gPoint.speed;\n            }\n        };\n\n        // Public. Add a gesture point to be tracked\n        var addPoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint );\n\n            trackerPoints.push(\n                {\n                    guid: guid,\n                    gPoint: gPoint,\n                    lastPos: gPoint.currentPos\n                } );\n\n            // Only fire up the interval timer when there's gesture pointers to track\n            if ( trackerPoints.length === 1 ) {\n                lastTime = $.now();\n                intervalId = window.setInterval( _doTracking, 50 );\n            }\n        };\n\n        // Public. Stop tracking a gesture point\n        var removePoint = function ( tracker, gPoint ) {\n            var guid = _generateGuid( tracker, gPoint ),\n                i,\n                len = trackerPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( trackerPoints[ i ].guid === guid ) {\n                    trackerPoints.splice( i, 1 );\n                    // Only run the interval timer if theres gesture pointers to track\n                    len--;\n                    if ( len === 0 ) {\n                        window.clearInterval( intervalId );\n                    }\n                    break;\n                }\n            }\n        };\n\n        return {\n            addPoint:    addPoint,\n            removePoint: removePoint\n        };\n    } )();\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Pointer event model and feature detection\n///////////////////////////////////////////////////////////////////////////////\n\n    $.MouseTracker.captureElement = document;\n\n    /**\n     * Detect available mouse wheel event name.\n     */\n    $.MouseTracker.wheelEventName = ( $.Browser.vendor === $.BROWSERS.IE && $.Browser.version > 8 ) ||\n                                                ( 'onwheel' in document.createElement( 'div' ) ) ? 'wheel' : // Modern browsers support 'wheel'\n                                    document.onmousewheel !== undefined ? 'mousewheel' :                     // Webkit and IE support at least 'mousewheel'\n                                    'DOMMouseScroll';                                                        // Assume old Firefox\n\n    /**\n     * Detect browser pointer device event model(s) and build appropriate list of events to subscribe to.\n     */\n    $.MouseTracker.subscribeEvents = [ \"click\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", \"contextmenu\", $.MouseTracker.wheelEventName ];\n\n    if( $.MouseTracker.wheelEventName === \"DOMMouseScroll\" ) {\n        // Older Firefox\n        $.MouseTracker.subscribeEvents.push( \"MozMousePixelScroll\" );\n    }\n\n    if ( window.PointerEvent ) {\n        // IE11 and other W3C Pointer Event implementations (see http://www.w3.org/TR/pointerevents)\n        $.MouseTracker.havePointerEvents = true;\n        $.MouseTracker.subscribeEvents.push( \"pointerenter\", \"pointerleave\", \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\" );\n        // Pointer events capture support\n        $.MouseTracker.havePointerCapture = (function () {\n            var divElement = document.createElement( 'div' );\n            return $.isFunction( divElement.setPointerCapture ) && $.isFunction( divElement.releasePointerCapture );\n        }());\n        if ( $.MouseTracker.havePointerCapture ) {\n            $.MouseTracker.subscribeEvents.push( \"gotpointercapture\", \"lostpointercapture\" );\n        }\n    } else {\n        // Legacy W3C mouse events\n        $.MouseTracker.havePointerEvents = false;\n        $.MouseTracker.subscribeEvents.push( \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mousedown\", \"mouseup\", \"mousemove\" );\n        $.MouseTracker.mousePointerId = \"legacy-mouse\";\n        // Legacy mouse events capture support (IE/Firefox only?)\n        $.MouseTracker.havePointerCapture = (function () {\n            var divElement = document.createElement( 'div' );\n            return $.isFunction( divElement.setCapture ) && $.isFunction( divElement.releaseCapture );\n        }());\n        if ( $.MouseTracker.havePointerCapture ) {\n            $.MouseTracker.subscribeEvents.push( \"losecapture\" );\n        }\n        // Legacy touch events\n        if ( 'ontouchstart' in window ) {\n            // iOS, Android, and other W3c Touch Event implementations\n            //    (see http://www.w3.org/TR/touch-events/)\n            //    (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //    (see https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            $.MouseTracker.subscribeEvents.push( \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\" );\n        }\n        if ( 'ongesturestart' in window ) {\n            // iOS (see https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html)\n            //   Subscribe to these to prevent default gesture handling\n            $.MouseTracker.subscribeEvents.push( \"gesturestart\", \"gesturechange\" );\n        }\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Classes and typedefs\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Used for the processing/disposition of DOM events (propagation, default handling, capture, etc.)\n     *\n     * @typedef {Object} EventProcessInfo\n     * @memberof OpenSeadragon.MouseTracker\n     * @since v2.5.0\n     *\n     * @property {OpenSeadragon.MouseTracker} eventSource\n     *      A reference to the tracker instance.\n     * @property {Object} originalEvent\n     *      The original DOM event object.\n     * @property {Number} eventPhase\n     *      0 == NONE, 1 == CAPTURING_PHASE, 2 == AT_TARGET, 3 == BUBBLING_PHASE.\n     * @property {String} eventType\n     *     \"keydown\", \"keyup\", \"keypress\", \"focus\", \"blur\", \"contextmenu\", \"gotpointercapture\", \"lostpointercapture\", \"pointerenter\", \"pointerleave\", \"pointerover\", \"pointerout\", \"pointerdown\", \"pointerup\", \"pointermove\", \"pointercancel\", \"wheel\", \"click\", \"dblclick\".\n     * @property {String} pointerType\n     *     \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Boolean} isEmulated\n     *      True if this is an emulated event. If true, originalEvent is either the event that caused\n     *      the emulated event, a synthetic event object created with values from the actual DOM event,\n     *      or null if no DOM event applies. Emulated events can occur on eventType \"wheel\" on legacy mouse-scroll\n     *      event emitting user agents.\n     * @property {Boolean} isStoppable\n     *      True if propagation of the event (e.g. bubbling) can be stopped with stopPropagation/stopImmediatePropagation.\n     * @property {Boolean} isCancelable\n     *      True if the event's default handling by the browser can be prevented with preventDefault.\n     * @property {Boolean} defaultPrevented\n     *      True if the event's default handling has already been prevented by a descendent element.\n     * @property {Boolean} preventDefault\n     *      Set to true to prevent the event's default handling by the browser.\n     * @property {Boolean} preventGesture\n     *      Set to true to prevent this MouseTracker from generating a gesture from the event.\n     *      Valid on eventType \"pointerdown\".\n     * @property {Boolean} stopPropagation\n     *      Set to true prevent the event from propagating to ancestor/descendent elements on capture/bubble phase.\n     * @property {Boolean} shouldCapture\n     *      (Internal Use) Set to true if the pointer should be captured (events (re)targeted to tracker element).\n     * @property {Boolean} shouldReleaseCapture\n     *      (Internal Use) Set to true if the captured pointer should be released.\n     * @property {Object} userData\n     *      Arbitrary user-defined object.\n     */\n\n\n    /**\n     * Represents a point of contact on the screen made by a mouse cursor, pen, touch, or other pointer device.\n     *\n     * @typedef {Object} GesturePoint\n     * @memberof OpenSeadragon.MouseTracker\n     *\n     * @property {Number} id\n     *     Identifier unique from all other active GesturePoints for a given pointer device.\n     * @property {String} type\n     *     The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Boolean} captured\n     *     True if events for the gesture point are captured to the tracked element.\n     * @property {Boolean} isPrimary\n     *     True if the gesture point is a master pointer amongst the set of active pointers for each pointer type. True for mouse and primary (first) touch/pen pointers.\n     * @property {Boolean} insideElementPressed\n     *     True if button pressed or contact point initiated inside the screen area of the tracked element.\n     * @property {Boolean} insideElement\n     *     True if pointer or contact point is currently inside the bounds of the tracked element.\n     * @property {Number} speed\n     *     Current computed speed, in pixels per second.\n     * @property {Number} direction\n     *     Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {OpenSeadragon.Point} contactPos\n     *     The initial pointer contact position, relative to the page including any scrolling. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {Number} contactTime\n     *     The initial pointer contact time, in milliseconds. Only valid if the pointer has contact (pressed, touch contact, pen contact).\n     * @property {OpenSeadragon.Point} lastPos\n     *     The last pointer position, relative to the page including any scrolling.\n     * @property {Number} lastTime\n     *     The last pointer contact time, in milliseconds.\n     * @property {OpenSeadragon.Point} currentPos\n     *     The current pointer position, relative to the page including any scrolling.\n     * @property {Number} currentTime\n     *     The current pointer contact time, in milliseconds.\n     */\n\n\n    /**\n     * @class GesturePointList\n     * @classdesc Provides an abstraction for a set of active {@link OpenSeadragon.MouseTracker.GesturePoint|GesturePoint} objects for a given pointer device type.\n     *            Active pointers are any pointer being tracked for this element which are in the hit-test area\n     *            of the element (for hover-capable devices) and/or have contact or a button press initiated in the element.\n     * @memberof OpenSeadragon.MouseTracker\n     * @param {String} type - The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n     */\n    $.MouseTracker.GesturePointList = function ( type ) {\n        this._gPoints = [];\n        /**\n         * The pointer device type: \"mouse\", \"touch\", \"pen\", etc.\n         * @member {String} type\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.type = type;\n        /**\n         * Current buttons pressed for the device.\n         * Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n         * @member {Number} buttons\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.buttons = 0;\n        /**\n         * Current number of contact points (touch points, mouse down, etc.) for the device.\n         * @member {Number} contacts\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.contacts = 0;\n        /**\n         * Current number of clicks for the device. Used for multiple click gesture tracking.\n         * @member {Number} clicks\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.clicks = 0;\n        /**\n         * Current number of captured pointers for the device.\n         * @member {Number} captureCount\n         * @memberof OpenSeadragon.MouseTracker.GesturePointList#\n         */\n        this.captureCount = 0;\n    };\n\n    /** @lends OpenSeadragon.MouseTracker.GesturePointList.prototype */\n    $.MouseTracker.GesturePointList.prototype = {\n        /**\n         * @function\n         * @returns {Number} Number of gesture points in the list.\n         */\n        getLength: function () {\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @returns {Array.<OpenSeadragon.MouseTracker.GesturePoint>} The list of gesture points in the list as an array (read-only).\n         */\n        asArray: function () {\n            return this._gPoints;\n        },\n        /**\n         * @function\n         * @param {OpenSeadragon.MouseTracker.GesturePoint} gesturePoint - A gesture point to add to the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        add: function ( gp ) {\n            return this._gPoints.push( gp );\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to remove from the list.\n         * @returns {Number} Number of gesture points in the list.\n         */\n        removeById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    this._gPoints.splice( i, 1 );\n                    break;\n                }\n            }\n            return this._gPoints.length;\n        },\n        /**\n         * @function\n         * @param {Number} index - The index of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point at the given index, or null if not found.\n         */\n        getByIndex: function ( index ) {\n            if ( index < this._gPoints.length) {\n                return this._gPoints[ index ];\n            }\n\n            return null;\n        },\n        /**\n         * @function\n         * @param {Number} id - The id of the gesture point to retrieve from the list.\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The gesture point with the given id, or null if not found.\n         */\n        getById: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].id === id ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        },\n        /**\n         * @function\n         * @returns {OpenSeadragon.MouseTracker.GesturePoint|null} The primary gesture point in the list, or null if not found.\n         */\n        getPrimary: function ( id ) {\n            var i,\n                len = this._gPoints.length;\n            for ( i = 0; i < len; i++ ) {\n                if ( this._gPoints[ i ].isPrimary ) {\n                    return this._gPoints[ i ];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * Increment this pointer list's contact count.\n         * It will evaluate whether this pointer type is allowed to have multiple contacts.\n         * @function\n         */\n        addContact: function() {\n            ++this.contacts;\n\n            if (this.contacts > 1 && (this.type === \"mouse\" || this.type === \"pen\")) {\n                $.console.warn('GesturePointList.addContact() Implausible contacts value');\n                this.contacts = 1;\n            }\n        },\n\n        /**\n         * Decrement this pointer list's contact count.\n         * It will make sure the count does not go below 0.\n         * @function\n         */\n        removeContact: function() {\n            --this.contacts;\n\n            if (this.contacts < 0) {\n                this.contacts = 0;\n            }\n        }\n    };\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Utility functions\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Removes all tracked pointers.\n     * @private\n     * @inner\n     */\n    function clearTrackedPointers( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            i, j,\n            pointsList,\n            gPoints,\n            gPointsToRemove,\n            pointerListCount = delegate.activePointersLists.length;\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            pointsList = delegate.activePointersLists[ i ];\n\n            if ( pointsList.getLength() > 0 ) {\n                // Make an array containing references to the gPoints in the pointer list\n                //   (because calls to stopTrackingPointer() are going to modify the pointer list)\n                gPointsToRemove = [];\n                gPoints = pointsList.asArray();\n                for ( j = 0; j < gPoints.length; j++ ) {\n                    gPointsToRemove.push( gPoints[ j ] );\n                }\n\n                // Release and remove all gPoints from the pointer list\n                for ( j = 0; j < gPointsToRemove.length; j++ ) {\n                    stopTrackingPointer( tracker, pointsList, gPointsToRemove[ j ] );\n                }\n            }\n        }\n\n        for ( i = 0; i < pointerListCount; i++ ) {\n            delegate.activePointersLists.pop();\n        }\n\n        delegate.sentDragEvent = false;\n    }\n\n    /**\n     * Starts tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function startTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( !delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.addEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    event === $.MouseTracker.wheelEventName ? { passive: false, capture: false } : false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = true;\n        }\n    }\n\n    /**\n     * Stops tracking pointer events on the tracked element.\n     * @private\n     * @inner\n     */\n    function stopTracking( tracker ) {\n        var delegate = THIS[ tracker.hash ],\n            event,\n            i;\n\n        if ( delegate.tracking ) {\n            for ( i = 0; i < $.MouseTracker.subscribeEvents.length; i++ ) {\n                event = $.MouseTracker.subscribeEvents[ i ];\n                $.removeEvent(\n                    tracker.element,\n                    event,\n                    delegate[ event ],\n                    false\n                );\n            }\n\n            clearTrackedPointers( tracker );\n\n            delegate.tracking = false;\n        }\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCaptureEventParams( tracker, pointerType ) {\n        var delegate = THIS[ tracker.hash ];\n\n        if ( pointerType === 'pointerevent' ) {\n            return {\n                upName: 'pointerup',\n                upHandler: delegate.pointerupcaptured,\n                moveName: 'pointermove',\n                moveHandler: delegate.pointermovecaptured\n            };\n        } else if ( pointerType === 'mouse' ) {\n            return {\n                upName: 'pointerup',\n                upHandler: delegate.pointerupcaptured,\n                moveName: 'pointermove',\n                moveHandler: delegate.pointermovecaptured\n            };\n        } else if ( pointerType === 'touch' ) {\n            return {\n                upName: 'touchend',\n                upHandler: delegate.touchendcaptured,\n                moveName: 'touchmove',\n                moveHandler: delegate.touchmovecaptured\n            };\n        } else {\n            throw new Error( \"MouseTracker.getCaptureEventParams: Unknown pointer type.\" );\n        }\n    }\n\n    /**\n     * Begin capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function capturePointer( tracker, gPoint ) {\n        var eventParams;\n\n        if ( $.MouseTracker.havePointerCapture ) {\n            if ( $.MouseTracker.havePointerEvents ) {\n                // Can throw NotFoundError (InvalidPointerId Firefox < 82)\n                //   (should never happen so we'll log a warning)\n                try {\n                    tracker.element.setPointerCapture( gPoint.id );\n                    //$.console.log('element.setPointerCapture() called');\n                } catch ( e ) {\n                    $.console.warn('setPointerCapture() called on invalid pointer ID');\n                    return;\n                }\n            } else {\n                tracker.element.setCapture( true );\n                //$.console.log('element.setCapture() called');\n            }\n        } else {\n            // Emulate mouse capture by hanging listeners on the document object.\n            //    (Note we listen on the capture phase so the captured handlers will get called first)\n            // eslint-disable-next-line no-use-before-define\n            //$.console.log('Emulated mouse capture set');\n            eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : gPoint.type );\n            // https://github.com/openseadragon/openseadragon/pull/790\n            if (isInIframe && canAccessEvents(window.top)) {\n                $.addEvent(\n                    window.top,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n            }\n            $.addEvent(\n                $.MouseTracker.captureElement,\n                eventParams.upName,\n                eventParams.upHandler,\n                true\n            );\n            $.addEvent(\n                $.MouseTracker.captureElement,\n                eventParams.moveName,\n                eventParams.moveHandler,\n                true\n            );\n        }\n\n        updatePointerCaptured( tracker, gPoint, true );\n    }\n\n\n    /**\n     * Stop capturing pointer events to the tracked element.\n     * @private\n     * @inner\n     */\n    function releasePointer( tracker, gPoint ) {\n        var eventParams;\n        var pointsList;\n        var cachedGPoint;\n\n        if ( $.MouseTracker.havePointerCapture ) {\n            if ( $.MouseTracker.havePointerEvents ) {\n                pointsList = tracker.getActivePointersListByType( gPoint.type );\n                cachedGPoint = pointsList.getById( gPoint.id );\n                if ( !cachedGPoint || !cachedGPoint.captured ) {\n                    return;\n                }\n                // Can throw NotFoundError (InvalidPointerId Firefox < 82)\n                //   (should never happen, but it does on Firefox 79 touch so we won't log a warning)\n                try {\n                    tracker.element.releasePointerCapture( gPoint.id );\n                    //$.console.log('element.releasePointerCapture() called');\n                } catch ( e ) {\n                    //$.console.warn('releasePointerCapture() called on invalid pointer ID');\n                }\n            } else {\n                tracker.element.releaseCapture();\n                //$.console.log('element.releaseCapture() called');\n            }\n        } else {\n            // Emulate mouse capture by hanging listeners on the document object.\n            //    (Note we listen on the capture phase so the captured handlers will get called first)\n            //$.console.log('Emulated mouse capture release');\n            eventParams = getCaptureEventParams( tracker, $.MouseTracker.havePointerEvents ? 'pointerevent' : gPoint.type );\n            // https://github.com/openseadragon/openseadragon/pull/790\n            if (isInIframe && canAccessEvents(window.top)) {\n                $.removeEvent(\n                    window.top,\n                    eventParams.upName,\n                    eventParams.upHandler,\n                    true\n                );\n            }\n            $.removeEvent(\n                $.MouseTracker.captureElement,\n                eventParams.moveName,\n                eventParams.moveHandler,\n                true\n            );\n            $.removeEvent(\n                $.MouseTracker.captureElement,\n                eventParams.upName,\n                eventParams.upHandler,\n                true\n            );\n        }\n\n        updatePointerCaptured( tracker, gPoint, false );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     * @private\n     * @inner\n     */\n    function getPointerId( event ) {\n        return ( $.MouseTracker.havePointerEvents ) ? event.pointerId : $.MouseTracker.mousePointerId;\n    }\n\n\n    /**\n     * Gets a W3C Pointer Events model compatible pointer type string from a DOM pointer event.\n     * IE10 used a long integer value, but the W3C specification (and IE11+) use a string \"mouse\", \"touch\", \"pen\", etc.\n     *\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     * @private\n     * @inner\n     */\n    function getPointerType( event ) {\n        if ( $.MouseTracker.havePointerEvents ) {\n            // Note: IE pointer events bug - sends invalid pointerType on lostpointercapture events\n            //    and possibly other events. We rely on sane, valid property values in DOM events, so for\n            //    IE, when the pointerType is missing, we'll default to 'mouse'...should be right most of the time\n            return event.pointerType || (( $.Browser.vendor === $.BROWSERS.IE ) ? 'mouse' : '');\n        } else {\n            return 'mouse';\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     * @private\n     * @inner\n     */\n    function getIsPrimary( event ) {\n        return ( $.MouseTracker.havePointerEvents ) ? event.isPrimary : true;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseAbsolute( event ) {\n        return $.getMousePosition( event );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getMouseRelative( event, element ) {\n        return getPointRelativeToAbsolute( getMouseAbsolute( event ), element );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getPointRelativeToAbsolute( point, element ) {\n        var offset = $.getElementOffset( element );\n        return point.minus( offset );\n    }\n\n    /**\n     * @private\n     * @inner\n     */\n    function getCenterPoint( point1, point2 ) {\n        return new $.Point( ( point1.x + point2.x ) / 2, ( point1.y + point2.y ) / 2 );\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-specific DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @private\n     * @inner\n     */\n    function onClick( tracker, event ) {\n        //$.console.log('click ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'click',\n            pointerType: 'mouse',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onDblClick( tracker, event ) {\n        //$.console.log('dblclick ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'dblclick',\n            pointerType: 'mouse',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyDown( tracker, event ) {\n        //$.console.log( \"keydown %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n        var eventArgs = null;\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'keydown',\n            pointerType: '',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.keyDownHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventArgs = {\n                eventSource:          tracker,\n                keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                ctrl:                 event.ctrlKey,\n                shift:                event.shiftKey,\n                alt:                  event.altKey,\n                meta:                 event.metaKey,\n                originalEvent:        event,\n                preventDefault:       eventInfo.preventDefault || eventInfo.defaultPrevented,\n                userData:             tracker.userData\n            };\n\n            tracker.keyDownHandler( eventArgs );\n        }\n\n        if ( ( eventArgs && eventArgs.preventDefault ) || ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) ) {\n                $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyUp( tracker, event ) {\n        //$.console.log( \"keyup %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\n        var eventArgs = null;\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'keyup',\n            pointerType: '',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.keyUpHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventArgs = {\n                eventSource:          tracker,\n                keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                ctrl:                 event.ctrlKey,\n                shift:                event.shiftKey,\n                alt:                  event.altKey,\n                meta:                 event.metaKey,\n                originalEvent:        event,\n                preventDefault:       eventInfo.preventDefault || eventInfo.defaultPrevented,\n                userData:             tracker.userData\n            };\n\n            tracker.keyUpHandler( eventArgs );\n        }\n\n        if ( ( eventArgs && eventArgs.preventDefault ) || ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onKeyPress( tracker, event ) {\n        //$.console.log( \"keypress %s %s %s %s %s\", event.keyCode, event.charCode, event.ctrlKey, event.shiftKey, event.altKey );\n\n        var eventArgs = null;\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'keypress',\n            pointerType: '',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.keyHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventArgs = {\n                eventSource:          tracker,\n                keyCode:              event.keyCode ? event.keyCode : event.charCode,\n                ctrl:                 event.ctrlKey,\n                shift:                event.shiftKey,\n                alt:                  event.altKey,\n                meta:                 event.metaKey,\n                originalEvent:        event,\n                preventDefault:       eventInfo.preventDefault || eventInfo.defaultPrevented,\n                userData:             tracker.userData\n            };\n\n            tracker.keyHandler( eventArgs );\n        }\n\n        if ( ( eventArgs && eventArgs.preventDefault ) || ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onFocus( tracker, event ) {\n        //$.console.log('focus  ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        // focus doesn't bubble and is not cancelable, but we call\n        //   preProcessEvent() so it's dispatched to preProcessEventHandler\n        //   if necessary\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'focus',\n            pointerType: '',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.focusHandler && !eventInfo.preventGesture ) {\n            tracker.focusHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    userData:             tracker.userData\n                }\n            );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onBlur( tracker, event ) {\n        //$.console.log('blur  ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        // blur doesn't bubble and is not cancelable, but we call\n        //   preProcessEvent() so it's dispatched to preProcessEventHandler\n        //   if necessary\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'blur',\n            pointerType: '',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.blurHandler && !eventInfo.preventGesture ) {\n            tracker.blurHandler(\n                {\n                    eventSource:          tracker,\n                    originalEvent:        event,\n                    userData:             tracker.userData\n                }\n            );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onContextMenu( tracker, event ) {\n        //$.console.log('contextmenu ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var eventArgs = null;\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'contextmenu',\n            pointerType: 'mouse',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        // ContextMenu\n        if ( tracker.contextMenuHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventArgs = {\n                eventSource:          tracker,\n                position:             getPointRelativeToAbsolute( getMouseAbsolute( event ), tracker.element ),\n                originalEvent:        eventInfo.originalEvent,\n                preventDefault:       eventInfo.preventDefault || eventInfo.defaultPrevented,\n                userData:             tracker.userData\n            };\n\n            tracker.contextMenuHandler( eventArgs );\n        }\n\n        if ( ( eventArgs && eventArgs.preventDefault ) || ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * Handler for 'wheel' events\n     *\n     * @private\n     * @inner\n     */\n    function onWheel( tracker, event ) {\n        handleWheelEvent( tracker, event, event );\n    }\n\n\n    /**\n     * Handler for 'mousewheel', 'DOMMouseScroll', and 'MozMousePixelScroll' events\n     *\n     * @private\n     * @inner\n     */\n    function onMouseWheel( tracker, event ) {\n        // Simulate a 'wheel' event\n        var simulatedEvent = {\n            target:     event.target || event.srcElement,\n            type:       \"wheel\",\n            shiftKey:   event.shiftKey || false,\n            clientX:    event.clientX,\n            clientY:    event.clientY,\n            pageX:      event.pageX ? event.pageX : event.clientX,\n            pageY:      event.pageY ? event.pageY : event.clientY,\n            deltaMode:  event.type === \"MozMousePixelScroll\" ? 0 : 1, // 0=pixel, 1=line, 2=page\n            deltaX:     0,\n            deltaZ:     0\n        };\n\n        // Calculate deltaY\n        if ( $.MouseTracker.wheelEventName === \"mousewheel\" ) {\n            simulatedEvent.deltaY = -event.wheelDelta / $.DEFAULT_SETTINGS.pixelsPerWheelLine;\n        } else {\n            simulatedEvent.deltaY = event.detail;\n        }\n\n        handleWheelEvent( tracker, simulatedEvent, event );\n    }\n\n\n    /**\n     * Handles 'wheel' events.\n     * The event may be simulated by the legacy mouse wheel event handler (onMouseWheel()).\n     *\n     * @private\n     * @inner\n     */\n    function handleWheelEvent( tracker, event, originalEvent ) {\n        var nDelta = 0,\n            eventInfo;\n\n        var eventArgs = null;\n\n        // The nDelta variable is gated to provide smooth z-index scrolling\n        //   since the mouse wheel allows for substantial deltas meant for rapid\n        //   y-index scrolling.\n        // event.deltaMode: 0=pixel, 1=line, 2=page\n        // TODO: Deltas in pixel mode should be accumulated then a scroll value computed after $.DEFAULT_SETTINGS.pixelsPerWheelLine threshold reached\n        nDelta = event.deltaY < 0 ? 1 : -1;\n\n        eventInfo = {\n            originalEvent: event,\n            eventType: 'wheel',\n            pointerType: 'mouse',\n            isEmulated: event !== originalEvent\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( tracker.scrollHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventArgs = {\n                eventSource:          tracker,\n                pointerType:          'mouse',\n                position:             getMouseRelative( event, tracker.element ),\n                scroll:               nDelta,\n                shift:                event.shiftKey,\n                isTouchEvent:         false,\n                originalEvent:        originalEvent,\n                preventDefault:       eventInfo.preventDefault || eventInfo.defaultPrevented,\n                userData:             tracker.userData\n            };\n\n\n            tracker.scrollHandler( eventArgs );\n        }\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( originalEvent );\n        }\n        if ( ( eventArgs && eventArgs.preventDefault ) || ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) ) {\n                $.cancelEvent( originalEvent );\n        }\n}\n\n\n    /**\n     * TODO Never actually seen this event fired, and documentation is tough to find\n     * @private\n     * @inner\n     */\n    function onLoseCapture( tracker, event ) {\n        //$.console.log('losecapture ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var gPoint = {\n            id: $.MouseTracker.mousePointerId,\n            type: 'mouse'\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'lostpointercapture',\n            pointerType: 'mouse',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( event.target === tracker.element ) {\n            updatePointerCaptured( tracker, gPoint, false );\n        }\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchStart( tracker, event ) {\n        var time,\n            i,\n            touchCount = event.changedTouches.length,\n            gPoint,\n            pointsList = tracker.getActivePointersListByType( 'touch' );\n\n        time = $.now();\n\n        //$.console.log('touchstart ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        if ( pointsList.getLength() > event.touches.length - touchCount ) {\n            $.console.warn('Tracked touch contact count doesn\\'t match event.touches.length');\n        }\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerdown',\n            pointerType: 'touch',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoint = {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                // Simulate isPrimary\n                isPrimary: pointsList.getLength() === 0,\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            };\n\n            // simulate touchenter on our tracked element\n            updatePointerEnter( tracker, eventInfo, gPoint );\n\n            updatePointerDown( tracker, eventInfo, gPoint, 0 );\n\n            updatePointerCaptured( tracker, gPoint, true );\n        }\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchEnd( tracker, event ) {\n        var time,\n            i,\n            touchCount = event.changedTouches.length,\n            gPoint;\n\n        time = $.now();\n\n        //$.console.log('touchend ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerup',\n            pointerType: 'touch',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoint = {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            };\n\n            updatePointerUp( tracker, eventInfo, gPoint, 0 );\n\n            updatePointerCaptured( tracker, gPoint, false );\n\n            // simulate touchleave on our tracked element\n            updatePointerLeave( tracker, eventInfo, gPoint );\n        }\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchMove( tracker, event ) {\n        var time,\n            i,\n            touchCount = event.changedTouches.length,\n            gPoint;\n\n        time = $.now();\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointermove',\n            pointerType: 'touch',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoint = {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch',\n                currentPos: getMouseAbsolute( event.changedTouches[ i ] ),\n                currentTime: time\n            };\n\n            updatePointerMove( tracker, eventInfo, gPoint );\n        }\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onTouchCancel( tracker, event ) {\n        var touchCount = event.changedTouches.length,\n            i,\n            gPoint;\n\n        //$.console.log('touchcancel ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointercancel',\n            pointerType: 'touch',\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        for ( i = 0; i < touchCount; i++ ) {\n            gPoint = {\n                id: event.changedTouches[ i ].identifier,\n                type: 'touch'\n            };\n\n            //TODO need to only do this if our element is target?\n            updatePointerCancel( tracker, eventInfo, gPoint );\n        }\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureStart( tracker, event ) {\n        if ( !$.eventIsCanceled( event ) ) {\n            event.preventDefault();\n        }\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGestureChange( tracker, event ) {\n        if ( !$.eventIsCanceled( event ) ) {\n            event.preventDefault();\n        }\n        return false;\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onGotPointerCapture( tracker, event ) {\n        //$.console.log('gotpointercapture ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'gotpointercapture',\n            pointerType: getPointerType( event ),\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( event.target === tracker.element ) {\n            //$.console.log('gotpointercapture ' + (tracker.userData ? tracker.userData.toString() : ''));\n            updatePointerCaptured( tracker, {\n                id: event.pointerId,\n                type: getPointerType( event )\n            }, true );\n        }\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onLostPointerCapture( tracker, event ) {\n        //$.console.log('lostpointercapture ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'lostpointercapture',\n            pointerType: getPointerType( event ),\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        if ( event.target === tracker.element ) {\n            //$.console.log('lostpointercapture ' + (tracker.userData ? tracker.userData.toString() : ''));\n            updatePointerCaptured( tracker, {\n                id: event.pointerId,\n                type: getPointerType( event )\n            }, false );\n        }\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerEnter( tracker, event ) {\n        //$.console.log('pointerenter ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        // pointerenter doesn't bubble and is not cancelable, but we call\n        //   preProcessEvent() so it's dispatched to preProcessEventHandler\n        //   if necessary\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerenter',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerEnter( tracker, eventInfo, gPoint );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerLeave( tracker, event ) {\n        //$.console.log('pointerleave ' + (tracker.userData ? tracker.userData.toString() : ''));\n\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        // pointerleave doesn't bubble and is not cancelable, but we call\n        //   preProcessEvent() so it's dispatched to preProcessEventHandler\n        //   if necessary\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerleave',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerLeave( tracker, eventInfo, gPoint );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerOver( tracker, event ) {\n        //$.console.log('pointerover ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerover',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerOver( tracker, eventInfo, gPoint );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerOut( tracker, event ) {\n        //$.console.log('pointerout ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerout',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerOut( tracker, eventInfo, gPoint );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerDown( tracker, event ) {\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        // Most browsers implicitly capture touch pointer events\n        // Note no IE versions have element.hasPointerCapture() so no implicit\n        //    pointer capture possible\n        // var implicitlyCaptured = ($.MouseTracker.havePointerEvents &&\n        //                         event.target.hasPointerCapture &&\n        //                         $.Browser.vendor !== $.BROWSERS.IE) ?\n        //                         event.target.hasPointerCapture(event.pointerId) : false;\n        var implicitlyCaptured = $.MouseTracker.havePointerEvents &&\n                                gPoint.type === 'touch' &&\n                                $.Browser.vendor !== $.BROWSERS.IE;\n\n        //$.console.log('pointerdown ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerdown',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerDown( tracker, eventInfo, gPoint, event.button );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n        if ( eventInfo.shouldCapture ) {\n            if ( implicitlyCaptured ) {\n                updatePointerCaptured( tracker, gPoint, true );\n            } else {\n                capturePointer( tracker, gPoint );\n            }\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerUp( tracker, event ) {\n        handlePointerUp( tracker, event );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerUp is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerUpCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerUp( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function handlePointerUp( tracker, event ) {\n        var gPoint;\n\n        //$.console.log('pointerup ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointerup',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerUp( tracker, eventInfo, gPoint, event.button );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n\n        // Per spec, pointerup events are supposed to release capture. Not all browser\n        //   versions have adhered to the spec, and there's no harm in releasing\n        //   explicitly\n        if ( eventInfo.shouldReleaseCapture ) {\n            if ( event.target === tracker.element ) {\n                releasePointer( tracker, gPoint );\n            } else {\n                updatePointerCaptured( tracker, gPoint, false );\n            }\n        }\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function onPointerMove( tracker, event ) {\n        handlePointerMove( tracker, event );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * This handler is attached to the window object (on the capture phase) to emulate mouse capture.\n     * onPointerMove is still attached to the tracked element, so stop propagation to avoid processing twice.\n     *\n     * @private\n     * @inner\n     */\n    function onPointerMoveCaptured( tracker, event ) {\n        var pointsList = tracker.getActivePointersListByType( getPointerType( event ) );\n        if ( pointsList.getById( event.pointerId ) ) {\n            handlePointerMove( tracker, event );\n        }\n        $.stopEvent( event );\n    }\n\n\n    /**\n     * Note: Called for both pointer events and legacy mouse events\n     *         ($.MouseTracker.havePointerEvents determines which)\n     *\n     * @private\n     * @inner\n     */\n    function handlePointerMove( tracker, event ) {\n        // Pointer changed coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n\n        var gPoint = {\n            id: getPointerId( event ),\n            type: getPointerType( event ),\n            isPrimary: getIsPrimary( event ),\n            currentPos: getMouseAbsolute( event ),\n            currentTime: $.now()\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointermove',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        updatePointerMove( tracker, eventInfo, gPoint );\n\n        if ( eventInfo.preventDefault && !eventInfo.defaultPrevented ) {\n            $.cancelEvent( event );\n        }\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function onPointerCancel( tracker, event ) {\n        //$.console.log('pointercancel ' + (tracker.userData ? tracker.userData.toString() : '') + ' ' + (event.target === tracker.element ? 'tracker.element' : ''));\n\n        var gPoint = {\n            id: event.pointerId,\n            type: getPointerType( event )\n        };\n\n        var eventInfo = {\n            originalEvent: event,\n            eventType: 'pointercancel',\n            pointerType: gPoint.type,\n            isEmulated: false\n        };\n        preProcessEvent( tracker, eventInfo );\n\n        //TODO need to only do this if our element is target?\n        updatePointerCancel( tracker, eventInfo, gPoint );\n\n        if ( eventInfo.stopPropagation ) {\n            $.stopEvent( event );\n        }\n    }\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Device-agnostic DOM event handlers\n///////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to track the pointer in.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to track.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function startTrackingPointer( pointsList, gPoint ) {\n        //$.console.log('startTrackingPointer *** ' + pointsList.type + ' ' + gPoint.id.toString());\n        gPoint.speed = 0;\n        gPoint.direction = 0;\n        gPoint.contactPos = gPoint.currentPos;\n        gPoint.contactTime = gPoint.currentTime;\n        gPoint.lastPos = gPoint.currentPos;\n        gPoint.lastTime = gPoint.currentTime;\n\n        return pointsList.add( gPoint );\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.GesturePointList} pointsList\n     *     The GesturePointList to stop tracking the pointer on.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point to stop tracking.\n     * @returns {Number} Number of gesture points in pointsList.\n     */\n    function stopTrackingPointer( tracker, pointsList, gPoint ) {\n        //$.console.log('stopTrackingPointer *** ' + pointsList.type + ' ' + gPoint.id.toString());\n        var listLength;\n\n        var trackedGPoint = pointsList.getById( gPoint.id );\n\n        if ( trackedGPoint ) {\n            if ( trackedGPoint.captured ) {\n                $.console.warn('stopTrackingPointer() called on captured pointer');\n                releasePointer( tracker, trackedGPoint );\n            }\n\n            // If child element relinquishes capture to a parent we may get here\n            //   from a pointerleave event while a pointerup event will never be received.\n            //   In that case, we'll clean up the contact count\n            pointsList.removeContact();\n\n            listLength = pointsList.removeById( gPoint.id );\n        } else {\n            listLength = pointsList.getLength();\n        }\n\n        return listLength;\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     */\n    function getEventProcessDefaults( tracker, eventInfo ) {\n        switch ( eventInfo.eventType ) {\n            case 'pointermove':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = false;\n                eventInfo.preventGesture = !tracker.hasGestureHandlers;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'pointerover':\n            case 'pointerout':\n            case 'contextmenu':\n            case 'keydown':\n            case 'keyup':\n            case 'keypress':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = false; // onContextMenu(), onKeyDown(), onKeyUp(), onKeyPress() may set true\n                eventInfo.preventGesture = false;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'pointerdown':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = false; // updatePointerDown() may set true (tracker.hasGestureHandlers)\n                eventInfo.preventGesture = !tracker.hasGestureHandlers;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'pointerup':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = false;\n                eventInfo.preventGesture = !tracker.hasGestureHandlers;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'wheel':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = false; // handleWheelEvent() may set true\n                eventInfo.preventGesture = !tracker.hasScrollHandler;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'gotpointercapture':\n            case 'lostpointercapture':\n            case 'pointercancel':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = false;\n                eventInfo.preventDefault = false;\n                eventInfo.preventGesture = false;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'click':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = !!tracker.clickHandler;\n                eventInfo.preventGesture = false;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'dblclick':\n                eventInfo.isStoppable = true;\n                eventInfo.isCancelable = true;\n                eventInfo.preventDefault = !!tracker.dblClickHandler;\n                eventInfo.preventGesture = false;\n                eventInfo.stopPropagation = false;\n                break;\n            case 'focus':\n            case 'blur':\n            case 'pointerenter':\n            case 'pointerleave':\n            default:\n                eventInfo.isStoppable = false;\n                eventInfo.isCancelable = false;\n                eventInfo.preventDefault = false;\n                eventInfo.preventGesture = false;\n                eventInfo.stopPropagation = false;\n                break;\n        }\n    }\n\n\n    /**\n     * Sets up for and calls preProcessEventHandler. Call with the following parameters -\n     * this function will fill in the rest of the preProcessEventHandler event object\n     * properties\n     *\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     * @param {Object} eventInfo.originalEvent\n     * @param {String} eventInfo.eventType\n     * @param {String} eventInfo.pointerType\n     * @param {Boolean} eventInfo.isEmulated\n     */\n    function preProcessEvent( tracker, eventInfo ) {\n        eventInfo.eventSource = tracker;\n        eventInfo.eventPhase = eventInfo.originalEvent ?\n                        ((typeof eventInfo.originalEvent.eventPhase !== 'undefined') ?\n                                            eventInfo.originalEvent.eventPhase : 0) : 0;\n        eventInfo.defaultPrevented = $.eventIsCanceled( eventInfo.originalEvent );\n        eventInfo.shouldCapture = false;\n        eventInfo.shouldReleaseCapture = false;\n        eventInfo.userData = tracker.userData;\n\n        getEventProcessDefaults( tracker, eventInfo );\n\n        if ( tracker.preProcessEventHandler ) {\n            tracker.preProcessEventHandler( eventInfo );\n        }\n    }\n\n\n    /**\n     * Sets or resets the captured property on the tracked pointer matching the passed gPoint's id/type\n     *\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {Object} gPoint\n     *     An object with id and type properties describing the pointer to update.\n     * @param {Boolean} isCaptured\n     *      Value to set the captured property to.\n     */\n    function updatePointerCaptured( tracker, gPoint, isCaptured ) {\n        var pointsList = tracker.getActivePointersListByType( gPoint.type );\n        var updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            if ( isCaptured && !updateGPoint.captured ) {\n                updateGPoint.captured = true;\n                pointsList.captureCount++;\n            } else if ( !isCaptured && updateGPoint.captured ) {\n                updateGPoint.captured = false;\n                pointsList.captureCount--;\n                if ( pointsList.captureCount < 0 ) {\n                    pointsList.captureCount = 0;\n                    $.console.warn('updatePointerCaptured() - pointsList.captureCount went negative');\n                }\n            }\n        } else {\n            $.console.warn('updatePointerCaptured() called on untracked pointer');\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point associated with the event.\n     */\n    function updatePointerEnter( tracker, eventInfo, gPoint ) {\n        var pointsList = tracker.getActivePointersListByType( gPoint.type ),\n            updateGPoint;\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            // Already tracking the pointer...update it\n            updateGPoint.insideElement = true;\n            updateGPoint.lastPos = updateGPoint.currentPos;\n            updateGPoint.lastTime = updateGPoint.currentTime;\n            updateGPoint.currentPos = gPoint.currentPos;\n            updateGPoint.currentTime = gPoint.currentTime;\n\n            gPoint = updateGPoint;\n        } else {\n            // Initialize for tracking and add to the tracking list\n            gPoint.captured = false; // Handled by updatePointerCaptured()\n            gPoint.insideElementPressed = false;\n            gPoint.insideElement = true;\n            startTrackingPointer( pointsList, gPoint );\n        }\n\n        // Enter (doesn't bubble and not cancelable)\n        if ( tracker.enterHandler ) {\n            tracker.enterHandler(\n                {\n                    eventSource:          tracker,\n                    pointerType:          gPoint.type,\n                    position:             getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                    buttons:              pointsList.buttons,\n                    pointers:             tracker.getActivePointerCount(),\n                    insideElementPressed: gPoint.insideElementPressed,\n                    buttonDownAny:        pointsList.buttons !== 0,\n                    isTouchEvent:         gPoint.type === 'touch',\n                    originalEvent:        eventInfo.originalEvent,\n                    userData:             tracker.userData\n                }\n            );\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point associated with the event.\n     */\n    function updatePointerLeave( tracker, eventInfo, gPoint ) {\n        var pointsList = tracker.getActivePointersListByType(gPoint.type),\n            updateGPoint,\n            dispatchEventObj;\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            // Already tracking the pointer. If captured then update it, else stop tracking it\n            if ( updateGPoint.captured ) {\n                updateGPoint.insideElement = false;\n                updateGPoint.lastPos = updateGPoint.currentPos;\n                updateGPoint.lastTime = updateGPoint.currentTime;\n                updateGPoint.currentPos = gPoint.currentPos;\n                updateGPoint.currentTime = gPoint.currentTime;\n            } else {\n                stopTrackingPointer( tracker, pointsList, updateGPoint );\n            }\n\n            gPoint = updateGPoint;\n        } else {\n            gPoint.captured = false; // Handled by updatePointerCaptured()\n            gPoint.insideElementPressed = false;\n        }\n\n        // Leave (doesn't bubble and not cancelable)\n        //   Note: exitHandler is deprecated (v2.5.0), replaced by leaveHandler\n        if ( tracker.leaveHandler || tracker.exitHandler ) {\n            dispatchEventObj = {\n                eventSource:          tracker,\n                pointerType:          gPoint.type,\n                // GitHub PR: https://github.com/openseadragon/openseadragon/pull/1754 (gPoint.currentPos && )\n                position:             gPoint.currentPos && getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                buttons:              pointsList.buttons,\n                pointers:             tracker.getActivePointerCount(),\n                insideElementPressed: gPoint.insideElementPressed,\n                buttonDownAny:        pointsList.buttons !== 0,\n                isTouchEvent:         gPoint.type === 'touch',\n                originalEvent:        eventInfo.originalEvent,\n                userData:             tracker.userData\n            };\n\n            if ( tracker.leaveHandler ) {\n                tracker.leaveHandler( dispatchEventObj );\n            }\n            // Deprecated\n            if ( tracker.exitHandler ) {\n                tracker.exitHandler( dispatchEventObj );\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point associated with the event.\n     */\n    function updatePointerOver( tracker, eventInfo, gPoint ) {\n        var pointsList,\n            updateGPoint;\n\n        pointsList = tracker.getActivePointersListByType( gPoint.type );\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            gPoint = updateGPoint;\n        } else {\n            gPoint.captured = false;\n            gPoint.insideElementPressed = false;\n            //gPoint.insideElement = true; // Tracked by updatePointerEnter\n        }\n\n        if ( tracker.overHandler ) {\n            // Over\n            tracker.overHandler(\n                {\n                    eventSource:          tracker,\n                    pointerType:          gPoint.type,\n                    position:             getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                    buttons:              pointsList.buttons,\n                    pointers:             tracker.getActivePointerCount(),\n                    insideElementPressed: gPoint.insideElementPressed,\n                    buttonDownAny:        pointsList.buttons !== 0,\n                    isTouchEvent:         gPoint.type === 'touch',\n                    originalEvent:        eventInfo.originalEvent,\n                    userData:             tracker.userData\n                }\n            );\n        }\n    }\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point associated with the event.\n     */\n    function updatePointerOut( tracker, eventInfo, gPoint ) {\n        var pointsList,\n            updateGPoint;\n\n        pointsList = tracker.getActivePointersListByType(gPoint.type);\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            gPoint = updateGPoint;\n        } else {\n            gPoint.captured = false;\n            gPoint.insideElementPressed = false;\n            //gPoint.insideElement = true; // Tracked by updatePointerEnter\n        }\n\n        if ( tracker.outHandler ) {\n            // Out\n            tracker.outHandler( {\n                eventSource:          tracker,\n                pointerType:          gPoint.type,\n                position:             gPoint.currentPos && getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                buttons:              pointsList.buttons,\n                pointers:             tracker.getActivePointerCount(),\n                insideElementPressed: gPoint.insideElementPressed,\n                buttonDownAny:        pointsList.buttons !== 0,\n                isTouchEvent:         gPoint.type === 'touch',\n                originalEvent:        eventInfo.originalEvent,\n                userData:             tracker.userData\n            } );\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture point associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     */\n    function updatePointerDown( tracker, eventInfo, gPoint, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoint.type ),\n            updateGPoint;\n\n        if ( typeof eventInfo.originalEvent.buttons !== 'undefined' ) {\n            pointsList.buttons = eventInfo.originalEvent.buttons;\n        } else {\n            if ( buttonChanged === 0 ) {\n                // Primary\n                pointsList.buttons |= 1;\n            } else if ( buttonChanged === 1 ) {\n                // Aux\n                pointsList.buttons |= 4;\n            } else if ( buttonChanged === 2 ) {\n                // Secondary\n                pointsList.buttons |= 2;\n            } else if ( buttonChanged === 3 ) {\n                // X1 (Back)\n                pointsList.buttons |= 8;\n            } else if ( buttonChanged === 4 ) {\n                // X2 (Forward)\n                pointsList.buttons |= 16;\n            } else if ( buttonChanged === 5 ) {\n                // Pen Eraser\n                pointsList.buttons |= 32;\n            }\n        }\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            eventInfo.shouldCapture = false;\n            eventInfo.shouldReleaseCapture = false;\n\n            // Aux Press\n            if ( tracker.nonPrimaryPressHandler &&\n                                !eventInfo.preventGesture &&\n                                !eventInfo.defaultPrevented ) {\n                eventInfo.preventDefault = true;\n\n                tracker.nonPrimaryPressHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoint.type,\n                        position:             getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                        button:               buttonChanged,\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoint.type === 'touch',\n                        originalEvent:        eventInfo.originalEvent,\n                        userData:             tracker.userData\n                    }\n                );\n            }\n\n            return;\n        }\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            // Already tracking the pointer...update it\n            //updateGPoint.captured = true; // Handled by updatePointerCaptured()\n            updateGPoint.insideElementPressed = true;\n            updateGPoint.insideElement = true;\n            updateGPoint.originalTarget = eventInfo.originalEvent.target;\n            updateGPoint.contactPos = gPoint.currentPos;\n            updateGPoint.contactTime = gPoint.currentTime;\n            updateGPoint.lastPos = updateGPoint.currentPos;\n            updateGPoint.lastTime = updateGPoint.currentTime;\n            updateGPoint.currentPos = gPoint.currentPos;\n            updateGPoint.currentTime = gPoint.currentTime;\n\n            gPoint = updateGPoint;\n        } else {\n            // Initialize for tracking and add to the tracking list (no pointerenter event occurred before this)\n            // NOTE: pointerdown event on untracked pointer\n            gPoint.captured = false; // Handled by updatePointerCaptured()\n            gPoint.insideElementPressed = true;\n            gPoint.insideElement = true;\n            gPoint.originalTarget = eventInfo.originalEvent.target;\n            startTrackingPointer( pointsList, gPoint );\n        }\n\n        pointsList.addContact();\n        //$.console.log('contacts++ ', pointsList.contacts);\n\n        if ( !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            eventInfo.shouldCapture = true;\n            eventInfo.shouldReleaseCapture = false;\n            eventInfo.preventDefault = true;\n\n            if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                $.MouseTracker.gesturePointVelocityTracker.addPoint( tracker, gPoint );\n            }\n\n            if ( pointsList.contacts === 1 ) {\n                // Press\n                if ( tracker.pressHandler && !eventInfo.preventGesture ) {\n                    tracker.pressHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          gPoint.type,\n                            position:             getPointRelativeToAbsolute( gPoint.contactPos, tracker.element ),\n                            buttons:              pointsList.buttons,\n                            isTouchEvent:         gPoint.type === 'touch',\n                            originalEvent:        eventInfo.originalEvent,\n                            userData:             tracker.userData\n                        }\n                    );\n                }\n            } else if ( pointsList.contacts === 2 ) {\n                if ( tracker.pinchHandler && gPoint.type === 'touch' ) {\n                    // Initialize for pinch\n                    delegate.pinchGPoints = pointsList.asArray();\n                    delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                    delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                }\n            }\n        } else {\n            eventInfo.shouldCapture = false;\n            eventInfo.shouldReleaseCapture = false;\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture points associated with the event.\n     * @param {Number} buttonChanged\n     *      The button involved in the event: -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     *      Note on chorded button presses (a button pressed when another button is already pressed): In the W3C Pointer Events model,\n     *      only one pointerdown/pointerup event combo is fired. Chorded button state changes instead fire pointermove events.\n     */\n    function updatePointerUp( tracker, eventInfo, gPoint, buttonChanged ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoint.type ),\n            releasePoint,\n            releaseTime,\n            updateGPoint,\n            wasCaptured = false,\n            quick;\n\n        if ( typeof eventInfo.originalEvent.buttons !== 'undefined' ) {\n            pointsList.buttons = eventInfo.originalEvent.buttons;\n        } else {\n            if ( buttonChanged === 0 ) {\n                // Primary\n                pointsList.buttons ^= ~1;\n            } else if ( buttonChanged === 1 ) {\n                // Aux\n                pointsList.buttons ^= ~4;\n            } else if ( buttonChanged === 2 ) {\n                // Secondary\n                pointsList.buttons ^= ~2;\n            } else if ( buttonChanged === 3 ) {\n                // X1 (Back)\n                pointsList.buttons ^= ~8;\n            } else if ( buttonChanged === 4 ) {\n                // X2 (Forward)\n                pointsList.buttons ^= ~16;\n            } else if ( buttonChanged === 5 ) {\n                // Pen Eraser\n                pointsList.buttons ^= ~32;\n            }\n        }\n\n        eventInfo.shouldCapture = false;\n\n        // Only capture and track primary button, pen, and touch contacts\n        if ( buttonChanged !== 0 ) {\n            eventInfo.shouldReleaseCapture = false;\n\n            // Aux Release\n            if ( tracker.nonPrimaryReleaseHandler &&\n                                !eventInfo.preventGesture &&\n                                !eventInfo.defaultPrevented ) {\n                eventInfo.preventDefault = true;\n\n                tracker.nonPrimaryReleaseHandler(\n                    {\n                        eventSource:           tracker,\n                        pointerType:           gPoint.type,\n                        position:              getPointRelativeToAbsolute(gPoint.currentPos, tracker.element),\n                        button:                buttonChanged,\n                        buttons:               pointsList.buttons,\n                        isTouchEvent:          gPoint.type === 'touch',\n                        originalEvent:         eventInfo.originalEvent,\n                        userData:              tracker.userData\n                    }\n                );\n            }\n\n            return;\n        }\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            pointsList.removeContact();\n            //$.console.log('contacts-- ', pointsList.contacts);\n\n            // Update the pointer, stop tracking it if not still in this element\n            if ( updateGPoint.captured ) {\n                //updateGPoint.captured = false; // Handled by updatePointerCaptured()\n                wasCaptured = true;\n            }\n            updateGPoint.lastPos = updateGPoint.currentPos;\n            updateGPoint.lastTime = updateGPoint.currentTime;\n            updateGPoint.currentPos = gPoint.currentPos;\n            updateGPoint.currentTime = gPoint.currentTime;\n            if ( !updateGPoint.insideElement ) {\n                stopTrackingPointer( tracker, pointsList, updateGPoint );\n            }\n\n            releasePoint = updateGPoint.currentPos;\n            releaseTime = updateGPoint.currentTime;\n        } else {\n            // NOTE: updatePointerUp(): pointerup on untracked gPoint\n            // ...we'll start to track pointer again\n            gPoint.captured = false; // Handled by updatePointerCaptured()\n            gPoint.insideElementPressed = false;\n            gPoint.insideElement = true;\n            startTrackingPointer( pointsList, gPoint );\n\n            updateGPoint = gPoint;\n        }\n\n        if ( !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n            if ( wasCaptured ) {\n                // Pointer was activated in our element but could have been removed in any element since events are captured to our element\n\n                eventInfo.shouldReleaseCapture = true;\n                eventInfo.preventDefault = true;\n\n                if ( tracker.dragHandler || tracker.dragEndHandler || tracker.pinchHandler ) {\n                    $.MouseTracker.gesturePointVelocityTracker.removePoint( tracker, updateGPoint );\n                }\n\n                if ( pointsList.contacts === 0 ) {\n\n                    // Release (pressed in our element)\n                    if ( tracker.releaseHandler && releasePoint ) {\n                        tracker.releaseHandler(\n                            {\n                                eventSource:           tracker,\n                                pointerType:           updateGPoint.type,\n                                position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                                buttons:               pointsList.buttons,\n                                insideElementPressed:  updateGPoint.insideElementPressed,\n                                insideElementReleased: updateGPoint.insideElement,\n                                isTouchEvent:          updateGPoint.type === 'touch',\n                                originalEvent:         eventInfo.originalEvent,\n                                userData:              tracker.userData\n                            }\n                        );\n                    }\n\n                    // Drag End\n                    if ( tracker.dragEndHandler && delegate.sentDragEvent ) {\n                        tracker.dragEndHandler(\n                            {\n                                eventSource:          tracker,\n                                pointerType:          updateGPoint.type,\n                                position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                speed:                updateGPoint.speed,\n                                direction:            updateGPoint.direction,\n                                shift:                eventInfo.originalEvent.shiftKey,\n                                isTouchEvent:         updateGPoint.type === 'touch',\n                                originalEvent:        eventInfo.originalEvent,\n                                userData:             tracker.userData\n                            }\n                        );\n                    }\n\n                    // We want to clear this flag regardless of whether we fired the dragEndHandler\n                    delegate.sentDragEvent = false;\n\n                    // Click / Double-Click\n                    if ( ( tracker.clickHandler || tracker.dblClickHandler ) && updateGPoint.insideElement ) {\n                        quick = releaseTime - updateGPoint.contactTime <= tracker.clickTimeThreshold &&\n                                        updateGPoint.contactPos.distanceTo( releasePoint ) <= tracker.clickDistThreshold;\n\n                        // Click\n                        if ( tracker.clickHandler ) {\n                            tracker.clickHandler(\n                                {\n                                    eventSource:          tracker,\n                                    pointerType:          updateGPoint.type,\n                                    position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                    quick:                quick,\n                                    shift:                eventInfo.originalEvent.shiftKey,\n                                    isTouchEvent:         updateGPoint.type === 'touch',\n                                    originalEvent:        eventInfo.originalEvent,\n                                    originalTarget:       updateGPoint.originalTarget,\n                                    userData:             tracker.userData\n                                }\n                            );\n                        }\n\n                        // Double-Click\n                        if ( tracker.dblClickHandler && quick ) {\n                            pointsList.clicks++;\n                            if ( pointsList.clicks === 1 ) {\n                                delegate.lastClickPos = releasePoint;\n                                /*jshint loopfunc:true*/\n                                delegate.dblClickTimeOut = setTimeout( function() {\n                                    pointsList.clicks = 0;\n                                }, tracker.dblClickTimeThreshold );\n                                /*jshint loopfunc:false*/\n                            } else if ( pointsList.clicks === 2 ) {\n                                clearTimeout( delegate.dblClickTimeOut );\n                                pointsList.clicks = 0;\n                                if ( delegate.lastClickPos.distanceTo( releasePoint ) <= tracker.dblClickDistThreshold ) {\n                                    tracker.dblClickHandler(\n                                        {\n                                            eventSource:          tracker,\n                                            pointerType:          updateGPoint.type,\n                                            position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                                            shift:                eventInfo.originalEvent.shiftKey,\n                                            isTouchEvent:         updateGPoint.type === 'touch',\n                                            originalEvent:        eventInfo.originalEvent,\n                                            userData:             tracker.userData\n                                        }\n                                    );\n                                }\n                                delegate.lastClickPos = null;\n                            }\n                        }\n                    }\n                } else if ( pointsList.contacts === 2 ) {\n                    if ( tracker.pinchHandler && updateGPoint.type === 'touch' ) {\n                        // Reset for pinch\n                        delegate.pinchGPoints = pointsList.asArray();\n                        delegate.lastPinchDist = delegate.currentPinchDist = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                        delegate.lastPinchCenter = delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                    }\n                }\n            } else {\n                // Pointer was activated in another element but removed in our element\n\n                eventInfo.shouldReleaseCapture = false;\n\n                // Release (pressed in another element)\n                if ( tracker.releaseHandler && releasePoint ) {\n                    tracker.releaseHandler(\n                        {\n                            eventSource:           tracker,\n                            pointerType:           updateGPoint.type,\n                            position:              getPointRelativeToAbsolute( releasePoint, tracker.element ),\n                            buttons:               pointsList.buttons,\n                            insideElementPressed:  updateGPoint.insideElementPressed,\n                            insideElementReleased: updateGPoint.insideElement,\n                            isTouchEvent:          updateGPoint.type === 'touch',\n                            originalEvent:         eventInfo.originalEvent,\n                            userData:              tracker.userData\n                        }\n                    );\n                    eventInfo.preventDefault = true;\n                }\n            }\n        }\n    }\n\n\n    /**\n     * Call when pointer(s) change coordinates, button state, pressure, tilt, or contact geometry (e.g. width and height)\n     *\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture points associated with the event.\n     */\n    function updatePointerMove( tracker, eventInfo, gPoint ) {\n        var delegate = THIS[ tracker.hash ],\n            pointsList = tracker.getActivePointersListByType( gPoint.type ),\n            updateGPoint,\n            gPointArray,\n            delta;\n\n        if ( typeof eventInfo.originalEvent.buttons !== 'undefined' ) {\n            pointsList.buttons = eventInfo.originalEvent.buttons;\n        }\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            // Already tracking the pointer...update it\n            updateGPoint.lastPos = updateGPoint.currentPos;\n            updateGPoint.lastTime = updateGPoint.currentTime;\n            updateGPoint.currentPos = gPoint.currentPos;\n            updateGPoint.currentTime = gPoint.currentTime;\n        } else {\n            // Should never get here, but due to user agent bugs (e.g. legacy touch) it sometimes happens\n            return;\n        }\n\n        eventInfo.shouldCapture = false;\n        eventInfo.shouldReleaseCapture = false;\n\n        // Stop (mouse only)\n        if ( tracker.stopHandler && gPoint.type === 'mouse' ) {\n            clearTimeout( tracker.stopTimeOut );\n            tracker.stopTimeOut = setTimeout( function() {\n                handlePointerStop( tracker, eventInfo.originalEvent, gPoint.type );\n            }, tracker.stopDelay );\n        }\n\n        if ( pointsList.contacts === 0 ) {\n            // Move (no contacts: hovering mouse or other hover-capable device)\n            if ( tracker.moveHandler ) {\n                tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPoint.type,\n                        position:             getPointRelativeToAbsolute( gPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPoint.type === 'touch',\n                        originalEvent:        eventInfo.originalEvent,\n                        userData:             tracker.userData\n                    }\n                );\n            }\n        } else if ( pointsList.contacts === 1 ) {\n            // Move (1 contact)\n            if ( tracker.moveHandler ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        eventInfo.originalEvent,\n                        userData:             tracker.userData\n                    }\n                );\n            }\n\n            // Drag\n            if ( tracker.dragHandler && !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n                updateGPoint = pointsList.asArray()[ 0 ];\n                delta = updateGPoint.currentPos.minus( updateGPoint.lastPos );\n                tracker.dragHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          updateGPoint.type,\n                        position:             getPointRelativeToAbsolute( updateGPoint.currentPos, tracker.element ),\n                        buttons:              pointsList.buttons,\n                        delta:                delta,\n                        speed:                updateGPoint.speed,\n                        direction:            updateGPoint.direction,\n                        shift:                eventInfo.originalEvent.shiftKey,\n                        isTouchEvent:         updateGPoint.type === 'touch',\n                        originalEvent:        eventInfo.originalEvent,\n                        userData:             tracker.userData\n                    }\n                );\n                eventInfo.preventDefault = true;\n                delegate.sentDragEvent = true;\n            }\n        } else if ( pointsList.contacts === 2 ) {\n            // Move (2 contacts, use center)\n            if ( tracker.moveHandler ) {\n                gPointArray = pointsList.asArray();\n                tracker.moveHandler(\n                    {\n                        eventSource:          tracker,\n                        pointerType:          gPointArray[ 0 ].type,\n                        position:             getPointRelativeToAbsolute( getCenterPoint( gPointArray[ 0 ].currentPos, gPointArray[ 1 ].currentPos ), tracker.element ),\n                        buttons:              pointsList.buttons,\n                        isTouchEvent:         gPointArray[ 0 ].type === 'touch',\n                        originalEvent:        eventInfo.originalEvent,\n                        userData:             tracker.userData\n                    }\n                );\n            }\n\n            // Pinch\n            if ( tracker.pinchHandler && gPoint.type === 'touch' &&\n                                !eventInfo.preventGesture && !eventInfo.defaultPrevented ) {\n                delta = delegate.pinchGPoints[ 0 ].currentPos.distanceTo( delegate.pinchGPoints[ 1 ].currentPos );\n                if ( delta !== delegate.currentPinchDist ) {\n                    delegate.lastPinchDist = delegate.currentPinchDist;\n                    delegate.currentPinchDist = delta;\n                    delegate.lastPinchCenter = delegate.currentPinchCenter;\n                    delegate.currentPinchCenter = getCenterPoint( delegate.pinchGPoints[ 0 ].currentPos, delegate.pinchGPoints[ 1 ].currentPos );\n                    tracker.pinchHandler(\n                        {\n                            eventSource:          tracker,\n                            pointerType:          'touch',\n                            gesturePoints:        delegate.pinchGPoints,\n                            lastCenter:           getPointRelativeToAbsolute( delegate.lastPinchCenter, tracker.element ),\n                            center:               getPointRelativeToAbsolute( delegate.currentPinchCenter, tracker.element ),\n                            lastDistance:         delegate.lastPinchDist,\n                            distance:             delegate.currentPinchDist,\n                            shift:                eventInfo.originalEvent.shiftKey,\n                            originalEvent:        eventInfo.originalEvent,\n                            userData:             tracker.userData\n                        }\n                    );\n                    eventInfo.preventDefault = true;\n                }\n            }\n        }\n    }\n\n\n    /**\n     * @function\n     * @private\n     * @inner\n     * @param {OpenSeadragon.MouseTracker} tracker\n     *     A reference to the MouseTracker instance.\n     * @param {OpenSeadragon.MouseTracker.EventProcessInfo} eventInfo\n     *     Processing info for originating DOM event.\n     * @param {OpenSeadragon.MouseTracker.GesturePoint} gPoint\n     *      Gesture points associated with the event.\n     */\n    function updatePointerCancel( tracker, eventInfo, gPoint ) {\n        var pointsList = tracker.getActivePointersListByType( gPoint.type ),\n            updateGPoint;\n\n        updateGPoint = pointsList.getById( gPoint.id );\n\n        if ( updateGPoint ) {\n            stopTrackingPointer( tracker, pointsList, updateGPoint );\n        }\n    }\n\n\n    /**\n     * @private\n     * @inner\n     */\n    function handlePointerStop( tracker, originalMoveEvent, pointerType ) {\n        if ( tracker.stopHandler ) {\n            tracker.stopHandler( {\n                eventSource:          tracker,\n                pointerType:          pointerType,\n                position:             getMouseRelative( originalMoveEvent, tracker.element ),\n                buttons:              tracker.getActivePointersListByType( pointerType ).buttons,\n                isTouchEvent:         pointerType === 'touch',\n                originalEvent:        originalMoveEvent,\n                userData:             tracker.userData\n            } );\n        }\n    }\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Control\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of supported locations where controls can be anchored.\n * The anchoring is always relative to the container.\n * @member ControlAnchor\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} NONE\n * @property {Number} TOP_LEFT\n * @property {Number} TOP_RIGHT\n * @property {Number} BOTTOM_LEFT\n * @property {Number} BOTTOM_RIGHT\n * @property {Number} ABSOLUTE\n */\n$.ControlAnchor = {\n    NONE: 0,\n    TOP_LEFT: 1,\n    TOP_RIGHT: 2,\n    BOTTOM_RIGHT: 3,\n    BOTTOM_LEFT: 4,\n    ABSOLUTE: 5\n};\n\n/**\n * @class Control\n * @classdesc A Control represents any interface element which is meant to allow the user\n * to interact with the zoomable interface. Any control can be anchored to any\n * element.\n *\n * @memberof OpenSeadragon\n * @param {Element} element - the control element to be anchored in the container.\n * @param {Object } options - All required and optional settings for configuring a control element.\n * @param {OpenSeadragon.ControlAnchor} [options.anchor=OpenSeadragon.ControlAnchor.NONE] - the position of the control\n *  relative to the container.\n * @param {Boolean} [options.attachToViewer=true] - Whether the control should be added directly to the viewer, or\n *  directly to the container\n * @param {Boolean} [options.autoFade=true] - Whether the control should have the autofade behavior\n * @param {Element} container - the element to control will be anchored too.\n */\n$.Control = function ( element, options, container ) {\n    var parent = element.parentNode;\n    if (typeof options === 'number')\n    {\n        $.console.error(\"Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; \" +\n                        \"please use an options object instead.  \" +\n                        \"Support for this deprecated variant is scheduled for removal in December 2013\");\n         options = {anchor: options};\n    }\n    options.attachToViewer = (typeof options.attachToViewer === 'undefined') ? true : options.attachToViewer;\n    /**\n     * True if the control should have autofade behavior.\n     * @member {Boolean} autoFade\n     * @memberof OpenSeadragon.Control#\n     */\n    this.autoFade = (typeof options.autoFade === 'undefined') ? true : options.autoFade;\n    /**\n     * The element providing the user interface with some type of control (e.g. a zoom-in button).\n     * @member {Element} element\n     * @memberof OpenSeadragon.Control#\n     */\n    this.element    = element;\n    /**\n     * The position of the Control relative to its container.\n     * @member {OpenSeadragon.ControlAnchor} anchor\n     * @memberof OpenSeadragon.Control#\n     */\n    this.anchor     = options.anchor;\n    /**\n     * The Control's containing element.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Control#\n     */\n    this.container  = container;\n    /**\n     * A neutral element surrounding the control element.\n     * @member {Element} wrapper\n     * @memberof OpenSeadragon.Control#\n     */\n    if ( this.anchor === $.ControlAnchor.ABSOLUTE ) {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.position = \"absolute\";\n        this.wrapper.style.top = typeof (options.top) === \"number\" ? (options.top + 'px') : options.top;\n        this.wrapper.style.left  = typeof (options.left) === \"number\" ? (options.left + 'px') : options.left;\n        this.wrapper.style.height = typeof (options.height) === \"number\" ? (options.height + 'px') : options.height;\n        this.wrapper.style.width  = typeof (options.width) === \"number\" ? (options.width + 'px') : options.width;\n        this.wrapper.style.margin = \"0px\";\n        this.wrapper.style.padding = \"0px\";\n\n        this.element.style.position = \"relative\";\n        this.element.style.top = \"0px\";\n        this.element.style.left = \"0px\";\n        this.element.style.height = \"100%\";\n        this.element.style.width = \"100%\";\n    } else {\n        this.wrapper    = $.makeNeutralElement( \"div\" );\n        this.wrapper.style.display = \"inline-block\";\n        if ( this.anchor === $.ControlAnchor.NONE ) {\n            // IE6 fix\n            this.wrapper.style.width = this.wrapper.style.height = \"100%\";\n        }\n    }\n    this.wrapper.appendChild( this.element );\n\n    if (options.attachToViewer ) {\n        if ( this.anchor === $.ControlAnchor.TOP_RIGHT ||\n             this.anchor === $.ControlAnchor.BOTTOM_RIGHT ) {\n            this.container.insertBefore(\n                this.wrapper,\n                this.container.firstChild\n            );\n        } else {\n            this.container.appendChild( this.wrapper );\n        }\n    } else {\n        parent.appendChild( this.wrapper );\n    }\n};\n\n/** @lends OpenSeadragon.Control.prototype */\n$.Control.prototype = {\n\n    /**\n     * Removes the control from the container.\n     * @function\n     */\n    destroy: function() {\n        this.wrapper.removeChild( this.element );\n        if (this.anchor !== $.ControlAnchor.NONE) {\n            this.container.removeChild(this.wrapper);\n        }\n    },\n\n    /**\n     * Determines if the control is currently visible.\n     * @function\n     * @return {Boolean} true if currently visible, false otherwise.\n     */\n    isVisible: function() {\n        return this.wrapper.style.display !== \"none\";\n    },\n\n    /**\n     * Toggles the visibility of the control.\n     * @function\n     * @param {Boolean} visible - true to make visible, false to hide.\n     */\n    setVisible: function( visible ) {\n        this.wrapper.style.display = visible ?\n            ( this.anchor === $.ControlAnchor.ABSOLUTE ? 'block' : 'inline-block' ) :\n            \"none\";\n    },\n\n    /**\n     * Sets the opacity level for the control.\n     * @function\n     * @param {Number} opactiy - a value between 1 and 0 inclusively.\n     */\n    setOpacity: function( opacity ) {\n        if ( this.element[ $.SIGNAL ] && $.Browser.vendor === $.BROWSERS.IE ) {\n            $.setElementOpacity( this.element, opacity, true );\n        } else {\n            $.setElementOpacity( this.wrapper, opacity, true );\n        }\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ControlDock\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n    /**\n     * @class ControlDock\n     * @classdesc Provides a container element (a &lt;form&gt; element) with support for the layout of control elements.\n     *\n     * @memberof OpenSeadragon\n     */\n    $.ControlDock = function( options ){\n        var layouts = [ 'topleft', 'topright', 'bottomright', 'bottomleft'],\n            layout,\n            i;\n\n        $.extend( true, this, {\n            id: 'controldock-' + $.now() + '-' + Math.floor(Math.random() * 1000000),\n            container: $.makeNeutralElement( 'div' ),\n            controls: []\n        }, options );\n\n        // Disable the form's submit; otherwise button clicks and return keys\n        // can trigger it.\n        this.container.onsubmit = function() {\n            return false;\n        };\n\n        if( this.element ){\n            this.element = $.getElement( this.element );\n            this.element.appendChild( this.container );\n            this.element.style.position = 'relative';\n            this.container.style.width = '100%';\n            this.container.style.height = '100%';\n        }\n\n        for( i = 0; i < layouts.length; i++ ){\n            layout = layouts[ i ];\n            this.controls[ layout ] = $.makeNeutralElement( \"div\" );\n            this.controls[ layout ].style.position = 'absolute';\n            if ( layout.match( 'left' ) ){\n                this.controls[ layout ].style.left = '0px';\n            }\n            if ( layout.match( 'right' ) ){\n                this.controls[ layout ].style.right = '0px';\n            }\n            if ( layout.match( 'top' ) ){\n                this.controls[ layout ].style.top = '0px';\n            }\n            if ( layout.match( 'bottom' ) ){\n                this.controls[ layout ].style.bottom = '0px';\n            }\n        }\n\n        this.container.appendChild( this.controls.topleft );\n        this.container.appendChild( this.controls.topright );\n        this.container.appendChild( this.controls.bottomright );\n        this.container.appendChild( this.controls.bottomleft );\n    };\n\n    /** @lends OpenSeadragon.ControlDock.prototype */\n    $.ControlDock.prototype = {\n\n        /**\n         * @function\n         */\n        addControl: function ( element, controlOptions ) {\n            element = $.getElement( element );\n            var div = null;\n\n            if ( getControlIndex( this, element ) >= 0 ) {\n                return;     // they're trying to add a duplicate control\n            }\n\n            switch ( controlOptions.anchor ) {\n                case $.ControlAnchor.TOP_RIGHT:\n                    div = this.controls.topright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_RIGHT:\n                    div = this.controls.bottomright;\n                    element.style.position = \"relative\";\n                    element.style.paddingRight = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.BOTTOM_LEFT:\n                    div = this.controls.bottomleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingBottom = \"0px\";\n                    break;\n                case $.ControlAnchor.TOP_LEFT:\n                    div = this.controls.topleft;\n                    element.style.position = \"relative\";\n                    element.style.paddingLeft = \"0px\";\n                    element.style.paddingTop = \"0px\";\n                    break;\n                case $.ControlAnchor.ABSOLUTE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n                default:\n                case $.ControlAnchor.NONE:\n                    div = this.container;\n                    element.style.margin = \"0px\";\n                    element.style.padding = \"0px\";\n                    break;\n            }\n\n            this.controls.push(\n                new $.Control( element, controlOptions, div )\n            );\n            element.style.display = \"inline-block\";\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        removeControl: function ( element ) {\n            element = $.getElement( element );\n            var i = getControlIndex( this, element );\n\n            if ( i >= 0 ) {\n                this.controls[ i ].destroy();\n                this.controls.splice( i, 1 );\n            }\n\n            return this;\n        },\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        clearControls: function () {\n            while ( this.controls.length > 0 ) {\n                this.controls.pop().destroy();\n            }\n\n            return this;\n        },\n\n\n        /**\n         * @function\n         * @return {Boolean}\n         */\n        areControlsEnabled: function () {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                if ( this.controls[ i ].isVisible() ) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n\n        /**\n         * @function\n         * @return {OpenSeadragon.ControlDock} Chainable.\n         */\n        setControlsEnabled: function( enabled ) {\n            var i;\n\n            for ( i = this.controls.length - 1; i >= 0; i-- ) {\n                this.controls[ i ].setVisible( enabled );\n            }\n\n            return this;\n        }\n\n    };\n\n\n    ///////////////////////////////////////////////////////////////////////////////\n    // Utility methods\n    ///////////////////////////////////////////////////////////////////////////////\n    function getControlIndex( dock, element ) {\n        var controls = dock.controls,\n            i;\n\n        for ( i = controls.length - 1; i >= 0; i-- ) {\n            if ( controls[ i ].element === element ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Placement\n *\n * Copyright (C) 2010-2016 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions to anchor an element.\n     * @member Placement\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {OpenSeadragon.Placement} CENTER\n     * @property {OpenSeadragon.Placement} TOP_LEFT\n     * @property {OpenSeadragon.Placement} TOP\n     * @property {OpenSeadragon.Placement} TOP_RIGHT\n     * @property {OpenSeadragon.Placement} RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM_RIGHT\n     * @property {OpenSeadragon.Placement} BOTTOM\n     * @property {OpenSeadragon.Placement} BOTTOM_LEFT\n     * @property {OpenSeadragon.Placement} LEFT\n     */\n    $.Placement = $.freezeObject({\n        CENTER:       0,\n        TOP_LEFT:     1,\n        TOP:          2,\n        TOP_RIGHT:    3,\n        RIGHT:        4,\n        BOTTOM_RIGHT: 5,\n        BOTTOM:       6,\n        BOTTOM_LEFT:  7,\n        LEFT:         8,\n        properties: {\n            0: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            1: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            2: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            3: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: true,\n                isVerticallyCentered: false,\n                isBottom: false\n            },\n            4: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            },\n            5: {\n                isLeft: false,\n                isHorizontallyCentered: false,\n                isRight: true,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            6: {\n                isLeft: false,\n                isHorizontallyCentered: true,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            7: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: false,\n                isBottom: true\n            },\n            8: {\n                isLeft: true,\n                isHorizontallyCentered: false,\n                isRight: false,\n                isTop: false,\n                isVerticallyCentered: true,\n                isBottom: false\n            }\n        }\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Viewer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// dictionary from hash to private properties\nvar THIS = {};\nvar nextHash = 1;\n\n/**\n *\n * The main point of entry into creating a zoomable image on the page.<br>\n * <br>\n * We have provided an idiomatic javascript constructor which takes\n * a single object, but still support the legacy positional arguments.<br>\n * <br>\n * The options below are given in order that they appeared in the constructor\n * as arguments and we translate a positional call into an idiomatic call.<br>\n * <br>\n * To create a viewer, you can use either of this methods:<br>\n * <ul>\n * <li><code>var viewer = new OpenSeadragon.Viewer(options);</code></li>\n * <li><code>var viewer = OpenSeadragon(options);</code></li>\n * </ul>\n * @class Viewer\n * @classdesc The main OpenSeadragon viewer class.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @extends OpenSeadragon.ControlDock\n * @param {OpenSeadragon.Options} options - Viewer options.\n *\n **/\n$.Viewer = function( options ) {\n\n    var args  = arguments,\n        _this = this,\n        i;\n\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    if( !$.isPlainObject( options ) ){\n        options = {\n            id:                 args[ 0 ],\n            xmlPath:            args.length > 1 ? args[ 1 ] : undefined,\n            prefixUrl:          args.length > 2 ? args[ 2 ] : undefined,\n            controls:           args.length > 3 ? args[ 3 ] : undefined,\n            overlays:           args.length > 4 ? args[ 4 ] : undefined\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being pass directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    //Public properties\n    //Allow the options object to override global defaults\n    $.extend( true, this, {\n\n        //internal state and dom identifiers\n        id:             options.id,\n        hash:           options.hash || nextHash++,\n        /**\n         * Index for page to be shown first next time open() is called (only used in sequenceMode).\n         * @member {Number} initialPage\n         * @memberof OpenSeadragon.Viewer#\n         */\n        initialPage:    0,\n\n        //dom nodes\n        /**\n         * The parent element of this Viewer instance, passed in when the Viewer was created.\n         * @member {Element} element\n         * @memberof OpenSeadragon.Viewer#\n         */\n        element:        null,\n        /**\n         * A &lt;div&gt; element (provided by {@link OpenSeadragon.ControlDock}), the base element of this Viewer instance.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#element}.\n         * @member {Element} container\n         * @memberof OpenSeadragon.Viewer#\n         */\n        container:      null,\n        /**\n         * A &lt;div&gt; element, the element where user-input events are handled for panning and zooming.<br><br>\n         * Child element of {@link OpenSeadragon.Viewer#container},\n         * positioned on top of {@link OpenSeadragon.Viewer#keyboardCommandArea}.<br><br>\n         * The parent of {@link OpenSeadragon.Drawer#canvas} instances.\n         * @member {Element} canvas\n         * @memberof OpenSeadragon.Viewer#\n         */\n        canvas:         null,\n\n        // Overlays list. An overlay allows to add html on top of the viewer.\n        overlays:           [],\n        // Container inside the canvas where overlays are drawn.\n        overlaysContainer:  null,\n\n        //private state properties\n        previousBody:   [],\n\n        //This was originally initialized in the constructor and so could never\n        //have anything in it.  now it can because we allow it to be specified\n        //in the options and is only empty by default if not specified. Also\n        //this array was returned from get_controls which I find confusing\n        //since this object has a controls property which is treated in other\n        //functions like clearControls.  I'm removing the accessors.\n        customControls: [],\n\n        //These are originally not part options but declared as members\n        //in initialize.  It's still considered idiomatic to put them here\n        //source is here for backwards compatibility. It is not an official\n        //part of the API and should not be relied upon.\n        source:         null,\n        /**\n         * Handles rendering of tiles in the viewer. Created for each TileSource opened.\n         * @member {OpenSeadragon.Drawer} drawer\n         * @memberof OpenSeadragon.Viewer#\n         */\n        drawer:             null,\n        /**\n         * Keeps track of all of the tiled images in the scene.\n         * @member {OpenSeadragon.World} world\n         * @memberof OpenSeadragon.Viewer#\n         */\n        world:              null,\n        /**\n         * Handles coordinate-related functionality - zoom, pan, rotation, etc. Created for each TileSource opened.\n         * @member {OpenSeadragon.Viewport} viewport\n         * @memberof OpenSeadragon.Viewer#\n         */\n        viewport:       null,\n        /**\n         * @member {OpenSeadragon.Navigator} navigator\n         * @memberof OpenSeadragon.Viewer#\n         */\n        navigator:      null,\n\n        //A collection viewport is a separate viewport used to provide\n        //simultaneous rendering of sets of tiles\n        collectionViewport:     null,\n        collectionDrawer:       null,\n\n        //UI image resources\n        //TODO: rename navImages to uiImages\n        navImages:      null,\n\n        //interface button controls\n        buttons:        null,\n\n        //TODO: this is defunct so safely remove it\n        profiler:       null\n\n    }, $.DEFAULT_SETTINGS, options );\n\n    if ( typeof ( this.hash) === \"undefined\" ) {\n        throw new Error(\"A hash must be defined, either by specifying options.id or options.hash.\");\n    }\n    if ( typeof ( THIS[ this.hash ] ) !== \"undefined\" ) {\n        // We don't want to throw an error here, as the user might have discarded\n        // the previous viewer with the same hash and now want to recreate it.\n        $.console.warn(\"Hash \" + this.hash + \" has already been used.\");\n    }\n\n    //Private state properties\n    THIS[ this.hash ] = {\n        fsBoundsDelta:     new $.Point( 1, 1 ),\n        prevContainerSize: null,\n        animating:         false,\n        forceRedraw:       false,\n        mouseInside:       false,\n        group:             null,\n        // whether we should be continuously zooming\n        zooming:           false,\n        // how much we should be continuously zooming by\n        zoomFactor:        null,\n        lastZoomTime:      null,\n        fullPage:          false,\n        onfullscreenchange: null\n    };\n\n    this._sequenceIndex = 0;\n    this._firstOpen = true;\n    this._updateRequestId = null;\n    this._loadQueue = [];\n    this.currentOverlays = [];\n    this._updatePixelDensityRatioBind = null;\n\n    this._lastScrollTime = $.now(); // variable used to help normalize the scroll event speed of different devices\n\n    //Inherit some behaviors and properties\n    $.EventSource.call( this );\n\n    this.addHandler( 'open-failed', function ( event ) {\n        var msg = $.getString( \"Errors.OpenFailed\", event.eventSource, event.message);\n        _this._showMessage( msg );\n    });\n\n    $.ControlDock.call( this, options );\n\n    //Deal with tile sources\n    if (this.xmlPath) {\n        //Deprecated option.  Now it is preferred to use the tileSources option\n        this.tileSources = [ this.xmlPath ];\n    }\n\n    this.element              = this.element || document.getElementById( this.id );\n    this.canvas               = $.makeNeutralElement( \"div\" );\n\n    this.canvas.className = \"openseadragon-canvas\";\n    (function( style ){\n        style.width    = \"100%\";\n        style.height   = \"100%\";\n        style.overflow = \"hidden\";\n        style.position = \"absolute\";\n        style.top      = \"0px\";\n        style.left     = \"0px\";\n    }(this.canvas.style));\n    $.setElementTouchActionNone( this.canvas );\n    if (options.tabIndex !== \"\") {\n        this.canvas.tabIndex = (options.tabIndex === undefined ? 0 : options.tabIndex);\n    }\n\n    //the container is created through applying the ControlDock constructor above\n    this.container.className = \"openseadragon-container\";\n    (function( style ){\n        style.width     = \"100%\";\n        style.height    = \"100%\";\n        style.position  = \"relative\";\n        style.overflow  = \"hidden\";\n        style.left      = \"0px\";\n        style.top       = \"0px\";\n        style.textAlign = \"left\";  // needed to protect against\n    }( this.container.style ));\n    $.setElementTouchActionNone( this.container );\n\n    this.container.insertBefore( this.canvas, this.container.firstChild );\n    this.element.appendChild( this.container );\n\n    //Used for toggling between fullscreen and default container size\n    //TODO: these can be closure private and shared across Viewer\n    //      instances.\n    this.bodyWidth      = document.body.style.width;\n    this.bodyHeight     = document.body.style.height;\n    this.bodyOverflow   = document.body.style.overflow;\n    this.docOverflow    = document.documentElement.style.overflow;\n\n    this.innerTracker = new $.MouseTracker({\n        userData:                 'Viewer.innerTracker',\n        element:                  this.canvas,\n        startDisabled:            !this.mouseNavEnabled,\n        clickTimeThreshold:       this.clickTimeThreshold,\n        clickDistThreshold:       this.clickDistThreshold,\n        dblClickTimeThreshold:    this.dblClickTimeThreshold,\n        dblClickDistThreshold:    this.dblClickDistThreshold,\n        contextMenuHandler:       $.delegate( this, onCanvasContextMenu ),\n        keyDownHandler:           $.delegate( this, onCanvasKeyDown ),\n        keyHandler:               $.delegate( this, onCanvasKeyPress ),\n        clickHandler:             $.delegate( this, onCanvasClick ),\n        dblClickHandler:          $.delegate( this, onCanvasDblClick ),\n        dragHandler:              $.delegate( this, onCanvasDrag ),\n        dragEndHandler:           $.delegate( this, onCanvasDragEnd ),\n        enterHandler:             $.delegate( this, onCanvasEnter ),\n        leaveHandler:             $.delegate( this, onCanvasLeave ),\n        pressHandler:             $.delegate( this, onCanvasPress ),\n        releaseHandler:           $.delegate( this, onCanvasRelease ),\n        nonPrimaryPressHandler:   $.delegate( this, onCanvasNonPrimaryPress ),\n        nonPrimaryReleaseHandler: $.delegate( this, onCanvasNonPrimaryRelease ),\n        scrollHandler:            $.delegate( this, onCanvasScroll ),\n        pinchHandler:             $.delegate( this, onCanvasPinch )\n    });\n\n    this.outerTracker = new $.MouseTracker({\n        userData:              'Viewer.outerTracker',\n        element:               this.container,\n        startDisabled:         !this.mouseNavEnabled,\n        clickTimeThreshold:    this.clickTimeThreshold,\n        clickDistThreshold:    this.clickDistThreshold,\n        dblClickTimeThreshold: this.dblClickTimeThreshold,\n        dblClickDistThreshold: this.dblClickDistThreshold,\n        enterHandler:          $.delegate( this, onContainerEnter ),\n        leaveHandler:          $.delegate( this, onContainerLeave )\n    });\n\n    if( this.toolbar ){\n        this.toolbar = new $.ControlDock({ element: this.toolbar });\n    }\n\n    this.bindStandardControls();\n\n    THIS[ this.hash ].prevContainerSize = _getSafeElemSize( this.container );\n\n    // Create the world\n    this.world = new $.World({\n        viewer: this\n    });\n\n    this.world.addHandler('add-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n\n        THIS[ _this.hash ].forceRedraw = true;\n\n        if (!_this._updateRequestId) {\n            _this._updateRequestId = scheduleUpdate( _this, updateMulti );\n        }\n    });\n\n    this.world.addHandler('remove-item', function(event) {\n        // For backwards compatibility, we maintain the source property\n        if (_this.world.getItemCount()) {\n            _this.source = _this.world.getItemAt(0).source;\n        } else {\n            _this.source = null;\n        }\n\n        THIS[ _this.hash ].forceRedraw = true;\n    });\n\n    this.world.addHandler('metrics-change', function(event) {\n        if (_this.viewport) {\n            _this.viewport._setContentBounds(_this.world.getHomeBounds(), _this.world.getContentFactor());\n        }\n    });\n\n    this.world.addHandler('item-index-change', function(event) {\n        // For backwards compatibility, we maintain the source property\n        _this.source = _this.world.getItemAt(0).source;\n    });\n\n    // Create the viewport\n    this.viewport = new $.Viewport({\n        containerSize:              THIS[ this.hash ].prevContainerSize,\n        springStiffness:            this.springStiffness,\n        animationTime:              this.animationTime,\n        minZoomImageRatio:          this.minZoomImageRatio,\n        maxZoomPixelRatio:          this.maxZoomPixelRatio,\n        visibilityRatio:            this.visibilityRatio,\n        wrapHorizontal:             this.wrapHorizontal,\n        wrapVertical:               this.wrapVertical,\n        defaultZoomLevel:           this.defaultZoomLevel,\n        minZoomLevel:               this.minZoomLevel,\n        maxZoomLevel:               this.maxZoomLevel,\n        viewer:                     this,\n        degrees:                    this.degrees,\n        flipped:                    this.flipped,\n        navigatorRotate:            this.navigatorRotate,\n        homeFillsViewer:            this.homeFillsViewer,\n        margins:                    this.viewportMargins,\n        silenceMultiImageWarnings:  this.silenceMultiImageWarnings\n    });\n\n    this.viewport._setContentBounds(this.world.getHomeBounds(), this.world.getContentFactor());\n\n    // Create the image loader\n    this.imageLoader = new $.ImageLoader({\n        jobLimit: this.imageLoaderLimit,\n        timeout: options.timeout\n    });\n\n    // Create the tile cache\n    this.tileCache = new $.TileCache({\n        maxImageCacheCount: this.maxImageCacheCount\n    });\n\n    // Create the drawer\n    this.drawer = new $.Drawer({\n        viewer:             this,\n        viewport:           this.viewport,\n        element:            this.canvas,\n        debugGridColor:     this.debugGridColor\n    });\n\n    // Overlay container\n    this.overlaysContainer    = $.makeNeutralElement( \"div\" );\n    this.canvas.appendChild( this.overlaysContainer );\n\n    // Now that we have a drawer, see if it supports rotate. If not we need to remove the rotate buttons\n    if (!this.drawer.canRotate()) {\n        // Disable/remove the rotate left/right buttons since they aren't supported\n        if (this.rotateLeft) {\n            i = this.buttonGroup.buttons.indexOf(this.rotateLeft);\n            this.buttonGroup.buttons.splice(i, 1);\n            this.buttonGroup.element.removeChild(this.rotateLeft.element);\n        }\n        if (this.rotateRight) {\n            i = this.buttonGroup.buttons.indexOf(this.rotateRight);\n            this.buttonGroup.buttons.splice(i, 1);\n            this.buttonGroup.element.removeChild(this.rotateRight.element);\n        }\n    }\n\n    this._addUpdatePixelDensityRatioEvent();\n\n    //Instantiate a navigator if configured\n    if ( this.showNavigator){\n        this.navigator = new $.Navigator({\n            id:                this.navigatorId,\n            position:          this.navigatorPosition,\n            sizeRatio:         this.navigatorSizeRatio,\n            maintainSizeRatio: this.navigatorMaintainSizeRatio,\n            top:               this.navigatorTop,\n            left:              this.navigatorLeft,\n            width:             this.navigatorWidth,\n            height:            this.navigatorHeight,\n            autoResize:        this.navigatorAutoResize,\n            autoFade:          this.navigatorAutoFade,\n            prefixUrl:         this.prefixUrl,\n            viewer:            this,\n            navigatorRotate:   this.navigatorRotate,\n            background:        this.navigatorBackground,\n            opacity:           this.navigatorOpacity,\n            borderColor:       this.navigatorBorderColor,\n            displayRegionColor: this.navigatorDisplayRegionColor,\n            crossOriginPolicy: this.crossOriginPolicy\n        });\n    }\n\n    // Sequence mode\n    if (this.sequenceMode) {\n        this.bindSequenceControls();\n    }\n\n    // Open initial tilesources\n    if (this.tileSources) {\n        this.open( this.tileSources );\n    }\n\n    // Add custom controls\n    for ( i = 0; i < this.customControls.length; i++ ) {\n        this.addControl(\n            this.customControls[ i ].id,\n            {anchor: this.customControls[ i ].anchor}\n        );\n    }\n\n    // Initial fade out\n    $.requestAnimationFrame( function(){\n        beginControlsAutoHide( _this );\n    } );\n\n    // Initial canvas options\n    if ( this.imageSmoothingEnabled !== undefined && !this.imageSmoothingEnabled){\n        this.drawer.setImageSmoothingEnabled(this.imageSmoothingEnabled);\n    }\n\n    // Register the viewer\n    $._viewers.set(this.element, this);\n};\n\n$.extend( $.Viewer.prototype, $.EventSource.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Viewer.prototype */{\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isOpen: function () {\n        return !!this.world.getItemCount();\n    },\n\n    // deprecated\n    openDzi: function ( dzi ) {\n        $.console.error( \"[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( dzi );\n    },\n\n    // deprecated\n    openTileSource: function ( tileSource ) {\n        $.console.error( \"[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.\" );\n        return this.open( tileSource );\n    },\n\n    //deprecated\n    get buttons () {\n        $.console.warn('Viewer.buttons is deprecated; Please use Viewer.buttonGroup');\n        return this.buttonGroup;\n    },\n\n    /**\n     * Open tiled images into the viewer, closing any others.\n     * To get the TiledImage instance created by open, add an event listener for\n     * {@link OpenSeadragon.Viewer.html#.event:open}, which when fired can be used to get access\n     * to the instance, i.e., viewer.world.getItemAt(0).\n     * @function\n     * @param {Array|String|Object|Function} tileSources - This can be a TiledImage\n     * specifier, a TileSource specifier, or an array of either. A TiledImage specifier\n     * is the same as the options parameter for {@link OpenSeadragon.Viewer#addTiledImage},\n     * except for the index property; images are added in sequence.\n     * A TileSource specifier is anything you could pass as the tileSource property\n     * of the options parameter for {@link OpenSeadragon.Viewer#addTiledImage}.\n     * @param {Number} initialPage - If sequenceMode is true, display this page initially\n     * for the given tileSources. If specified, will overwrite the Viewer's existing initialPage property.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:open\n     * @fires OpenSeadragon.Viewer.event:open-failed\n     */\n    open: function (tileSources, initialPage) {\n        var _this = this;\n\n        this.close();\n\n        if (!tileSources) {\n            return this;\n        }\n\n        if (this.sequenceMode && $.isArray(tileSources)) {\n            if (this.referenceStrip) {\n                this.referenceStrip.destroy();\n                this.referenceStrip = null;\n            }\n\n            if (typeof initialPage !== 'undefined' && !isNaN(initialPage)) {\n              this.initialPage = initialPage;\n            }\n\n            this.tileSources = tileSources;\n            this._sequenceIndex = Math.max(0, Math.min(this.tileSources.length - 1, this.initialPage));\n            if (this.tileSources.length) {\n                this.open(this.tileSources[this._sequenceIndex]);\n\n                if ( this.showReferenceStrip ){\n                    this.addReferenceStrip();\n                }\n            }\n\n            this._updateSequenceButtons( this._sequenceIndex );\n            return this;\n        }\n\n        if (!$.isArray(tileSources)) {\n            tileSources = [tileSources];\n        }\n\n        if (!tileSources.length) {\n            return this;\n        }\n\n        this._opening = true;\n\n        var expected = tileSources.length;\n        var successes = 0;\n        var failures = 0;\n        var failEvent;\n\n        var checkCompletion = function() {\n            if (successes + failures === expected) {\n                if (successes) {\n                    if (_this._firstOpen || !_this.preserveViewport) {\n                        _this.viewport.goHome( true );\n                        _this.viewport.update();\n                    }\n\n                    _this._firstOpen = false;\n\n                    var source = tileSources[0];\n                    if (source.tileSource) {\n                        source = source.tileSource;\n                    }\n\n                    // Global overlays\n                    if( _this.overlays && !_this.preserveOverlays ){\n                        for ( var i = 0; i < _this.overlays.length; i++ ) {\n                            _this.currentOverlays[ i ] = getOverlayObject( _this, _this.overlays[ i ] );\n                        }\n                    }\n\n                    _this._drawOverlays();\n                    _this._opening = false;\n\n                    /**\n                     * Raised when the viewer has opened and loaded one or more TileSources.\n                     *\n                     * @event open\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {OpenSeadragon.TileSource} source - The tile source that was opened.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    // TODO: what if there are multiple sources?\n                    _this.raiseEvent( 'open', { source: source } );\n                } else {\n                    _this._opening = false;\n\n                    /**\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.Viewer\n                     * @type {object}\n                     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                     * @property {String} message - Information about what failed.\n                     * @property {String} source - The tile source that failed.\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', failEvent );\n                }\n            }\n        };\n\n        var doOne = function(options) {\n            if (!$.isPlainObject(options) || !options.tileSource) {\n                options = {\n                    tileSource: options\n                };\n            }\n\n            if (options.index !== undefined) {\n                $.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');\n                delete options.index;\n            }\n\n            if (options.collectionImmediately === undefined) {\n                options.collectionImmediately = true;\n            }\n\n            var originalSuccess = options.success;\n            options.success = function(event) {\n                successes++;\n\n                // TODO: now that options has other things besides tileSource, the overlays\n                // should probably be at the options level, not the tileSource level.\n                if (options.tileSource.overlays) {\n                    for (var i = 0; i < options.tileSource.overlays.length; i++) {\n                        _this.addOverlay(options.tileSource.overlays[i]);\n                    }\n                }\n\n                if (originalSuccess) {\n                    originalSuccess(event);\n                }\n\n                checkCompletion();\n            };\n\n            var originalError = options.error;\n            options.error = function(event) {\n                failures++;\n\n                if (!failEvent) {\n                    failEvent = event;\n                }\n\n                if (originalError) {\n                    originalError(event);\n                }\n\n                checkCompletion();\n            };\n\n            _this.addTiledImage(options);\n        };\n\n        // TileSources\n        for (var i = 0; i < tileSources.length; i++) {\n            doOne(tileSources[i]);\n        }\n\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:close\n     */\n    close: function ( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return this;\n        }\n\n        this._opening = false;\n\n        if ( this.navigator ) {\n            this.navigator.close();\n        }\n\n        if (!this.preserveOverlays) {\n            this.clearOverlays();\n            this.overlaysContainer.innerHTML = \"\";\n        }\n\n        THIS[ this.hash ].animating = false;\n\n        this.world.removeAll();\n        this.imageLoader.clear();\n\n        /**\n         * Raised when the viewer is closed (see {@link OpenSeadragon.Viewer#close}).\n         *\n         * @event close\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'close' );\n\n        return this;\n    },\n\n\n    /**\n     * Function to destroy the viewer and clean up everything created by OpenSeadragon.\n     *\n     * Example:\n     * var viewer = OpenSeadragon({\n     *   [...]\n     * });\n     *\n     * //when you are done with the viewer:\n     * viewer.destroy();\n     * viewer = null; //important\n     *\n     * @function\n     */\n    destroy: function( ) {\n        if ( !THIS[ this.hash ] ) {\n            //this viewer has already been destroyed: returning immediately\n            return;\n        }\n\n        this._removeUpdatePixelDensityRatioEvent();\n\n        this.close();\n\n        this.clearOverlays();\n        this.overlaysContainer.innerHTML = \"\";\n\n        //TODO: implement this...\n        //this.unbindSequenceControls()\n        //this.unbindStandardControls()\n\n        if (this.referenceStrip) {\n            this.referenceStrip.destroy();\n            this.referenceStrip = null;\n        }\n\n        if ( this._updateRequestId !== null ) {\n            $.cancelAnimationFrame( this._updateRequestId );\n            this._updateRequestId = null;\n        }\n\n        if ( this.drawer ) {\n            this.drawer.destroy();\n        }\n\n        if ( this.navigator ) {\n            this.navigator.destroy();\n            THIS[ this.navigator.hash ] = null;\n            delete THIS[ this.navigator.hash ];\n            this.navigator = null;\n        }\n\n        this.removeAllHandlers();\n\n        if (this.buttonGroup) {\n            this.buttonGroup.destroy();\n        } else if (this.customButtons) {\n            while (this.customButtons.length) {\n                this.customButtons.pop().destroy();\n            }\n        }\n\n        if (this.paging) {\n            this.paging.destroy();\n        }\n\n        // Go through top element (passed to us) and remove all children\n        // Use removeChild to make sure it handles SVG or any non-html\n        // also it performs better - http://jsperf.com/innerhtml-vs-removechild/15\n        if (this.element){\n            while (this.element.firstChild) {\n                this.element.removeChild(this.element.firstChild);\n            }\n        }\n\n        this.container.onsubmit = null;\n        this.clearControls();\n\n        // destroy the mouse trackers\n        if (this.innerTracker){\n            this.innerTracker.destroy();\n        }\n        if (this.outerTracker){\n            this.outerTracker.destroy();\n        }\n\n        THIS[ this.hash ] = null;\n        delete THIS[ this.hash ];\n\n        // clear all our references to dom objects\n        this.canvas = null;\n        this.container = null;\n\n        // Unregister the viewer\n        $._viewers.delete(this.element);\n\n        // clear our reference to the main element - they will need to pass it in again, creating a new viewer\n        this.element = null;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isMouseNavEnabled: function () {\n        return this.innerTracker.isTracking();\n    },\n\n    /**\n     * @function\n     * @param {Boolean} enabled - true to enable, false to disable\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:mouse-enabled\n     */\n    setMouseNavEnabled: function( enabled ){\n        this.innerTracker.setTracking( enabled );\n        this.outerTracker.setTracking( enabled );\n        /**\n         * Raised when mouse/touch navigation is enabled or disabled (see {@link OpenSeadragon.Viewer#setMouseNavEnabled}).\n         *\n         * @event mouse-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'mouse-enabled', { enabled: enabled } );\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    areControlsEnabled: function () {\n        var enabled = this.controls.length,\n            i;\n        for( i = 0; i < this.controls.length; i++ ){\n            enabled = enabled && this.controls[ i ].isVisible();\n        }\n        return enabled;\n    },\n\n\n    /**\n     * Shows or hides the controls (e.g. the default navigation buttons).\n     *\n     * @function\n     * @param {Boolean} true to show, false to hide.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:controls-enabled\n     */\n    setControlsEnabled: function( enabled ) {\n        if( enabled ){\n            abortControlsAutoHide( this );\n        } else {\n            beginControlsAutoHide( this );\n        }\n        /**\n         * Raised when the navigation controls are shown or hidden (see {@link OpenSeadragon.Viewer#setControlsEnabled}).\n         *\n         * @event controls-enabled\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} enabled\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'controls-enabled', { enabled: enabled } );\n        return this;\n    },\n\n    /**\n     * Turns debugging mode on or off for this viewer.\n     *\n     * @function\n     * @param {Boolean} true to turn debug on, false to turn debug off.\n     */\n    setDebugMode: function(debugMode){\n\n        for (var i = 0; i < this.world.getItemCount(); i++) {\n            this.world.getItemAt(i).debugMode = debugMode;\n        }\n\n        this.debugMode = debugMode;\n        this.forceRedraw();\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isFullPage: function () {\n        return THIS[ this.hash ].fullPage;\n    },\n\n\n    /**\n     * Toggle full page mode.\n     * @function\n     * @param {Boolean} fullPage\n     *      If true, enter full page mode.  If false, exit full page mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-page\n     * @fires OpenSeadragon.Viewer.event:full-page\n     */\n    setFullPage: function( fullPage ) {\n\n        var body = document.body,\n            bodyStyle = body.style,\n            docStyle = document.documentElement.style,\n            _this = this,\n            nodes,\n            i;\n\n        //don't bother modifying the DOM if we are already in full page mode.\n        if ( fullPage === this.isFullPage() ) {\n            return this;\n        }\n\n        var fullPageEventArgs = {\n            fullPage: fullPage,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event pre-full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if entering full-page mode, false if exiting full-page mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-page mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-page', fullPageEventArgs );\n        if ( fullPageEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullPage ) {\n\n            this.elementSize = $.getElementSize( this.element );\n            this.pageScroll = $.getPageScroll();\n\n            this.elementMargin = this.element.style.margin;\n            this.element.style.margin = \"0\";\n            this.elementPadding = this.element.style.padding;\n            this.element.style.padding = \"0\";\n\n            this.bodyMargin = bodyStyle.margin;\n            this.docMargin = docStyle.margin;\n            bodyStyle.margin = \"0\";\n            docStyle.margin = \"0\";\n\n            this.bodyPadding = bodyStyle.padding;\n            this.docPadding = docStyle.padding;\n            bodyStyle.padding = \"0\";\n            docStyle.padding = \"0\";\n\n            this.bodyWidth = bodyStyle.width;\n            this.docWidth = docStyle.width;\n            bodyStyle.width = \"100%\";\n            docStyle.width = \"100%\";\n\n            this.bodyHeight = bodyStyle.height;\n            this.docHeight = docStyle.height;\n            bodyStyle.height = \"100%\";\n            docStyle.height = \"100%\";\n\n            this.bodyDisplay = bodyStyle.display;\n            bodyStyle.display = \"block\";\n\n            //when entering full screen on the ipad it wasn't sufficient to leave\n            //the body intact as only only the top half of the screen would\n            //respond to touch events on the canvas, while the bottom half treated\n            //them as touch events on the document body.  Thus we remove and store\n            //the bodies elements and replace them when we leave full screen.\n            this.previousBody = [];\n            THIS[ this.hash ].prevElementParent = this.element.parentNode;\n            THIS[ this.hash ].prevNextSibling = this.element.nextSibling;\n            THIS[ this.hash ].prevElementWidth = this.element.style.width;\n            THIS[ this.hash ].prevElementHeight = this.element.style.height;\n            nodes = body.childNodes.length;\n            for ( i = 0; i < nodes; i++ ) {\n                this.previousBody.push( body.childNodes[ 0 ] );\n                body.removeChild( body.childNodes[ 0 ] );\n            }\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //preserve it in fullpage mode\n            if ( this.toolbar && this.toolbar.element ) {\n                //save a reference to the parent so we can put it back\n                //in the long run we need a better strategy\n                this.toolbar.parentNode = this.toolbar.element.parentNode;\n                this.toolbar.nextSibling = this.toolbar.element.nextSibling;\n                body.appendChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.addClass( this.toolbar.element, 'fullpage' );\n            }\n\n            $.addClass( this.element, 'fullpage' );\n            body.appendChild( this.element );\n\n            this.element.style.height = '100vh';\n            this.element.style.width = '100vw';\n\n            if ( this.toolbar && this.toolbar.element ) {\n                this.element.style.height = (\n                    $.getElementSize( this.element ).y - $.getElementSize( this.toolbar.element ).y\n                ) + 'px';\n            }\n\n            THIS[ this.hash ].fullPage = true;\n\n            // mouse will be inside container now\n            $.delegate( this, onContainerEnter )( {} );\n\n        } else {\n\n            this.element.style.margin = this.elementMargin;\n            this.element.style.padding = this.elementPadding;\n\n            bodyStyle.margin = this.bodyMargin;\n            docStyle.margin = this.docMargin;\n\n            bodyStyle.padding = this.bodyPadding;\n            docStyle.padding = this.docPadding;\n\n            bodyStyle.width = this.bodyWidth;\n            docStyle.width = this.docWidth;\n\n            bodyStyle.height = this.bodyHeight;\n            docStyle.height = this.docHeight;\n\n            bodyStyle.display = this.bodyDisplay;\n\n            body.removeChild( this.element );\n            nodes = this.previousBody.length;\n            for ( i = 0; i < nodes; i++ ) {\n                body.appendChild( this.previousBody.shift() );\n            }\n\n            $.removeClass( this.element, 'fullpage' );\n            THIS[ this.hash ].prevElementParent.insertBefore(\n                this.element,\n                THIS[ this.hash ].prevNextSibling\n            );\n\n            //If we've got a toolbar, we need to enable the user to use css to\n            //reset it to its original state\n            if ( this.toolbar && this.toolbar.element ) {\n                body.removeChild( this.toolbar.element );\n\n                //Make sure the user has some ability to style the toolbar based\n                //on the mode\n                $.removeClass( this.toolbar.element, 'fullpage' );\n\n                this.toolbar.parentNode.insertBefore(\n                    this.toolbar.element,\n                    this.toolbar.nextSibling\n                );\n                delete this.toolbar.parentNode;\n                delete this.toolbar.nextSibling;\n            }\n\n            this.element.style.width = THIS[ this.hash ].prevElementWidth;\n            this.element.style.height = THIS[ this.hash ].prevElementHeight;\n\n            // After exiting fullPage or fullScreen, it can take some time\n            // before the browser can actually set the scroll.\n            var restoreScrollCounter = 0;\n            var restoreScroll = function() {\n                $.setPageScroll( _this.pageScroll );\n                var pageScroll = $.getPageScroll();\n                restoreScrollCounter++;\n                if (restoreScrollCounter < 10 &&\n                    (pageScroll.x !== _this.pageScroll.x ||\n                    pageScroll.y !== _this.pageScroll.y)) {\n                    $.requestAnimationFrame( restoreScroll );\n                }\n            };\n            $.requestAnimationFrame( restoreScroll );\n\n            THIS[ this.hash ].fullPage = false;\n\n            // mouse will likely be outside now\n            $.delegate( this, onContainerLeave )( { } );\n\n        }\n\n        if ( this.navigator && this.viewport ) {\n            this.navigator.update( this.viewport );\n        }\n\n        /**\n         * Raised when the viewer has changed to/from full-page mode (see {@link OpenSeadragon.Viewer#setFullPage}).\n         *\n         * @event full-page\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullPage - True if changed to full-page mode, false if exited full-page mode.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'full-page', { fullPage: fullPage } );\n\n        return this;\n    },\n\n    /**\n     * Toggle full screen mode if supported. Toggle full page mode otherwise.\n     * @function\n     * @param {Boolean} fullScreen\n     *      If true, enter full screen mode.  If false, exit full screen mode.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pre-full-screen\n     * @fires OpenSeadragon.Viewer.event:full-screen\n     */\n    setFullScreen: function( fullScreen ) {\n        var _this = this;\n\n        if ( !$.supportsFullScreen ) {\n            return this.setFullPage( fullScreen );\n        }\n\n        if ( $.isFullScreen() === fullScreen ) {\n            return this;\n        }\n\n        var fullScreeEventArgs = {\n            fullScreen: fullScreen,\n            preventDefaultAction: false\n        };\n        /**\n         * Raised when the viewer is about to change to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n         * Note: the pre-full-screen event is not raised when the user is exiting\n         * full-screen mode by pressing the Esc key. In that case, consider using\n         * the full-screen, pre-full-page or full-page events.\n         *\n         * @event pre-full-screen\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} fullScreen - True if entering full-screen mode, false if exiting full-screen mode.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent full-screen mode change. Default: false.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'pre-full-screen', fullScreeEventArgs );\n        if ( fullScreeEventArgs.preventDefaultAction ) {\n            return this;\n        }\n\n        if ( fullScreen ) {\n\n            this.setFullPage( true );\n            // If the full page mode is not actually entered, we need to prevent\n            // the full screen mode.\n            if ( !this.isFullPage() ) {\n                return this;\n            }\n\n            this.fullPageStyleWidth = this.element.style.width;\n            this.fullPageStyleHeight = this.element.style.height;\n            this.element.style.width = '100%';\n            this.element.style.height = '100%';\n\n            var onFullScreenChange = function() {\n                var isFullScreen = $.isFullScreen();\n                if ( !isFullScreen ) {\n                    $.removeEvent( document, $.fullScreenEventName, onFullScreenChange );\n                    $.removeEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n                    _this.setFullPage( false );\n                    if ( _this.isFullPage() ) {\n                        _this.element.style.width = _this.fullPageStyleWidth;\n                        _this.element.style.height = _this.fullPageStyleHeight;\n                    }\n                }\n                if ( _this.navigator && _this.viewport ) {\n                    //09/08/2018 - Fabroh : Fix issue #1504 : Ensure to get the navigator updated on fullscreen out with custom location with a timeout\n                    setTimeout(function(){\n                        _this.navigator.update( _this.viewport );\n                    });\n                }\n                /**\n                 * Raised when the viewer has changed to/from full-screen mode (see {@link OpenSeadragon.Viewer#setFullScreen}).\n                 *\n                 * @event full-screen\n                 * @memberof OpenSeadragon.Viewer\n                 * @type {object}\n                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                 * @property {Boolean} fullScreen - True if changed to full-screen mode, false if exited full-screen mode.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'full-screen', { fullScreen: isFullScreen } );\n            };\n            $.addEvent( document, $.fullScreenEventName, onFullScreenChange );\n            $.addEvent( document, $.fullScreenErrorEventName, onFullScreenChange );\n\n            $.requestFullScreen( document.body );\n\n        } else {\n            $.exitFullScreen();\n        }\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {Boolean}\n     */\n    isVisible: function () {\n        return this.container.style.visibility !== \"hidden\";\n    },\n\n\n    //\n    /**\n     * @function\n     * @returns {Boolean} returns true if the viewer is in fullscreen\n     */\n     isFullScreen: function () {\n        return $.isFullScreen() && this.isFullPage();\n    },\n\n    /**\n     * @function\n     * @param {Boolean} visible\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:visible\n     */\n    setVisible: function( visible ){\n        this.container.style.visibility = visible ? \"\" : \"hidden\";\n        /**\n         * Raised when the viewer is shown or hidden (see {@link OpenSeadragon.Viewer#setVisible}).\n         *\n         * @event visible\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Boolean} visible\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'visible', { visible: visible } );\n        return this;\n    },\n\n    /**\n     * Add a tiled image to the viewer.\n     * options.tileSource can be anything that {@link OpenSeadragon.Viewer#open}\n     *  supports except arrays of images.\n     * Note that you can specify options.width or options.height, but not both.\n     * The other dimension will be calculated according to the item's aspect ratio.\n     * If collectionMode is on (see {@link OpenSeadragon.Options}), the new image is\n     * automatically arranged with the others.\n     * @function\n     * @param {Object} options\n     * @param {String|Object|Function} options.tileSource - The TileSource specifier.\n     * A String implies a url used to determine the tileSource implementation\n     *      based on the file extension of url. JSONP is implied by *.js,\n     *      otherwise the url is retrieved as text and the resulting text is\n     *      introspected to determine if its json, xml, or text and parsed.\n     * An Object implies an inline configuration which has a single\n     *      property sufficient for being able to determine tileSource\n     *      implementation. If the object has a property which is a function\n     *      named 'getTileUrl', it is treated as a custom TileSource.\n     * @param {Number} [options.index] The index of the item. Added on top of\n     * all other items if not specified.\n     * @param {Boolean} [options.replace=false] If true, the item at options.index will be\n     * removed and the new item is added in its place. options.tileSource will be\n     * interpreted and fetched if necessary before the old item is removed to avoid leaving\n     * a gap in the world.\n     * @param {Number} [options.x=0] The X position for the image in viewport coordinates.\n     * @param {Number} [options.y=0] The Y position for the image in viewport coordinates.\n     * @param {Number} [options.width=1] The width for the image in viewport coordinates.\n     * @param {Number} [options.height] The height for the image in viewport coordinates.\n     * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n     * to fit the image into. If specified, x, y, width and height get ignored.\n     * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds if options.fitBounds is set.\n     * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     * @param {Number} [options.opacity=1] Proportional opacity of the tiled images (1=opaque, 0=hidden)\n     * @param {Boolean} [options.preload=false]  Default switch for loading hidden images (true loads, false blocks)\n     * @param {Number} [options.degrees=0] Initial rotation of the tiled image around\n     * its top left corner in degrees.\n     * @param {Boolean} [options.flipped=false] Whether to horizontally flip the image.\n     * @param {String} [options.compositeOperation] How the image is composited onto other images.\n     * @param {String} [options.crossOriginPolicy] The crossOriginPolicy for this specific image,\n     * overriding viewer.crossOriginPolicy.\n     * @param {Boolean} [options.ajaxWithCredentials] Whether to set withCredentials on tile AJAX\n     * @param {Boolean} [options.loadTilesWithAjax]\n     *      Whether to load tile data using AJAX requests.\n     *      Defaults to the setting in {@link OpenSeadragon.Options}.\n     * @param {Object} [options.ajaxHeaders]\n     *      A set of headers to include when making tile AJAX requests.\n     *      Note that these headers will be merged over any headers specified in {@link OpenSeadragon.Options}.\n     *      Specifying a falsy value for a header will clear its existing value set at the Viewer level (if any).\n     * requests.\n     * @param {Function} [options.success] A function that gets called when the image is\n     * successfully added. It's passed the event object which contains a single property:\n     * \"item\", which is the resulting instance of TiledImage.\n     * @param {Function} [options.error] A function that gets called if the image is\n     * unable to be added. It's passed the error event object, which contains \"message\"\n     * and \"source\" properties.\n     * @param {Boolean} [options.collectionImmediately=false] If collectionMode is on,\n     * specifies whether to snap to the new arrangement immediately or to animate to it.\n     * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addTiledImage: function( options ) {\n        $.console.assert(options, \"[Viewer.addTiledImage] options is required\");\n        $.console.assert(options.tileSource, \"[Viewer.addTiledImage] options.tileSource is required\");\n        $.console.assert(!options.replace || (options.index > -1 && options.index < this.world.getItemCount()),\n            \"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world\");\n\n        var _this = this;\n\n        if (options.replace) {\n            options.replaceItem = _this.world.getItemAt(options.index);\n        }\n\n        this._hideMessage();\n\n        if (options.placeholderFillStyle === undefined) {\n            options.placeholderFillStyle = this.placeholderFillStyle;\n        }\n        if (options.opacity === undefined) {\n            options.opacity = this.opacity;\n        }\n        if (options.preload === undefined) {\n            options.preload = this.preload;\n        }\n        if (options.compositeOperation === undefined) {\n            options.compositeOperation = this.compositeOperation;\n        }\n        if (options.crossOriginPolicy === undefined) {\n            options.crossOriginPolicy = options.tileSource.crossOriginPolicy !== undefined ? options.tileSource.crossOriginPolicy : this.crossOriginPolicy;\n        }\n        if (options.ajaxWithCredentials === undefined) {\n            options.ajaxWithCredentials = this.ajaxWithCredentials;\n        }\n        if (options.loadTilesWithAjax === undefined) {\n            options.loadTilesWithAjax = this.loadTilesWithAjax;\n        }\n        if (options.ajaxHeaders === undefined || options.ajaxHeaders === null) {\n            options.ajaxHeaders = this.ajaxHeaders;\n        } else if ($.isPlainObject(options.ajaxHeaders) && $.isPlainObject(this.ajaxHeaders)) {\n            options.ajaxHeaders = $.extend({}, this.ajaxHeaders, options.ajaxHeaders);\n        }\n\n        var myQueueItem = {\n            options: options\n        };\n\n        function raiseAddItemFailed( event ) {\n            for (var i = 0; i < _this._loadQueue.length; i++) {\n                if (_this._loadQueue[i] === myQueueItem) {\n                    _this._loadQueue.splice(i, 1);\n                    break;\n                }\n            }\n\n            if (_this._loadQueue.length === 0) {\n                refreshWorld(myQueueItem);\n            }\n\n             /**\n             * Raised when an error occurs while adding a item.\n             * @event add-item-failed\n             * @memberOf OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {String} message\n             * @property {String} source\n             * @property {Object} options The options passed to the addTiledImage method.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'add-item-failed', event );\n\n            if (options.error) {\n                options.error(event);\n            }\n        }\n\n        function refreshWorld(theItem) {\n            if (_this.collectionMode) {\n                _this.world.arrange({\n                    immediately: theItem.options.collectionImmediately,\n                    rows: _this.collectionRows,\n                    columns: _this.collectionColumns,\n                    layout: _this.collectionLayout,\n                    tileSize: _this.collectionTileSize,\n                    tileMargin: _this.collectionTileMargin\n                });\n                _this.world.setAutoRefigureSizes(true);\n            }\n        }\n\n        if ($.isArray(options.tileSource)) {\n            setTimeout(function() {\n                raiseAddItemFailed({\n                    message: \"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.\",\n                    source: options.tileSource,\n                    options: options\n                });\n            });\n            return;\n        }\n\n        this._loadQueue.push(myQueueItem);\n\n        function processReadyItems() {\n            var queueItem, tiledImage, optionsClone;\n            while (_this._loadQueue.length) {\n                queueItem = _this._loadQueue[0];\n                if (!queueItem.tileSource) {\n                    break;\n                }\n\n                _this._loadQueue.splice(0, 1);\n\n                if (queueItem.options.replace) {\n                    var newIndex = _this.world.getIndexOfItem(queueItem.options.replaceItem);\n                    if (newIndex !== -1) {\n                        queueItem.options.index = newIndex;\n                    }\n                    _this.world.removeItem(queueItem.options.replaceItem);\n                }\n\n                tiledImage = new $.TiledImage({\n                    viewer: _this,\n                    source: queueItem.tileSource,\n                    viewport: _this.viewport,\n                    drawer: _this.drawer,\n                    tileCache: _this.tileCache,\n                    imageLoader: _this.imageLoader,\n                    x: queueItem.options.x,\n                    y: queueItem.options.y,\n                    width: queueItem.options.width,\n                    height: queueItem.options.height,\n                    fitBounds: queueItem.options.fitBounds,\n                    fitBoundsPlacement: queueItem.options.fitBoundsPlacement,\n                    clip: queueItem.options.clip,\n                    placeholderFillStyle: queueItem.options.placeholderFillStyle,\n                    opacity: queueItem.options.opacity,\n                    preload: queueItem.options.preload,\n                    degrees: queueItem.options.degrees,\n                    flipped: queueItem.options.flipped,\n                    compositeOperation: queueItem.options.compositeOperation,\n                    springStiffness: _this.springStiffness,\n                    animationTime: _this.animationTime,\n                    minZoomImageRatio: _this.minZoomImageRatio,\n                    wrapHorizontal: _this.wrapHorizontal,\n                    wrapVertical: _this.wrapVertical,\n                    immediateRender: _this.immediateRender,\n                    blendTime: _this.blendTime,\n                    alwaysBlend: _this.alwaysBlend,\n                    minPixelRatio: _this.minPixelRatio,\n                    smoothTileEdgesMinZoom: _this.smoothTileEdgesMinZoom,\n                    iOSDevice: _this.iOSDevice,\n                    crossOriginPolicy: queueItem.options.crossOriginPolicy,\n                    ajaxWithCredentials: queueItem.options.ajaxWithCredentials,\n                    loadTilesWithAjax: queueItem.options.loadTilesWithAjax,\n                    ajaxHeaders: queueItem.options.ajaxHeaders,\n                    debugMode: _this.debugMode,\n                    subPixelRoundingForTransparency: _this.subPixelRoundingForTransparency\n                });\n\n                if (_this.collectionMode) {\n                    _this.world.setAutoRefigureSizes(false);\n                }\n\n                if (_this.navigator) {\n                    optionsClone = $.extend({}, queueItem.options, {\n                        replace: false, // navigator already removed the layer, nothing to replace\n                        originalTiledImage: tiledImage,\n                        tileSource: queueItem.tileSource\n                    });\n\n                    _this.navigator.addTiledImage(optionsClone);\n                }\n\n                _this.world.addItem( tiledImage, {\n                    index: queueItem.options.index\n                });\n\n                if (_this._loadQueue.length === 0) {\n                    //this restores the autoRefigureSizes flag to true.\n                    refreshWorld(queueItem);\n                }\n\n                if (_this.world.getItemCount() === 1 && !_this.preserveViewport) {\n                    _this.viewport.goHome(true);\n                }\n\n                if (queueItem.options.success) {\n                    queueItem.options.success({\n                        item: tiledImage\n                    });\n                }\n            }\n        }\n\n        getTileSourceImplementation( this, options.tileSource, options, function( tileSource ) {\n\n            myQueueItem.tileSource = tileSource;\n\n            // add everybody at the front of the queue that's ready to go\n            processReadyItems();\n        }, function( event ) {\n            event.options = options;\n            raiseAddItemFailed(event);\n\n            // add everybody at the front of the queue that's ready to go\n            processReadyItems();\n        } );\n    },\n\n    /**\n     * Add a simple image to the viewer.\n     * The options are the same as the ones in {@link OpenSeadragon.Viewer#addTiledImage}\n     * except for options.tileSource which is replaced by options.url.\n     * @function\n     * @param {Object} options - See {@link OpenSeadragon.Viewer#addTiledImage}\n     * for all the options\n     * @param {String} options.url - The URL of the image to add.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.Viewer.event:add-item-failed\n     */\n    addSimpleImage: function(options) {\n        $.console.assert(options, \"[Viewer.addSimpleImage] options is required\");\n        $.console.assert(options.url, \"[Viewer.addSimpleImage] options.url is required\");\n\n        var opts = $.extend({}, options, {\n            tileSource: {\n                type: 'image',\n                url:  options.url\n            }\n        });\n        delete opts.url;\n        this.addTiledImage(opts);\n    },\n\n    // deprecated\n    addLayer: function( options ) {\n        var _this = this;\n\n        $.console.error( \"[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.\" );\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                _this.raiseEvent(\"add-layer\", {\n                    options: options,\n                    drawer: event.item\n                });\n            },\n            error: function(event) {\n                _this.raiseEvent(\"add-layer-failed\", event);\n            }\n        });\n\n        this.addTiledImage(optionsClone);\n        return this;\n    },\n\n    // deprecated\n    getLayerAtLevel: function( level ) {\n        $.console.error( \"[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.\" );\n        return this.world.getItemAt(level);\n    },\n\n    // deprecated\n    getLevelOfLayer: function( drawer ) {\n        $.console.error( \"[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.\" );\n        return this.world.getIndexOfItem(drawer);\n    },\n\n    // deprecated\n    getLayersCount: function() {\n        $.console.error( \"[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.\" );\n        return this.world.getItemCount();\n    },\n\n    // deprecated\n    setLayerLevel: function( drawer, level ) {\n        $.console.error( \"[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.\" );\n        return this.world.setItemIndex(drawer, level);\n    },\n\n    // deprecated\n    removeLayer: function( drawer ) {\n        $.console.error( \"[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.\" );\n        return this.world.removeItem(drawer);\n    },\n\n    /**\n     * Force the viewer to redraw its contents.\n     * @returns {OpenSeadragon.Viewer} Chainable.\n     */\n    forceRedraw: function() {\n        THIS[ this.hash ].forceRedraw = true;\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindSequenceControls: function(){\n\n        //////////////////////////////////////////////////////////////////////////\n        // Image Sequence Controls\n        //////////////////////////////////////////////////////////////////////////\n        var onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            onNextHandler           = $.delegate( this, this.goToNextPage ),\n            onPreviousHandler       = $.delegate( this, this.goToPreviousPage ),\n            navImages               = this.navImages,\n            useGroup                = true;\n\n        if( this.showSequenceControl ){\n\n            if( this.previousButton || this.nextButton ){\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            this.previousButton = new $.Button({\n                element:    this.previousButton ? $.getElement( this.previousButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.PreviousPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.previous.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.previous.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.previous.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.previous.DOWN ),\n                onRelease:  onPreviousHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            this.nextButton = new $.Button({\n                element:    this.nextButton ? $.getElement( this.nextButton ) : null,\n                clickTimeThreshold: this.clickTimeThreshold,\n                clickDistThreshold: this.clickDistThreshold,\n                tooltip:    $.getString( \"Tooltips.NextPage\" ),\n                srcRest:    resolveUrl( this.prefixUrl, navImages.next.REST ),\n                srcGroup:   resolveUrl( this.prefixUrl, navImages.next.GROUP ),\n                srcHover:   resolveUrl( this.prefixUrl, navImages.next.HOVER ),\n                srcDown:    resolveUrl( this.prefixUrl, navImages.next.DOWN ),\n                onRelease:  onNextHandler,\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            if( !this.navPrevNextWrap ){\n                this.previousButton.disable();\n            }\n\n            if (!this.tileSources || !this.tileSources.length) {\n                this.nextButton.disable();\n            }\n\n            if( useGroup ){\n                this.paging = new $.ButtonGroup({\n                    buttons: [\n                        this.previousButton,\n                        this.nextButton\n                    ],\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.pagingControl = this.paging.element;\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.pagingControl,\n                        {anchor: $.ControlAnchor.BOTTOM_RIGHT}\n                    );\n                }else{\n                    this.addControl(\n                        this.pagingControl,\n                        {anchor: this.sequenceControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            }\n        }\n        return this;\n    },\n\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     */\n    bindStandardControls: function(){\n        //////////////////////////////////////////////////////////////////////////\n        // Navigation Controls\n        //////////////////////////////////////////////////////////////////////////\n        var beginZoomingInHandler   = $.delegate( this, beginZoomingIn ),\n            endZoomingHandler       = $.delegate( this, endZooming ),\n            doSingleZoomInHandler   = $.delegate( this, doSingleZoomIn ),\n            beginZoomingOutHandler  = $.delegate( this, beginZoomingOut ),\n            doSingleZoomOutHandler  = $.delegate( this, doSingleZoomOut ),\n            onHomeHandler           = $.delegate( this, onHome ),\n            onFullScreenHandler     = $.delegate( this, onFullScreen ),\n            onRotateLeftHandler     = $.delegate( this, onRotateLeft ),\n            onRotateRightHandler    = $.delegate( this, onRotateRight ),\n            onFlipHandler           = $.delegate( this, onFlip),\n            onFocusHandler          = $.delegate( this, onFocus ),\n            onBlurHandler           = $.delegate( this, onBlur ),\n            navImages               = this.navImages,\n            buttons                 = [],\n            useGroup                = true;\n\n\n        if ( this.showNavigationControl ) {\n\n            if( this.zoomInButton || this.zoomOutButton ||\n                this.homeButton || this.fullPageButton ||\n                this.rotateLeftButton || this.rotateRightButton ||\n                this.flipButton ) {\n                //if we are binding to custom buttons then layout and\n                //grouping is the responsibility of the page author\n                useGroup = false;\n            }\n\n            if ( this.showZoomControl ) {\n                buttons.push( this.zoomInButton = new $.Button({\n                    element:    this.zoomInButton ? $.getElement( this.zoomInButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomIn\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomIn.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomIn.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomIn.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomIn.DOWN ),\n                    onPress:    beginZoomingInHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomInHandler,\n                    onEnter:    beginZoomingInHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.zoomOutButton = new $.Button({\n                    element:    this.zoomOutButton ? $.getElement( this.zoomOutButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.ZoomOut\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.zoomOut.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.zoomOut.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.zoomOut.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.zoomOut.DOWN ),\n                    onPress:    beginZoomingOutHandler,\n                    onRelease:  endZoomingHandler,\n                    onClick:    doSingleZoomOutHandler,\n                    onEnter:    beginZoomingOutHandler,\n                    onExit:     endZoomingHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showHomeControl ) {\n                buttons.push( this.homeButton = new $.Button({\n                    element:    this.homeButton ? $.getElement( this.homeButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.Home\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.home.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.home.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.home.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.home.DOWN ),\n                    onRelease:  onHomeHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showFullPageControl ) {\n                buttons.push( this.fullPageButton = new $.Button({\n                    element:    this.fullPageButton ? $.getElement( this.fullPageButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.FullPage\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.fullpage.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.fullpage.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.fullpage.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.fullpage.DOWN ),\n                    onRelease:  onFullScreenHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showRotationControl ) {\n                buttons.push( this.rotateLeftButton = new $.Button({\n                    element:    this.rotateLeftButton ? $.getElement( this.rotateLeftButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateLeft\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateleft.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateleft.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateleft.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateleft.DOWN ),\n                    onRelease:  onRotateLeftHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n\n                buttons.push( this.rotateRightButton = new $.Button({\n                    element:    this.rotateRightButton ? $.getElement( this.rotateRightButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.RotateRight\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.rotateright.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.rotateright.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.rotateright.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.rotateright.DOWN ),\n                    onRelease:  onRotateRightHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( this.showFlipControl ) {\n                buttons.push( this.flipButton = new $.Button({\n                    element:    this.flipButton ? $.getElement( this.flipButton ) : null,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold,\n                    tooltip:    $.getString( \"Tooltips.Flip\" ),\n                    srcRest:    resolveUrl( this.prefixUrl, navImages.flip.REST ),\n                    srcGroup:   resolveUrl( this.prefixUrl, navImages.flip.GROUP ),\n                    srcHover:   resolveUrl( this.prefixUrl, navImages.flip.HOVER ),\n                    srcDown:    resolveUrl( this.prefixUrl, navImages.flip.DOWN ),\n                    onRelease:  onFlipHandler,\n                    onFocus:    onFocusHandler,\n                    onBlur:     onBlurHandler\n                }));\n            }\n\n            if ( useGroup ) {\n                this.buttonGroup = new $.ButtonGroup({\n                    buttons:            buttons,\n                    clickTimeThreshold: this.clickTimeThreshold,\n                    clickDistThreshold: this.clickDistThreshold\n                });\n\n                this.navControl  = this.buttonGroup.element;\n                this.addHandler( 'open', $.delegate( this, lightUp ) );\n\n                if( this.toolbar ){\n                    this.toolbar.addControl(\n                        this.navControl,\n                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                } else {\n                    this.addControl(\n                        this.navControl,\n                        {anchor: this.navigationControlAnchor || $.ControlAnchor.TOP_LEFT}\n                    );\n                }\n            } else {\n                this.customButtons = buttons;\n            }\n\n        }\n        return this;\n    },\n\n    /**\n     * Gets the active page of a sequence\n     * @function\n     * @return {Number}\n     */\n    currentPage: function() {\n        return this._sequenceIndex;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:page\n     */\n    goToPage: function( page ){\n        if( this.tileSources && page >= 0 && page < this.tileSources.length ){\n            this._sequenceIndex = page;\n\n            this._updateSequenceButtons( page );\n\n            this.open( this.tileSources[ page ] );\n\n            if( this.referenceStrip ){\n                this.referenceStrip.setFocus( page );\n            }\n\n            /**\n             * Raised when the page is changed on a viewer configured with multiple image sources (see {@link OpenSeadragon.Viewer#goToPage}).\n             *\n             * @event page\n             * @memberof OpenSeadragon.Viewer\n             * @type {Object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {Number} page - The page index.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'page', { page: page } );\n        }\n\n        return this;\n    },\n\n   /**\n     * Adds an html element as an overlay to the current viewport.  Useful for\n     * highlighting words or areas of interest on an image or other zoomable\n     * interface. The overlays added via this method are removed when the viewport\n     * is closed which include when changing page.\n     * @method\n     * @param {Element|String|Object} element - A reference to an element or an id for\n     *      the element which will be overlaid. Or an Object specifying the configuration for the overlay.\n     *      If using an object, see {@link OpenSeadragon.Overlay} for a list of\n     *      all available options.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlaid. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} [placement=OpenSeadragon.Placement.TOP_LEFT] - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @param {function} [onDraw] - If supplied the callback is called when the overlay\n     *      needs to be drawn. It it the responsibility of the callback to do any drawing/positioning.\n     *      It is passed position, size and element.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:add-overlay\n     */\n    addOverlay: function( element, location, placement, onDraw ) {\n        var options;\n        if( $.isPlainObject( element ) ){\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement,\n                onDraw: onDraw\n            };\n        }\n\n        element = $.getElement( options.element );\n\n        if ( getOverlayIndex( this.currentOverlays, element ) >= 0 ) {\n            // they're trying to add a duplicate overlay\n            return this;\n        }\n\n        var overlay = getOverlayObject( this, options);\n        this.currentOverlays.push(overlay);\n        overlay.drawHTML( this.overlaysContainer, this.viewport );\n\n        /**\n         * Raised when an overlay is added to the viewer (see {@link OpenSeadragon.Viewer#addOverlay}).\n         *\n         * @event add-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Element} element - The overlay element.\n         * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n         * @property {OpenSeadragon.Placement} placement\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-overlay', {\n            element: element,\n            location: options.location,\n            placement: options.placement\n        });\n        return this;\n    },\n\n    /**\n     * Updates the overlay represented by the reference to the element or\n     * element id moving it to the new location, relative to the new placement.\n     * @method\n     * @param {Element|String} element - A reference to an element or an id for\n     *      the element which is overlaid.\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location - The point or\n     *      rectangle which will be overlaid. This is a viewport relative location.\n     * @param {OpenSeadragon.Placement} [placement=OpenSeadragon.Placement.TOP_LEFT] - The position of the\n     *      viewport which the location coordinates will be treated as relative\n     *      to.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:update-overlay\n     */\n    updateOverlay: function( element, location, placement ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].update( location, placement );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay's location or placement changes\n             * (see {@link OpenSeadragon.Viewer#updateOverlay}).\n             *\n             * @event update-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element\n             * @property {OpenSeadragon.Point|OpenSeadragon.Rect} location\n             * @property {OpenSeadragon.Placement} placement\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'update-overlay', {\n                element: element,\n                location: location,\n                placement: placement\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes an overlay identified by the reference element or element id\n     * and schedules an update.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represent the ovelay content to be removed.\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:remove-overlay\n     */\n    removeOverlay: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if ( i >= 0 ) {\n            this.currentOverlays[ i ].destroy();\n            this.currentOverlays.splice( i, 1 );\n            THIS[ this.hash ].forceRedraw = true;\n            /**\n             * Raised when an overlay is removed from the viewer\n             * (see {@link OpenSeadragon.Viewer#removeOverlay}).\n             *\n             * @event remove-overlay\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the\n             * Viewer which raised the event.\n             * @property {Element} element - The overlay element.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent( 'remove-overlay', {\n                element: element\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Removes all currently configured Overlays from this Viewer and schedules\n     * an update.\n     * @method\n     * @return {OpenSeadragon.Viewer} Chainable.\n     * @fires OpenSeadragon.Viewer.event:clear-overlay\n     */\n    clearOverlays: function() {\n        while ( this.currentOverlays.length > 0 ) {\n            this.currentOverlays.pop().destroy();\n        }\n        THIS[ this.hash ].forceRedraw = true;\n        /**\n         * Raised when all overlays are removed from the viewer (see {@link OpenSeadragon.Drawer#clearOverlays}).\n         *\n         * @event clear-overlay\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'clear-overlay', {} );\n        return this;\n    },\n\n     /**\n     * Finds an overlay identified by the reference element or element id\n     * and returns it as an object, return null if not found.\n     * @method\n     * @param {Element|String} element - A reference to the element or an\n     *      element id which represents the overlay content.\n     * @return {OpenSeadragon.Overlay} the matching overlay or null if none found.\n     */\n    getOverlayById: function( element ) {\n        var i;\n\n        element = $.getElement( element );\n        i = getOverlayIndex( this.currentOverlays, element );\n\n        if (i >= 0) {\n            return this.currentOverlays[i];\n        } else {\n            return null;\n        }\n    },\n\n    /**\n     * Updates the sequence buttons.\n     * @function OpenSeadragon.Viewer.prototype._updateSequenceButtons\n     * @private\n     * @param {Number} Sequence Value\n     */\n    _updateSequenceButtons: function( page ) {\n\n            if ( this.nextButton ) {\n                if(!this.tileSources || this.tileSources.length - 1 === page) {\n                    //Disable next button\n                    if ( !this.navPrevNextWrap ) {\n                        this.nextButton.disable();\n                    }\n                } else {\n                    this.nextButton.enable();\n                }\n            }\n            if ( this.previousButton ) {\n                if ( page > 0 ) {\n                    //Enable previous button\n                    this.previousButton.enable();\n                } else {\n                    if ( !this.navPrevNextWrap ) {\n                        this.previousButton.disable();\n                    }\n                }\n            }\n      },\n\n    /**\n     * Display a message in the viewport\n     * @function OpenSeadragon.Viewer.prototype._showMessage\n     * @private\n     * @param {String} text message\n     */\n    _showMessage: function ( message ) {\n        this._hideMessage();\n\n        var div = $.makeNeutralElement( \"div\" );\n        div.appendChild( document.createTextNode( message ) );\n\n        this.messageDiv = $.makeCenteredNode( div );\n\n        $.addClass(this.messageDiv, \"openseadragon-message\");\n\n        this.container.appendChild( this.messageDiv );\n    },\n\n    /**\n     * Hide any currently displayed viewport message\n     * @function OpenSeadragon.Viewer.prototype._hideMessage\n     * @private\n     */\n    _hideMessage: function () {\n        var div = this.messageDiv;\n        if (div) {\n            div.parentNode.removeChild(div);\n            delete this.messageDiv;\n        }\n    },\n\n    /**\n     * Gets this viewer's gesture settings for the given pointer device type.\n     * @method\n     * @param {String} type - The pointer device type to get the gesture settings for (\"mouse\", \"touch\", \"pen\", etc.).\n     * @return {OpenSeadragon.GestureSettings}\n     */\n    gestureSettingsByDeviceType: function ( type ) {\n        switch ( type ) {\n            case 'mouse':\n                return this.gestureSettingsMouse;\n            case 'touch':\n                return this.gestureSettingsTouch;\n            case 'pen':\n                return this.gestureSettingsPen;\n            default:\n                return this.gestureSettingsUnknown;\n        }\n    },\n\n    // private\n    _drawOverlays: function() {\n        var i,\n            length = this.currentOverlays.length;\n        for ( i = 0; i < length; i++ ) {\n            this.currentOverlays[ i ].drawHTML( this.overlaysContainer, this.viewport );\n        }\n    },\n\n    /**\n     * Cancel the \"in flight\" images.\n     */\n    _cancelPendingImages: function() {\n        this._loadQueue = [];\n    },\n\n    /**\n     * Removes the reference strip and disables displaying it.\n     * @function\n     */\n    removeReferenceStrip: function() {\n        this.showReferenceStrip = false;\n\n        if (this.referenceStrip) {\n            this.referenceStrip.destroy();\n            this.referenceStrip = null;\n        }\n    },\n\n    /**\n     * Enables and displays the reference strip based on the currently set tileSources.\n     * Works only when the Viewer has sequenceMode set to true.\n     * @function\n     */\n    addReferenceStrip: function() {\n        this.showReferenceStrip = true;\n\n        if (this.sequenceMode) {\n            if (this.referenceStrip) {\n                return;\n            }\n\n            if (this.tileSources.length && this.tileSources.length > 1) {\n                this.referenceStrip = new $.ReferenceStrip({\n                    id:          this.referenceStripElement,\n                    position:    this.referenceStripPosition,\n                    sizeRatio:   this.referenceStripSizeRatio,\n                    scroll:      this.referenceStripScroll,\n                    height:      this.referenceStripHeight,\n                    width:       this.referenceStripWidth,\n                    tileSources: this.tileSources,\n                    prefixUrl:   this.prefixUrl,\n                    useCanvas:   this.useCanvas,\n                    viewer:      this\n                });\n\n                this.referenceStrip.setFocus( this._sequenceIndex );\n            }\n        } else {\n            $.console.warn('Attempting to display a reference strip while \"sequenceMode\" is off.');\n        }\n    },\n\n    /**\n     * Adds _updatePixelDensityRatio to the window resize event.\n     * @private\n     */\n    _addUpdatePixelDensityRatioEvent: function() {\n        this._updatePixelDensityRatioBind = this._updatePixelDensityRatio.bind(this);\n        $.addEvent( window, 'resize', this._updatePixelDensityRatioBind );\n    },\n\n    /**\n     * Removes _updatePixelDensityRatio from the window resize event.\n     * @private\n     */\n    _removeUpdatePixelDensityRatioEvent: function() {\n        $.removeEvent( window, 'resize', this._updatePixelDensityRatioBind );\n    },\n\n    /**\n     * Update pixel density ratio, clears all tiles and triggers updates for\n     * all items if the ratio has changed.\n     * @private\n     */\n     _updatePixelDensityRatio: function() {\n        var previusPixelDensityRatio = $.pixelDensityRatio;\n        var currentPixelDensityRatio = $.getCurrentPixelDensityRatio();\n        if (previusPixelDensityRatio !== currentPixelDensityRatio) {\n            $.pixelDensityRatio = currentPixelDensityRatio;\n            this.world.resetItems();\n            this.forceRedraw();\n        }\n    },\n\n    /**\n     * Sets the image source to the source with index equal to\n     * currentIndex - 1. Changes current image in sequence mode.\n     * If specified, wraps around (see navPrevNextWrap in\n     * {@link OpenSeadragon.Options})\n     *\n     * @method\n     */\n\n    goToPreviousPage: function () {\n        var previous = this._sequenceIndex - 1;\n        if(this.navPrevNextWrap && previous < 0){\n            previous += this.tileSources.length;\n        }\n        this.goToPage( previous );\n    },\n\n    /**\n     * Sets the image source to the source with index equal to\n     * currentIndex + 1. Changes current image in sequence mode.\n     * If specified, wraps around (see navPrevNextWrap in\n     * {@link OpenSeadragon.Options})\n     *\n     * @method\n     */\n    goToNextPage: function () {\n        var next = this._sequenceIndex + 1;\n        if(this.navPrevNextWrap && next >= this.tileSources.length){\n            next = 0;\n        }\n        this.goToPage( next );\n    },\n\n    isAnimating: function () {\n        return THIS[ this.hash ].animating;\n    },\n});\n\n\n/**\n * _getSafeElemSize is like getElementSize(), but refuses to return 0 for x or y,\n * which was causing some calling operations to return NaN.\n * @returns {Point}\n * @private\n */\nfunction _getSafeElemSize (oElement) {\n    oElement = $.getElement( oElement );\n\n    return new $.Point(\n        (oElement.clientWidth === 0 ? 1 : oElement.clientWidth),\n        (oElement.clientHeight === 0 ? 1 : oElement.clientHeight)\n    );\n}\n\n\n/**\n * @function\n * @private\n */\nfunction getTileSourceImplementation( viewer, tileSource, imgOptions, successCallback,\n    failCallback ) {\n    var _this = viewer;\n\n    //allow plain xml strings or json strings to be parsed here\n    if ( $.type( tileSource ) === 'string' ) {\n        //xml should start with \"<\" and end with \">\"\n        if ( tileSource.match( /^\\s*<.*>\\s*$/ ) ) {\n            tileSource = $.parseXml( tileSource );\n        //json should start with \"{\" or \"[\" and end with \"}\" or \"]\"\n        } else if ( tileSource.match(/^\\s*[{[].*[}\\]]\\s*$/ ) ) {\n            try {\n              var tileSourceJ = $.parseJSON(tileSource);\n              tileSource = tileSourceJ;\n            } catch (e) {\n              //tileSource = tileSource;\n            }\n        }\n    }\n\n    function waitUntilReady(tileSource, originalTileSource) {\n        if (tileSource.ready) {\n            successCallback(tileSource);\n        } else {\n            tileSource.addHandler('ready', function () {\n                successCallback(tileSource);\n            });\n            tileSource.addHandler('open-failed', function (event) {\n                failCallback({\n                    message: event.message,\n                    source: originalTileSource\n                });\n            });\n        }\n    }\n\n    setTimeout( function() {\n        if ( $.type( tileSource ) === 'string' ) {\n            //If its still a string it means it must be a url at this point\n            tileSource = new $.TileSource({\n                url: tileSource,\n                crossOriginPolicy: imgOptions.crossOriginPolicy !== undefined ?\n                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy,\n                ajaxWithCredentials: viewer.ajaxWithCredentials,\n                ajaxHeaders: imgOptions.ajaxHeaders ?\n                    imgOptions.ajaxHeaders : viewer.ajaxHeaders,\n                splitHashDataForPost: viewer.splitHashDataForPost,\n                useCanvas: viewer.useCanvas,\n                success: function( event ) {\n                    successCallback( event.tileSource );\n                }\n            });\n            tileSource.addHandler( 'open-failed', function( event ) {\n                failCallback( event );\n            } );\n\n        } else if ($.isPlainObject(tileSource) || tileSource.nodeType) {\n            if (tileSource.crossOriginPolicy === undefined &&\n                (imgOptions.crossOriginPolicy !== undefined || viewer.crossOriginPolicy !== undefined)) {\n                tileSource.crossOriginPolicy = imgOptions.crossOriginPolicy !== undefined ?\n                    imgOptions.crossOriginPolicy : viewer.crossOriginPolicy;\n            }\n            if (tileSource.ajaxWithCredentials === undefined) {\n                tileSource.ajaxWithCredentials = viewer.ajaxWithCredentials;\n            }\n            if (tileSource.useCanvas === undefined) {\n                tileSource.useCanvas = viewer.useCanvas;\n            }\n\n            if ( $.isFunction( tileSource.getTileUrl ) ) {\n                //Custom tile source\n                var customTileSource = new $.TileSource( tileSource );\n                customTileSource.getTileUrl = tileSource.getTileUrl;\n                successCallback( customTileSource );\n            } else {\n                //inline configuration\n                var $TileSource = $.TileSource.determineType( _this, tileSource );\n                if ( !$TileSource ) {\n                    failCallback( {\n                        message: \"Unable to load TileSource\",\n                        source: tileSource\n                    });\n                    return;\n                }\n                var options = $TileSource.prototype.configure.apply( _this, [ tileSource ] );\n                waitUntilReady(new $TileSource(options), tileSource);\n            }\n        } else {\n            //can assume it's already a tile source implementation\n            waitUntilReady(tileSource, tileSource);\n        }\n    });\n}\n\nfunction getOverlayObject( viewer, overlay ) {\n    if ( overlay instanceof $.Overlay ) {\n        return overlay;\n    }\n\n    var element = null;\n    if ( overlay.element ) {\n        element = $.getElement( overlay.element );\n    } else {\n        var id = overlay.id ?\n            overlay.id :\n            \"openseadragon-overlay-\" + Math.floor( Math.random() * 10000000 );\n\n        element = $.getElement( overlay.id );\n        if ( !element ) {\n            element         = document.createElement( \"a\" );\n            element.href    = \"#/overlay/\" + id;\n        }\n        element.id = id;\n        $.addClass( element, overlay.className ?\n            overlay.className :\n            \"openseadragon-overlay\"\n        );\n    }\n\n    var location = overlay.location;\n    var width = overlay.width;\n    var height = overlay.height;\n    if (!location) {\n        var x = overlay.x;\n        var y = overlay.y;\n        if (overlay.px !== undefined) {\n            var rect = viewer.viewport.imageToViewportRectangle(new $.Rect(\n                overlay.px,\n                overlay.py,\n                width || 0,\n                height || 0));\n            x = rect.x;\n            y = rect.y;\n            width = width !== undefined ? rect.width : undefined;\n            height = height !== undefined ? rect.height : undefined;\n        }\n        location = new $.Point(x, y);\n    }\n\n    var placement = overlay.placement;\n    if (placement && $.type(placement) === \"string\") {\n        placement = $.Placement[overlay.placement.toUpperCase()];\n    }\n\n    return new $.Overlay({\n        element: element,\n        location: location,\n        placement: placement,\n        onDraw: overlay.onDraw,\n        checkResize: overlay.checkResize,\n        width: width,\n        height: height,\n        rotationMode: overlay.rotationMode\n    });\n}\n\n/**\n * @private\n * @inner\n * Determines the index of the given overlay in the given overlays array.\n */\nfunction getOverlayIndex( overlays, element ) {\n    var i;\n    for ( i = overlays.length - 1; i >= 0; i-- ) {\n        if ( overlays[ i ].element === element ) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Schedulers provide the general engine for animation\n///////////////////////////////////////////////////////////////////////////////\nfunction scheduleUpdate( viewer, updateFunc ){\n    return $.requestAnimationFrame( function(){\n        updateFunc( viewer );\n    } );\n}\n\n\n//provides a sequence in the fade animation\nfunction scheduleControlsFade( viewer ) {\n    $.requestAnimationFrame( function(){\n        updateControlsFade( viewer );\n    });\n}\n\n\n//initiates an animation to hide the controls\nfunction beginControlsAutoHide( viewer ) {\n    if ( !viewer.autoHideControls ) {\n        return;\n    }\n    viewer.controlsShouldFade = true;\n    viewer.controlsFadeBeginTime =\n        $.now() +\n        viewer.controlsFadeDelay;\n\n    window.setTimeout( function(){\n        scheduleControlsFade( viewer );\n    }, viewer.controlsFadeDelay );\n}\n\n\n//determines if fade animation is done or continues the animation\nfunction updateControlsFade( viewer ) {\n    var currentTime,\n        deltaTime,\n        opacity,\n        i;\n    if ( viewer.controlsShouldFade ) {\n        currentTime = $.now();\n        deltaTime = currentTime - viewer.controlsFadeBeginTime;\n        opacity = 1.0 - deltaTime / viewer.controlsFadeLength;\n\n        opacity = Math.min( 1.0, opacity );\n        opacity = Math.max( 0.0, opacity );\n\n        for ( i = viewer.controls.length - 1; i >= 0; i--) {\n            if (viewer.controls[ i ].autoFade) {\n                viewer.controls[ i ].setOpacity( opacity );\n            }\n        }\n\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleControlsFade( viewer );\n        }\n    }\n}\n\n\n//stop the fade animation on the controls and show them\nfunction abortControlsAutoHide( viewer ) {\n    var i;\n    viewer.controlsShouldFade = false;\n    for ( i = viewer.controls.length - 1; i >= 0; i-- ) {\n        viewer.controls[ i ].setOpacity( 1.0 );\n    }\n}\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Default view event handlers.\n///////////////////////////////////////////////////////////////////////////////\nfunction onFocus(){\n    abortControlsAutoHide( this );\n}\n\nfunction onBlur(){\n    beginControlsAutoHide( this );\n\n}\n\nfunction onCanvasContextMenu( event ) {\n    var eventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        originalEvent: event.originalEvent,\n        preventDefault: event.preventDefault\n    };\n\n    /**\n     * Raised when a contextmenu event occurs in the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-contextmenu\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefault - Set to true to prevent the default user-agent's handling of the contextmenu event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-contextmenu', eventArgs );\n\n    event.preventDefault = eventArgs.preventDefault;\n}\n\nfunction onCanvasKeyDown( event ) {\n    var canvasKeyDownEventArgs = {\n      originalEvent: event.originalEvent,\n      preventDefaultAction: false,\n      preventVerticalPan: event.preventVerticalPan || !this.panVertical,\n      preventHorizontalPan: event.preventHorizontalPan || !this.panHorizontal\n    };\n\n    /**\n     * Raised when a keyboard key is pressed and the focus is on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-key\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default keyboard behaviour. Default: false.\n     * @property {Boolean} preventVerticalPan - Set to true to prevent keyboard vertical panning. Default: false.\n     * @property {Boolean} preventHorizontalPan - Set to true to prevent keyboard horizontal panning. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n\n    this.raiseEvent('canvas-key', canvasKeyDownEventArgs);\n\n    if ( !canvasKeyDownEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 38://up arrow\n                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(1.1);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -this.pixelsPerArrowPress)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 40://down arrow\n                if (!canvasKeyDownEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, this.pixelsPerArrowPress)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 37://left arrow\n                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-this.pixelsPerArrowPress, 0)));\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 39://right arrow\n                if (!canvasKeyDownEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(this.pixelsPerArrowPress, 0)));\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                event.preventDefault = false;\n                break;\n        }\n    } else {\n        event.preventDefault = false;\n    }\n}\nfunction onCanvasKeyPress( event ) {\n    var canvasKeyPressEventArgs = {\n      originalEvent: event.originalEvent,\n      preventDefaultAction: false,\n      preventVerticalPan: event.preventVerticalPan || !this.panVertical,\n      preventHorizontalPan: event.preventHorizontalPan || !this.panHorizontal\n    };\n\n    // This event is documented in onCanvasKeyDown\n    this.raiseEvent('canvas-key', canvasKeyPressEventArgs);\n\n    if ( !canvasKeyPressEventArgs.preventDefaultAction && !event.ctrl && !event.alt && !event.meta ) {\n        switch( event.keyCode ){\n            case 43://=|+\n            case 61://=|+\n                this.viewport.zoomBy(1.1);\n                this.viewport.applyConstraints();\n                event.preventDefault = true;\n                break;\n            case 45://-|_\n                this.viewport.zoomBy(0.9);\n                this.viewport.applyConstraints();\n                event.preventDefault = true;\n                break;\n            case 48://0|)\n                this.viewport.goHome();\n                this.viewport.applyConstraints();\n                event.preventDefault = true;\n                break;\n            case 119://w\n            case 87://W\n                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n                    if ( event.shift ) {\n                        this.viewport.zoomBy(1.1);\n                    } else {\n                        this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, -40)));\n                    }\n                    this.viewport.applyConstraints();\n                  }\n                  event.preventDefault = true;\n                  break;\n            case 115://s\n            case 83://S\n                if (!canvasKeyPressEventArgs.preventVerticalPan) {\n                  if ( event.shift ) {\n                    this.viewport.zoomBy(0.9);\n                  } else {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0, 40)));\n                  }\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 97://a\n                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n                    this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40, 0)));\n                    this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 100://d\n                if (!canvasKeyPressEventArgs.preventHorizontalPan) {\n                  this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40, 0)));\n                  this.viewport.applyConstraints();\n                }\n                event.preventDefault = true;\n                break;\n            case 114: //r - clockwise rotation\n              if(this.viewport.flipped){\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n              } else{\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n              }\n              this.viewport.applyConstraints();\n              event.preventDefault = true;\n              break;\n            case 82: //R - counterclockwise  rotation\n              if(this.viewport.flipped){\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees + this.rotationIncrement, 360));\n              } else{\n                this.viewport.setRotation($.positiveModulo(this.viewport.degrees - this.rotationIncrement, 360));\n              }\n              this.viewport.applyConstraints();\n              event.preventDefault = true;\n              break;\n            case 102: //f\n              this.viewport.toggleFlip();\n              event.preventDefault = true;\n              break;\n            case 106: //j - previous image source\n              this.goToPreviousPage();\n              break;\n            case 107: //k - next image source\n              this.goToNextPage();\n              break;\n            default:\n                // console.log( 'navigator keycode %s', event.keyCode );\n                event.preventDefault = false;\n                break;\n        }\n    } else {\n        event.preventDefault = false;\n    }\n}\n\nfunction onCanvasClick( event ) {\n    var gestureSettings;\n\n    var haveKeyboardFocus = document.activeElement === this.canvas;\n\n    // If we don't have keyboard focus, request it.\n    if ( !haveKeyboardFocus ) {\n        this.canvas.focus();\n    }\n    if(this.viewport.flipped){\n        event.position.x = this.viewport.getContainerSize().x - event.position.x;\n    }\n\n    var canvasClickEventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        quick: event.quick,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        originalTarget: event.originalTarget,\n        preventDefaultAction: false\n    };\n\n    /**\n     * Raised when a mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Element} originalTarget - The DOM element clicked on.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-click', canvasClickEventArgs);\n\n    if ( !canvasClickEventArgs.preventDefaultAction && this.viewport && event.quick ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.clickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n}\n\nfunction onCanvasDblClick( event ) {\n    var gestureSettings;\n\n    var canvasDblClickEventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: false\n    };\n\n    /**\n     * Raised when a double mouse press/release or touch/remove occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-double-click\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default double tap to zoom behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-double-click', canvasDblClickEventArgs);\n\n    if ( !canvasDblClickEventArgs.preventDefaultAction && this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.dblClickToZoom ) {\n            this.viewport.zoomBy(\n                event.shift ? 1.0 / this.zoomPerClick : this.zoomPerClick,\n                gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n            );\n            this.viewport.applyConstraints();\n        }\n    }\n}\n\nfunction onCanvasDrag( event ) {\n    var gestureSettings;\n\n    var canvasDragEventArgs = {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        delta: event.delta,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: false\n    };\n\n    /**\n     * Raised when a mouse or touch drag operation occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n     * @property {Number} speed - Current computed speed, in pixels per second.\n     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default drag to pan behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-drag', canvasDragEventArgs);\n\n    gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n\n    if ( gestureSettings.dragToPan && !canvasDragEventArgs.preventDefaultAction && this.viewport ) {\n        if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n        if(this.viewport.flipped){\n            event.delta.x = -event.delta.x;\n        }\n\n        if( this.constrainDuringPan ){\n            var delta = this.viewport.deltaPointsFromPixels( event.delta.negate() );\n\n            this.viewport.centerSpringX.target.value += delta.x;\n            this.viewport.centerSpringY.target.value += delta.y;\n\n            var bounds = this.viewport.getBounds();\n            var constrainedBounds = this.viewport.getConstrainedBounds();\n\n            this.viewport.centerSpringX.target.value -= delta.x;\n            this.viewport.centerSpringY.target.value -= delta.y;\n\n            if (bounds.x !== constrainedBounds.x) {\n                event.delta.x = 0;\n            }\n\n            if (bounds.y !== constrainedBounds.y) {\n                event.delta.y = 0;\n            }\n        }\n\n        this.viewport.panBy( this.viewport.deltaPointsFromPixels( event.delta.negate() ), gestureSettings.flickEnabled && !this.constrainDuringPan);\n    }\n}\n\nfunction onCanvasDragEnd( event ) {\n    var canvasDragEndEventArgs = {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        speed: event.speed,\n        direction: event.direction,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultAction: false\n    };\n\n    /**\n     * Raised when a mouse or touch drag operation ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-drag-end\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} speed - Speed at the end of a drag gesture, in pixels per second.\n     * @property {Number} direction - Direction at the end of a drag gesture, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default drag-end flick behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n     this.raiseEvent('canvas-drag-end', canvasDragEndEventArgs);\n\n    if (!canvasDragEndEventArgs.preventDefaultAction && this.viewport) {\n        var gestureSettings = this.gestureSettingsByDeviceType(event.pointerType);\n        if (gestureSettings.flickEnabled &&\n            event.speed >= gestureSettings.flickMinSpeed) {\n            var amplitudeX = 0;\n            if (this.panHorizontal) {\n                amplitudeX = gestureSettings.flickMomentum * event.speed *\n                    Math.cos(event.direction);\n            }\n            var amplitudeY = 0;\n            if (this.panVertical) {\n                amplitudeY = gestureSettings.flickMomentum * event.speed *\n                    Math.sin(event.direction);\n            }\n            var center = this.viewport.pixelFromPoint(\n                this.viewport.getCenter(true));\n            var target = this.viewport.pointFromPixel(\n                new $.Point(center.x - amplitudeX, center.y - amplitudeY));\n            this.viewport.panTo(target, false);\n        }\n        this.viewport.applyConstraints();\n    }\n}\n\nfunction onCanvasEnter( event ) {\n    /**\n     * Raised when a pointer enters the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-enter', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasLeave( event ) {\n    /**\n     * Raised when a pointer leaves the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-exit', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPress( event ) {\n    /**\n     * Raised when the primary mouse button is pressed or touch starts on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-press', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasRelease( event ) {\n    /**\n     * Raised when the primary mouse button is released or touch ends on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} insideElementReleased - True if the cursor still inside the tracked element when the button was released.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-release', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        insideElementPressed: event.insideElementPressed,\n        insideElementReleased: event.insideElementReleased,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryPress( event ) {\n    /**\n     * Raised when any non-primary pointer button is pressed on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-press\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-press', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasNonPrimaryRelease( event ) {\n    /**\n     * Raised when any non-primary pointer button is released on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-nonprimary-release\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Number} button - Button which caused the event.\n     *      -1: none, 0: primary/left, 1: aux/middle, 2: secondary/right, 3: X1/back, 4: X2/forward, 5: pen eraser.\n     * @property {Number} buttons - Current buttons pressed.\n     *      Combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'canvas-nonprimary-release', {\n        tracker: event.eventSource,\n        position: event.position,\n        pointerType: event.pointerType,\n        button: event.button,\n        buttons: event.buttons,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onCanvasPinch( event ) {\n    var gestureSettings,\n        centerPt,\n        lastCenterPt,\n        panByPt;\n\n    var canvasPinchEventArgs = {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        gesturePoints: event.gesturePoints,\n        lastCenter: event.lastCenter,\n        center: event.center,\n        lastDistance: event.lastDistance,\n        distance: event.distance,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefaultPanAction: false,\n        preventDefaultZoomAction: false,\n        preventDefaultRotateAction: false\n    };\n\n    /**\n     * Raised when a pinch event occurs on the {@link OpenSeadragon.Viewer#canvas} element.\n     *\n     * @event canvas-pinch\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {Array.<OpenSeadragon.MouseTracker.GesturePoint>} gesturePoints - Gesture points associated with the gesture. Velocity data can be found here.\n     * @property {OpenSeadragon.Point} lastCenter - The previous center point of the two pinch contact points relative to the tracked element.\n     * @property {OpenSeadragon.Point} center - The center point of the two pinch contact points relative to the tracked element.\n     * @property {Number} lastDistance - The previous distance between the two pinch contact points in CSS pixels.\n     * @property {Number} distance - The distance between the two pinch contact points in CSS pixels.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefaultPanAction - Set to true to prevent default pinch to pan behaviour. Default: false.\n     * @property {Boolean} preventDefaultZoomAction - Set to true to prevent default pinch to zoom behaviour. Default: false.\n     * @property {Boolean} preventDefaultRotateAction - Set to true to prevent default pinch to rotate behaviour. Default: false.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n     this.raiseEvent('canvas-pinch', canvasPinchEventArgs);\n\n    if ( this.viewport ) {\n        gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n        if ( gestureSettings.pinchToZoom &&\n                    (!canvasPinchEventArgs.preventDefaultPanAction || !canvasPinchEventArgs.preventDefaultZoomAction) ) {\n            centerPt = this.viewport.pointFromPixel( event.center, true );\n            if ( gestureSettings.zoomToRefPoint && !canvasPinchEventArgs.preventDefaultPanAction ) {\n                lastCenterPt = this.viewport.pointFromPixel( event.lastCenter, true );\n                panByPt = lastCenterPt.minus( centerPt );\n                if( !this.panHorizontal ) {\n                    panByPt.x = 0;\n                }\n                if( !this.panVertical ) {\n                    panByPt.y = 0;\n                }\n                this.viewport.panBy(panByPt, true);\n            }\n            if ( !canvasPinchEventArgs.preventDefaultZoomAction ) {\n                this.viewport.zoomBy( event.distance / event.lastDistance, centerPt, true );\n            }\n            this.viewport.applyConstraints();\n        }\n        if ( gestureSettings.pinchRotate && !canvasPinchEventArgs.preventDefaultRotateAction ) {\n            // Pinch rotate\n            var angle1 = Math.atan2(event.gesturePoints[0].currentPos.y - event.gesturePoints[1].currentPos.y,\n                event.gesturePoints[0].currentPos.x - event.gesturePoints[1].currentPos.x);\n            var angle2 = Math.atan2(event.gesturePoints[0].lastPos.y - event.gesturePoints[1].lastPos.y,\n                event.gesturePoints[0].lastPos.x - event.gesturePoints[1].lastPos.x);\n            this.viewport.setRotation(this.viewport.getRotation() + ((angle1 - angle2) * (180 / Math.PI)));\n        }\n    }\n}\n\nfunction onCanvasScroll( event ) {\n    var canvasScrollEventArgs,\n        gestureSettings,\n        factor,\n        thisScrollTime,\n        deltaScrollTime;\n\n    /* Certain scroll devices fire the scroll event way too fast so we are injecting a simple adjustment to keep things\n     * partially normalized. If we have already fired an event within the last 'minScrollDelta' milliseconds we skip\n     * this one and wait for the next event. */\n    thisScrollTime = $.now();\n    deltaScrollTime = thisScrollTime - this._lastScrollTime;\n    if (deltaScrollTime > this.minScrollDeltaTime) {\n        this._lastScrollTime = thisScrollTime;\n\n        canvasScrollEventArgs = {\n            tracker: event.eventSource,\n            position: event.position,\n            scroll: event.scroll,\n            shift: event.shift,\n            originalEvent: event.originalEvent,\n            preventDefaultAction: false,\n            preventDefault: true\n        };\n\n        /**\n         * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#canvas} element (mouse wheel).\n         *\n         * @event canvas-scroll\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n         * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n         * @property {Number} scroll - The scroll delta for the event.\n         * @property {Boolean} shift - True if the shift key was pressed during this event.\n         * @property {Object} originalEvent - The original DOM event.\n         * @property {Boolean} preventDefaultAction - Set to true to prevent default scroll to zoom behaviour. Default: false.\n         * @property {Boolean} preventDefault - Set to true to prevent the default user-agent's handling of the wheel event. Default: true.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n         this.raiseEvent('canvas-scroll', canvasScrollEventArgs );\n\n        if ( !canvasScrollEventArgs.preventDefaultAction && this.viewport ) {\n            if(this.viewport.flipped){\n                event.position.x = this.viewport.getContainerSize().x - event.position.x;\n            }\n\n            gestureSettings = this.gestureSettingsByDeviceType( event.pointerType );\n            if ( gestureSettings.scrollToZoom ) {\n                factor = Math.pow( this.zoomPerScroll, event.scroll );\n                this.viewport.zoomBy(\n                    factor,\n                    gestureSettings.zoomToRefPoint ? this.viewport.pointFromPixel( event.position, true ) : null\n                );\n                this.viewport.applyConstraints();\n            }\n        }\n\n        event.preventDefault = canvasScrollEventArgs.preventDefault;\n    } else {\n        event.preventDefault = true;\n    }\n}\n\nfunction onContainerEnter( event ) {\n    THIS[ this.hash ].mouseInside = true;\n    abortControlsAutoHide( this );\n    /**\n     * Raised when the cursor enters the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-enter\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-enter', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\nfunction onContainerLeave( event ) {\n    if ( event.pointers < 1 ) {\n        THIS[ this.hash ].mouseInside = false;\n        if ( !THIS[ this.hash ].animating ) {\n            beginControlsAutoHide( this );\n        }\n    }\n    /**\n     * Raised when the cursor leaves the {@link OpenSeadragon.Viewer#container} element.\n     *\n     * @event container-exit\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {String} pointerType - \"mouse\", \"touch\", \"pen\", etc.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} buttons - Current buttons pressed. A combination of bit flags 0: none, 1: primary (or touch contact), 2: secondary, 4: aux (often middle), 8: X1 (often back), 16: X2 (often forward), 32: pen eraser.\n     * @property {Number} pointers - Number of pointers (all types) active in the tracked element.\n     * @property {Boolean} insideElementPressed - True if the left mouse button is currently being pressed and was initiated inside the tracked element, otherwise false.\n     * @property {Boolean} buttonDownAny - Was the button down anywhere in the screen during the event. <span style=\"color:red;\">Deprecated. Use buttons instead.</span>\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.raiseEvent( 'container-exit', {\n        tracker: event.eventSource,\n        pointerType: event.pointerType,\n        position: event.position,\n        buttons: event.buttons,\n        pointers: event.pointers,\n        insideElementPressed: event.insideElementPressed,\n        buttonDownAny: event.buttonDownAny,\n        originalEvent: event.originalEvent\n    });\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Page update routines ( aka Views - for future reference )\n///////////////////////////////////////////////////////////////////////////////\n\nfunction updateMulti( viewer ) {\n    updateOnce( viewer );\n\n    // Request the next frame, unless we've been closed\n    if ( viewer.isOpen() ) {\n        viewer._updateRequestId = scheduleUpdate( viewer, updateMulti );\n    } else {\n        viewer._updateRequestId = false;\n    }\n}\n\nfunction updateOnce( viewer ) {\n\n    //viewer.profiler.beginUpdate();\n\n    if (viewer._opening || !THIS[viewer.hash]) {\n        return;\n    }\n\n    if (viewer.autoResize) {\n        var containerSize = _getSafeElemSize(viewer.container);\n        var prevContainerSize = THIS[viewer.hash].prevContainerSize;\n        if (!containerSize.equals(prevContainerSize)) {\n            var viewport = viewer.viewport;\n            if (viewer.preserveImageSizeOnResize) {\n                var resizeRatio = prevContainerSize.x / containerSize.x;\n                var zoom = viewport.getZoom() * resizeRatio;\n                var center = viewport.getCenter();\n                viewport.resize(containerSize, false);\n                viewport.zoomTo(zoom, null, true);\n                viewport.panTo(center, true);\n            } else {\n                // maintain image position\n                var oldBounds = viewport.getBounds();\n                viewport.resize(containerSize, true);\n                viewport.fitBoundsWithConstraints(oldBounds, true);\n            }\n            THIS[viewer.hash].prevContainerSize = containerSize;\n            THIS[viewer.hash].forceRedraw = true;\n        }\n    }\n\n    var viewportChange = viewer.viewport.update();\n    var animated = viewer.world.update() || viewportChange;\n\n    if (viewportChange) {\n        /**\n         * Raised when any spring animation update occurs (zoom, pan, etc.),\n         * before the viewer has drawn the new location.\n         *\n         * @event viewport-change\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent('viewport-change');\n    }\n\n    if( viewer.referenceStrip ){\n        animated = viewer.referenceStrip.update( viewer.viewport ) || animated;\n    }\n\n    var currentAnimating = THIS[ viewer.hash ].animating;\n\n    if ( !currentAnimating && animated ) {\n        /**\n         * Raised when any spring animation starts (zoom, pan, etc.).\n         *\n         * @event animation-start\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-start\" );\n        abortControlsAutoHide( viewer );\n    }\n\n    var isAnimationFinished = currentAnimating && !animated;\n\n    if ( isAnimationFinished ) {\n        THIS[ viewer.hash ].animating = false;\n    }\n\n    if ( animated || isAnimationFinished || THIS[ viewer.hash ].forceRedraw || viewer.world.needsDraw() ) {\n        drawWorld( viewer );\n        viewer._drawOverlays();\n        if( viewer.navigator ){\n          viewer.navigator.update( viewer.viewport );\n        }\n\n        THIS[ viewer.hash ].forceRedraw = false;\n\n        if (animated) {\n            /**\n             * Raised when any spring animation update occurs (zoom, pan, etc.),\n             * after the viewer has drawn the new location.\n             *\n             * @event animation\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            viewer.raiseEvent( \"animation\" );\n        }\n    }\n\n    if ( isAnimationFinished ) {\n        /**\n         * Raised when any spring animation ends (zoom, pan, etc.).\n         *\n         * @event animation-finish\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        viewer.raiseEvent( \"animation-finish\" );\n\n        if ( !THIS[ viewer.hash ].mouseInside ) {\n            beginControlsAutoHide( viewer );\n        }\n    }\n\n    THIS[ viewer.hash ].animating = animated;\n\n    //viewer.profiler.endUpdate();\n}\n\nfunction drawWorld( viewer ) {\n    viewer.imageLoader.clear();\n    viewer.drawer.clear();\n    viewer.world.draw();\n\n    /**\n     * <em>- Needs documentation -</em>\n     *\n     * @event update-viewport\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    viewer.raiseEvent( 'update-viewport', {} );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Navigation Controls\n///////////////////////////////////////////////////////////////////////////////\nfunction resolveUrl( prefix, url ) {\n    return prefix ? prefix + url : url;\n}\n\n\n\nfunction beginZoomingIn() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction beginZoomingOut() {\n    THIS[ this.hash ].lastZoomTime = $.now();\n    THIS[ this.hash ].zoomFactor = 1.0 / this.zoomPerSecond;\n    THIS[ this.hash ].zooming = true;\n    scheduleZoom( this );\n}\n\n\nfunction endZooming() {\n    THIS[ this.hash ].zooming = false;\n}\n\n\nfunction scheduleZoom( viewer ) {\n    $.requestAnimationFrame( $.delegate( viewer, doZoom ) );\n}\n\n\nfunction doZoom() {\n    var currentTime,\n        deltaTime,\n        adjustedFactor;\n\n    if ( THIS[ this.hash ].zooming && this.viewport) {\n        currentTime     = $.now();\n        deltaTime       = currentTime - THIS[ this.hash ].lastZoomTime;\n        adjustedFactor  = Math.pow( THIS[ this.hash ].zoomFactor, deltaTime / 1000 );\n\n        this.viewport.zoomBy( adjustedFactor );\n        this.viewport.applyConstraints();\n        THIS[ this.hash ].lastZoomTime = currentTime;\n        scheduleZoom( this );\n    }\n}\n\n\nfunction doSingleZoomIn() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            this.zoomPerClick / 1.0\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction doSingleZoomOut() {\n    if ( this.viewport ) {\n        THIS[ this.hash ].zooming = false;\n        this.viewport.zoomBy(\n            1.0 / this.zoomPerClick\n        );\n        this.viewport.applyConstraints();\n    }\n}\n\n\nfunction lightUp() {\n    if (this.buttonGroup) {\n        this.buttonGroup.emulateEnter();\n        this.buttonGroup.emulateLeave();\n    }\n}\n\n\nfunction onHome() {\n    if ( this.viewport ) {\n        this.viewport.goHome();\n    }\n}\n\n\nfunction onFullScreen() {\n    if ( this.isFullPage() && !$.isFullScreen() ) {\n        // Is fullPage but not fullScreen\n        this.setFullPage( false );\n    } else {\n        this.setFullScreen( !this.isFullPage() );\n    }\n    // correct for no mouseout event on change\n    if ( this.buttonGroup ) {\n        this.buttonGroup.emulateLeave();\n    }\n    this.fullPageButton.element.focus();\n    if ( this.viewport ) {\n        this.viewport.applyConstraints();\n    }\n}\n\nfunction onRotateLeft() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n\n        if ( this.viewport.flipped ){\n          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n        } else {\n          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n\nfunction onRotateRight() {\n    if ( this.viewport ) {\n        var currRotation = this.viewport.getRotation();\n\n        if ( this.viewport.flipped ){\n          currRotation = $.positiveModulo(currRotation - this.rotationIncrement, 360);\n        } else {\n          currRotation = $.positiveModulo(currRotation + this.rotationIncrement, 360);\n        }\n        this.viewport.setRotation(currRotation);\n    }\n}\n/**\n * Note: When pressed flip control button\n */\nfunction onFlip() {\n   this.viewport.toggleFlip();\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Navigator\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Navigator\n * @classdesc The Navigator provides a small view of the current image as fixed\n * while representing the viewport as a moving box serving as a frame\n * of reference in the larger viewport as to which portion of the image\n * is currently being examined.  The navigator's viewport can be interacted\n * with using the keyboard or the mouse.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Viewer\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n */\n$.Navigator = function( options ){\n\n    var viewer      = options.viewer,\n        _this = this,\n        viewerSize,\n        navigatorSize;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if( !options.id ){\n        options.id              = 'navigator-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.TOP_RIGHT,\n            attachToViewer:   true,\n            autoFade:         options.autoFade\n        };\n\n        if( options.position ){\n            if( 'BOTTOM_RIGHT' === options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_RIGHT;\n            } else if( 'BOTTOM_LEFT' === options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.BOTTOM_LEFT;\n            } else if( 'TOP_RIGHT' === options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_RIGHT;\n            } else if( 'TOP_LEFT' === options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.TOP_LEFT;\n            } else if( 'ABSOLUTE' === options.position ){\n               options.controlOptions.anchor = $.ControlAnchor.ABSOLUTE;\n               options.controlOptions.top = options.top;\n               options.controlOptions.left = options.left;\n               options.controlOptions.height = options.height;\n               options.controlOptions.width = options.width;\n            }\n        }\n\n    } else {\n        this.element            = document.getElementById( options.id );\n        options.controlOptions  = {\n            anchor:           $.ControlAnchor.NONE,\n            attachToViewer:   false,\n            autoFade:         false\n        };\n    }\n    this.element.id         = options.id;\n    this.element.className  += ' navigator';\n\n    options = $.extend( true, {\n        sizeRatio:     $.DEFAULT_SETTINGS.navigatorSizeRatio\n    }, options, {\n        element:                this.element,\n        tabIndex:               -1, // No keyboard navigation, omit from tab order\n        //These need to be overridden to prevent recursion since\n        //the navigator is a viewer and a viewer has a navigator\n        showNavigator:          false,\n        mouseNavEnabled:        false,\n        showNavigationControl:  false,\n        showSequenceControl:    false,\n        immediateRender:        true,\n        blendTime:              0,\n        animationTime:          0,\n        autoResize:             options.autoResize,\n        // prevent resizing the navigator from adding unwanted space around the image\n        minZoomImageRatio:      1.0,\n        background:             options.background,\n        opacity:                options.opacity,\n        borderColor:            options.borderColor,\n        displayRegionColor:     options.displayRegionColor\n    });\n\n    options.minPixelRatio = this.minPixelRatio = viewer.minPixelRatio;\n\n    $.setElementTouchActionNone( this.element );\n\n    this.borderWidth = 2;\n    //At some browser magnification levels the display regions lines up correctly, but at some there appears to\n    //be a one pixel gap.\n    this.fudge = new $.Point(1, 1);\n    this.totalBorderWidths = new $.Point(this.borderWidth * 2, this.borderWidth * 2).minus(this.fudge);\n\n\n    if ( options.controlOptions.anchor !== $.ControlAnchor.NONE ) {\n        (function( style, borderWidth ){\n            style.margin        = '0px';\n            style.border        = borderWidth + 'px solid ' + options.borderColor;\n            style.padding       = '0px';\n            style.background    = options.background;\n            style.opacity       = options.opacity;\n            style.overflow      = 'hidden';\n        }( this.element.style, this.borderWidth));\n    }\n\n    this.displayRegion           = $.makeNeutralElement( \"div\" );\n    this.displayRegion.id        = this.element.id + '-displayregion';\n    this.displayRegion.className = 'displayregion';\n\n    (function( style, borderWidth ){\n        style.position      = 'relative';\n        style.top           = '0px';\n        style.left          = '0px';\n        style.fontSize      = '0px';\n        style.overflow      = 'hidden';\n        style.border        = borderWidth + 'px solid ' + options.displayRegionColor;\n        style.margin        = '0px';\n        style.padding       = '0px';\n        //TODO: IE doesn't like this property being set\n        //try{ style.outline  = '2px auto #909'; }catch(e){/*ignore*/}\n\n        style.background    = 'transparent';\n\n        // We use square bracket notation on the statement below, because float is a keyword.\n        // This is important for the Google Closure compiler, if nothing else.\n        /*jshint sub:true */\n        style['float']      = 'left'; //Webkit\n\n        style.cssFloat      = 'left'; //Firefox\n        style.styleFloat    = 'left'; //IE\n        style.zIndex        = 999999999;\n        style.cursor        = 'default';\n    }( this.displayRegion.style, this.borderWidth ));\n    $.setElementPointerEventsNone( this.displayRegion );\n    $.setElementTouchActionNone( this.displayRegion );\n\n    this.displayRegionContainer = $.makeNeutralElement(\"div\");\n    this.displayRegionContainer.id = this.element.id + '-displayregioncontainer';\n    this.displayRegionContainer.className = \"displayregioncontainer\";\n    this.displayRegionContainer.style.width = \"100%\";\n    this.displayRegionContainer.style.height = \"100%\";\n    $.setElementPointerEventsNone( this.displayRegionContainer );\n    $.setElementTouchActionNone( this.displayRegionContainer );\n\n    viewer.addControl(\n        this.element,\n        options.controlOptions\n    );\n\n    this._resizeWithViewer = options.controlOptions.anchor !== $.ControlAnchor.ABSOLUTE &&\n        options.controlOptions.anchor !== $.ControlAnchor.NONE;\n\n    if (options.width && options.height) {\n        this.setWidth(options.width);\n        this.setHeight(options.height);\n    } else if ( this._resizeWithViewer ) {\n        viewerSize = $.getElementSize( viewer.element );\n        this.element.style.height = Math.round( viewerSize.y * options.sizeRatio ) + 'px';\n        this.element.style.width  = Math.round( viewerSize.x * options.sizeRatio ) + 'px';\n        this.oldViewerSize = viewerSize;\n        navigatorSize = $.getElementSize( this.element );\n        this.elementArea = navigatorSize.x * navigatorSize.y;\n    }\n\n    this.oldContainerSize = new $.Point( 0, 0 );\n\n    $.Viewer.apply( this, [ options ] );\n\n    this.displayRegionContainer.appendChild(this.displayRegion);\n    this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);\n\n    function rotate(degrees) {\n        _setTransformRotate(_this.displayRegionContainer, degrees);\n        _setTransformRotate(_this.displayRegion, -degrees);\n        _this.viewport.setRotation(degrees);\n    }\n    if (options.navigatorRotate) {\n        var degrees = options.viewer.viewport ?\n            options.viewer.viewport.getRotation() :\n            options.viewer.degrees || 0;\n\n        rotate(degrees);\n        options.viewer.addHandler(\"rotate\", function (args) {\n            rotate(args.degrees);\n        });\n    }\n\n\n    // Remove the base class' (Viewer's) innerTracker and replace it with our own\n    this.innerTracker.destroy();\n    this.innerTracker = new $.MouseTracker({\n        userData:        'Navigator.innerTracker',\n        element:         this.element, //this.canvas,\n        dragHandler:     $.delegate( this, onCanvasDrag ),\n        clickHandler:    $.delegate( this, onCanvasClick ),\n        releaseHandler:  $.delegate( this, onCanvasRelease ),\n        scrollHandler:   $.delegate( this, onCanvasScroll ),\n        preProcessEventHandler: function (eventInfo) {\n            if (eventInfo.eventType === 'wheel') {\n                //don't scroll the page up and down if the user is scrolling\n                //in the navigator\n                eventInfo.preventDefault = true;\n            }\n        }\n    });\n    this.outerTracker.userData = 'Navigator.outerTracker';\n\n    // this.innerTracker is attached to this.element...we need to allow pointer\n    //   events to pass through this Viewer's canvas/container elements so implicit\n    //   pointer capture works on touch devices\n    //TODO an alternative is to attach the new MouseTracker to this.canvas...not\n    //   sure why it isn't already (see MouseTracker constructor call above)\n    $.setElementPointerEventsNone( this.canvas );\n    $.setElementPointerEventsNone( this.container );\n\n    this.addHandler(\"reset-size\", function() {\n        if (_this.viewport) {\n            _this.viewport.goHome(true);\n        }\n    });\n\n    viewer.world.addHandler(\"item-index-change\", function(event) {\n        window.setTimeout(function(){\n            var item = _this.world.getItemAt(event.previousIndex);\n            _this.world.setItemIndex(item, event.newIndex);\n        }, 1);\n    });\n\n    viewer.world.addHandler(\"remove-item\", function(event) {\n        var theirItem = event.item;\n        var myItem = _this._getMatchingItem(theirItem);\n        if (myItem) {\n            _this.world.removeItem(myItem);\n        }\n    });\n\n    this.update(viewer.viewport);\n};\n\n$.extend( $.Navigator.prototype, $.EventSource.prototype, $.Viewer.prototype, /** @lends OpenSeadragon.Navigator.prototype */{\n\n    /**\n     * Used to notify the navigator when its size has changed.\n     * Especially useful when {@link OpenSeadragon.Options}.navigatorAutoResize is set to false and the navigator is resizable.\n     * @function\n     */\n    updateSize: function () {\n        if ( this.viewport ) {\n            var containerSize = new $.Point(\n                    (this.container.clientWidth === 0 ? 1 : this.container.clientWidth),\n                    (this.container.clientHeight === 0 ? 1 : this.container.clientHeight)\n                );\n\n            if ( !containerSize.equals( this.oldContainerSize ) ) {\n                this.viewport.resize( containerSize, true );\n                this.viewport.goHome(true);\n                this.oldContainerSize = containerSize;\n                this.drawer.clear();\n                this.world.draw();\n            }\n        }\n    },\n\n    /**\n     * Explicitly sets the width of the navigator, in web coordinates. Disables automatic resizing.\n     * @param {Number|String} width - the new width, either a number of pixels or a CSS string, such as \"100%\"\n     */\n    setWidth: function(width) {\n        this.width = width;\n        this.element.style.width = typeof (width) === \"number\" ? (width + 'px') : width;\n        this._resizeWithViewer = false;\n    },\n\n    /**\n     * Explicitly sets the height of the navigator, in web coordinates. Disables automatic resizing.\n     * @param {Number|String} height - the new height, either a number of pixels or a CSS string, such as \"100%\"\n     */\n    setHeight: function(height) {\n        this.height = height;\n        this.element.style.height = typeof (height) === \"number\" ? (height + 'px') : height;\n        this._resizeWithViewer = false;\n    },\n\n    /**\n      * Flip navigator element\n      * @param {Boolean} state - Flip state to set.\n      */\n    setFlip: function(state) {\n      this.viewport.setFlip(state);\n\n      this.setDisplayTransform(this.viewer.viewport.getFlip() ? \"scale(-1,1)\" : \"scale(1,1)\");\n      return this;\n    },\n\n    setDisplayTransform: function(rule) {\n      setElementTransform(this.displayRegion, rule);\n      setElementTransform(this.canvas, rule);\n      setElementTransform(this.element, rule);\n    },\n\n    /**\n     * Used to update the navigator minimap's viewport rectangle when a change in the viewer's viewport occurs.\n     * @function\n     * @param {OpenSeadragon.Viewport} The viewport this navigator is tracking.\n     */\n    update: function( viewport ) {\n\n        var viewerSize,\n            newWidth,\n            newHeight,\n            bounds,\n            topleft,\n            bottomright;\n\n        viewerSize = $.getElementSize( this.viewer.element );\n        if ( this._resizeWithViewer && viewerSize.x && viewerSize.y && !viewerSize.equals( this.oldViewerSize ) ) {\n            this.oldViewerSize = viewerSize;\n\n            if ( this.maintainSizeRatio || !this.elementArea) {\n                newWidth  = viewerSize.x * this.sizeRatio;\n                newHeight = viewerSize.y * this.sizeRatio;\n            } else {\n                newWidth = Math.sqrt(this.elementArea * (viewerSize.x / viewerSize.y));\n                newHeight = this.elementArea / newWidth;\n            }\n\n            this.element.style.width  = Math.round( newWidth ) + 'px';\n            this.element.style.height = Math.round( newHeight ) + 'px';\n\n            if (!this.elementArea) {\n                this.elementArea = newWidth * newHeight;\n            }\n\n            this.updateSize();\n        }\n\n        if (viewport && this.viewport) {\n            bounds      = viewport.getBoundsNoRotate(true);\n            topleft     = this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(), false);\n            bottomright = this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(), false)\n                .minus( this.totalBorderWidths );\n\n            //update style for navigator-box\n            var style = this.displayRegion.style;\n            style.display = this.world.getItemCount() ? 'block' : 'none';\n\n            style.top    = Math.round( topleft.y ) + 'px';\n            style.left   = Math.round( topleft.x ) + 'px';\n\n            var width = Math.abs( topleft.x - bottomright.x );\n            var height = Math.abs( topleft.y - bottomright.y );\n            // make sure width and height are non-negative so IE doesn't throw\n            style.width  = Math.round( Math.max( width, 0 ) ) + 'px';\n            style.height = Math.round( Math.max( height, 0 ) ) + 'px';\n        }\n\n    },\n\n    // overrides Viewer.addTiledImage\n    addTiledImage: function(options) {\n        var _this = this;\n\n        var original = options.originalTiledImage;\n        delete options.original;\n\n        var optionsClone = $.extend({}, options, {\n            success: function(event) {\n                var myItem = event.item;\n                myItem._originalForNavigator = original;\n                _this._matchBounds(myItem, original, true);\n                _this._matchOpacity(myItem, original);\n                _this._matchCompositeOperation(myItem, original);\n\n                function matchBounds() {\n                    _this._matchBounds(myItem, original);\n                }\n\n                function matchOpacity() {\n                    _this._matchOpacity(myItem, original);\n                }\n\n                function matchCompositeOperation() {\n                    _this._matchCompositeOperation(myItem, original);\n                }\n\n                original.addHandler('bounds-change', matchBounds);\n                original.addHandler('clip-change', matchBounds);\n                original.addHandler('opacity-change', matchOpacity);\n                original.addHandler('composite-operation-change', matchCompositeOperation);\n            }\n        });\n\n        return $.Viewer.prototype.addTiledImage.apply(this, [optionsClone]);\n    },\n\n    destroy: function() {\n        return $.Viewer.prototype.destroy.apply(this);\n    },\n\n    // private\n    _getMatchingItem: function(theirItem) {\n        var count = this.world.getItemCount();\n        var item;\n        for (var i = 0; i < count; i++) {\n            item = this.world.getItemAt(i);\n            if (item._originalForNavigator === theirItem) {\n                return item;\n            }\n        }\n\n        return null;\n    },\n\n    // private\n    _matchBounds: function(myItem, theirItem, immediately) {\n        var bounds = theirItem.getBoundsNoRotate();\n        myItem.setPosition(bounds.getTopLeft(), immediately);\n        myItem.setWidth(bounds.width, immediately);\n        myItem.setRotation(theirItem.getRotation(), immediately);\n        myItem.setClip(theirItem.getClip());\n        myItem.setFlip(theirItem.getFlip());\n    },\n\n    // private\n    _matchOpacity: function(myItem, theirItem) {\n        myItem.setOpacity(theirItem.opacity);\n    },\n\n    // private\n    _matchCompositeOperation: function(myItem, theirItem) {\n        myItem.setCompositeOperation(theirItem.compositeOperation);\n    }\n});\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasClick( event ) {\n  var canvasClickEventArgs = {\n    tracker: event.eventSource,\n    position: event.position,\n    quick: event.quick,\n    shift: event.shift,\n    originalEvent: event.originalEvent,\n    preventDefaultAction: false\n  };\n  /**\n   * Raised when a click event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n   *\n   * @event navigator-click\n   * @memberof OpenSeadragon.Viewer\n   * @type {object}\n   * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n   * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n   * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n   * @property {Boolean} quick - True only if the clickDistThreshold and clickTimeThreshold are both passed. Useful for differentiating between clicks and drags.\n   * @property {Boolean} shift - True if the shift key was pressed during this event.\n   * @property {Object} originalEvent - The original DOM event.\n   * @property {?Object} userData - Arbitrary subscriber-defined object.\n   * @property {Boolean} preventDefaultAction - Set to true to prevent default click to zoom behaviour. Default: false.\n   */\n\n   this.viewer.raiseEvent('navigator-click', canvasClickEventArgs);\n\n   if ( !canvasClickEventArgs.preventDefaultAction && event.quick && this.viewer.viewport && (this.panVertical || this.panHorizontal)) {\n    if(this.viewer.viewport.flipped) {\n      event.position.x = this.viewport.getContainerSize().x - event.position.x;\n    }\n    var target = this.viewport.pointFromPixel(event.position);\n    if (!this.panVertical) {\n      // perform only horizonal pan\n      target.y = this.viewer.viewport.getCenter(true).y;\n    } else if (!this.panHorizontal) {\n      // perform only vertical pan\n      target.x = this.viewer.viewport.getCenter(true).x;\n    }\n    this.viewer.viewport.panTo(target);\n    this.viewer.viewport.applyConstraints();\n  }\n\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasDrag( event ) {\n    var canvasDragEventArgs = {\n      tracker: event.eventSource,\n      position: event.position,\n      delta: event.delta,\n      speed: event.speed,\n      direction: event.direction,\n      shift: event.shift,\n      originalEvent: event.originalEvent,\n      preventDefaultAction: false\n    };\n    /**\n     * Raised when a drag event occurs on the {@link OpenSeadragon.Viewer#navigator} element.\n     *\n     * @event navigator-drag\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {OpenSeadragon.Point} delta - The x,y components of the difference between start drag and end drag.\n     * @property {Number} speed - Current computed speed, in pixels per second.\n     * @property {Number} direction - Current computed direction, expressed as an angle counterclockwise relative to the positive X axis (-pi to pi, in radians). Only valid if speed > 0.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     * @property {Boolean} preventDefaultAction - Set to true to prevent default drag to pan behaviour. Default: false.\n     */\n     this.viewer.raiseEvent('navigator-drag', canvasDragEventArgs);\n\n     if ( !canvasDragEventArgs.preventDefaultAction && this.viewer.viewport ) {\n       if( !this.panHorizontal ){\n            event.delta.x = 0;\n        }\n        if( !this.panVertical ){\n            event.delta.y = 0;\n        }\n\n        if(this.viewer.viewport.flipped){\n            event.delta.x = -event.delta.x;\n        }\n\n        this.viewer.viewport.panBy(\n            this.viewport.deltaPointsFromPixels(\n                event.delta\n            )\n        );\n        if( this.viewer.constrainDuringPan ){\n            this.viewer.viewport.applyConstraints();\n        }\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasRelease( event ) {\n    if ( event.insideElementPressed && this.viewer.viewport ) {\n        this.viewer.viewport.applyConstraints();\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onCanvasScroll( event ) {\n    var eventArgs = {\n        tracker: event.eventSource,\n        position: event.position,\n        scroll: event.scroll,\n        shift: event.shift,\n        originalEvent: event.originalEvent,\n        preventDefault: event.preventDefault\n    };\n\n    /**\n     * Raised when a scroll event occurs on the {@link OpenSeadragon.Viewer#navigator} element (mouse wheel, touch pinch, etc.).\n     *\n     * @event navigator-scroll\n     * @memberof OpenSeadragon.Viewer\n     * @type {object}\n     * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n     * @property {OpenSeadragon.MouseTracker} tracker - A reference to the MouseTracker which originated this event.\n     * @property {OpenSeadragon.Point} position - The position of the event relative to the tracked element.\n     * @property {Number} scroll - The scroll delta for the event.\n     * @property {Boolean} shift - True if the shift key was pressed during this event.\n     * @property {Object} originalEvent - The original DOM event.\n     * @property {Boolean} preventDefault - Set to true to prevent the default user-agent's handling of the wheel event.\n     * @property {?Object} userData - Arbitrary subscriber-defined object.\n     */\n    this.viewer.raiseEvent( 'navigator-scroll', eventArgs );\n\n    event.preventDefault = eventArgs.preventDefault;\n}\n\n/**\n    * @function\n    * @private\n    * @param {Object} element\n    * @param {Number} degrees\n    */\nfunction _setTransformRotate( element, degrees ) {\n  setElementTransform(element, \"rotate(\" + degrees + \"deg)\");\n}\n\nfunction setElementTransform( element, rule ) {\n  element.style.webkitTransform = rule;\n  element.style.mozTransform = rule;\n  element.style.msTransform = rule;\n  element.style.oTransform = rule;\n  element.style.transform = rule;\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - getString/setString\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n//TODO: I guess this is where the i18n needs to be reimplemented.  I'll look\n//      into existing patterns for i18n in javascript but i think that mimicking\n//      pythons gettext might be a reasonable approach.\nvar I18N = {\n    Errors: {\n        Dzc:            \"Sorry, we don't support Deep Zoom Collections!\",\n        Dzi:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        Xml:            \"Hmm, this doesn't appear to be a valid Deep Zoom Image.\",\n        ImageFormat:    \"Sorry, we don't support {0}-based Deep Zoom Images.\",\n        Security:       \"It looks like a security restriction stopped us from \" +\n                        \"loading this Deep Zoom Image.\",\n        Status:         \"This space unintentionally left blank ({0} {1}).\",\n        OpenFailed:     \"Unable to open {0}: {1}\"\n    },\n\n    Tooltips: {\n        FullPage:       \"Toggle full page\",\n        Home:           \"Go home\",\n        ZoomIn:         \"Zoom in\",\n        ZoomOut:        \"Zoom out\",\n        NextPage:       \"Next page\",\n        PreviousPage:   \"Previous page\",\n        RotateLeft:     \"Rotate left\",\n        RotateRight:    \"Rotate right\",\n        Flip:           \"Flip Horizontally\"\n    }\n};\n\n$.extend( $, /** @lends OpenSeadragon */{\n\n    /**\n     * @function\n     * @param {String} property\n     */\n    getString: function( prop ) {\n\n        var props   = prop.split('.'),\n            string  = null,\n            args    = arguments,\n            container = I18N,\n            i;\n\n        for (i = 0; i < props.length - 1; i++) {\n            // in case not a subproperty\n            container = container[ props[ i ] ] || {};\n        }\n        string = container[ props[ i ] ];\n\n        if ( typeof ( string ) !== \"string\" ) {\n            $.console.error( \"Untranslated source string:\", prop );\n            string = \"\"; // FIXME: this breaks gettext()-style convention, which would return source\n        }\n\n        return string.replace(/\\{\\d+\\}/g, function(capture) {\n            var i = parseInt( capture.match( /\\d+/ ), 10 ) + 1;\n            return i < args.length ?\n                args[ i ] :\n                \"\";\n        });\n    },\n\n    /**\n     * @function\n     * @param {String} property\n     * @param {*} value\n     */\n    setString: function( prop, value ) {\n\n        var props     = prop.split('.'),\n            container = I18N,\n            i;\n\n        for ( i = 0; i < props.length - 1; i++ ) {\n            if ( !container[ props[ i ] ] ) {\n                container[ props[ i ] ] = {};\n            }\n            container = container[ props[ i ] ];\n        }\n\n        container[ props[ i ] ] = value;\n    }\n\n});\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Point\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Point\n * @classdesc A Point is really used as a 2-dimensional vector, equally useful for\n * representing a point on a plane, or the height and width of a plane\n * not requiring any other frame of reference.\n *\n * @memberof OpenSeadragon\n * @param {Number} [x] The vector component 'x'. Defaults to the origin at 0.\n * @param {Number} [y] The vector component 'y'. Defaults to the origin at 0.\n */\n$.Point = function( x, y ) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Point#\n     */\n    this.x = typeof ( x ) === \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Point#\n     */\n    this.y = typeof ( y ) === \"number\" ? y : 0;\n};\n\n/** @lends OpenSeadragon.Point.prototype */\n$.Point.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} a duplicate of this Point\n     */\n    clone: function() {\n        return new $.Point(this.x, this.y);\n    },\n\n    /**\n     * Add another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to add vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the sum of the\n     *  vector components\n     */\n    plus: function( point ) {\n        return new $.Point(\n            this.x + point.x,\n            this.y + point.y\n        );\n    },\n\n    /**\n     * Subtract another Point to this point and return a new Point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to subtract vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the subtraction of the\n     *  vector components\n     */\n    minus: function( point ) {\n        return new $.Point(\n            this.x - point.x,\n            this.y - point.y\n        );\n    },\n\n    /**\n     * Multiply this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to multiply vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the multiplication\n     *  of the vector components by the factor\n     */\n    times: function( factor ) {\n        return new $.Point(\n            this.x * factor,\n            this.y * factor\n        );\n    },\n\n    /**\n     * Divide this point by a factor and return a new Point.\n     * @function\n     * @param {Number} factor The factor to divide vector components.\n     * @returns {OpenSeadragon.Point} A new point representing the division of the\n     *  vector components by the factor\n     */\n    divide: function( factor ) {\n        return new $.Point(\n            this.x / factor,\n            this.y / factor\n        );\n    },\n\n    /**\n     * Compute the opposite of this point and return a new Point.\n     * @function\n     * @returns {OpenSeadragon.Point} A new point representing the opposite of the\n     *  vector components\n     */\n    negate: function() {\n        return new $.Point( -this.x, -this.y );\n    },\n\n    /**\n     * Compute the distance between this point and another point.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compute the distance with.\n     * @returns {Number} The distance between the 2 points\n     */\n    distanceTo: function( point ) {\n        return Math.sqrt(\n            Math.pow( this.x - point.x, 2 ) +\n            Math.pow( this.y - point.y, 2 )\n        );\n    },\n\n    /**\n     * Compute the squared distance between this point and another point.\n     * Useful for optimizing things like comparing distances.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compute the squared distance with.\n     * @returns {Number} The squared distance between the 2 points\n     */\n    squaredDistanceTo: function( point ) {\n        return Math.pow( this.x - point.x, 2 ) +\n            Math.pow( this.y - point.y, 2 );\n    },\n\n    /**\n     * Apply a function to each coordinate of this point and return a new point.\n     * @function\n     * @param {function} func The function to apply to each coordinate.\n     * @returns {OpenSeadragon.Point} A new point with the coordinates computed\n     * by the specified function\n     */\n    apply: function( func ) {\n        return new $.Point( func( this.x ), func( this.y ) );\n    },\n\n    /**\n     * Check if this point is equal to another one.\n     * @function\n     * @param {OpenSeadragon.Point} point The point to compare this point with.\n     * @returns {Boolean} true if they are equal, false otherwise.\n     */\n    equals: function( point ) {\n        return (\n            point instanceof $.Point\n        ) && (\n            this.x === point.x\n        ) && (\n            this.y === point.y\n        );\n    },\n\n    /**\n     * Rotates the point around the specified pivot\n     * From http://stackoverflow.com/questions/4465931/rotate-rectangle-around-a-point\n     * @function\n     * @param {Number} degress to rotate around the pivot.\n     * @param {OpenSeadragon.Point} [pivot=(0,0)] Point around which to rotate.\n     * Defaults to the origin.\n     * @returns {OpenSeadragon.Point}. A new point representing the point rotated around the specified pivot\n     */\n    rotate: function (degrees, pivot) {\n        pivot = pivot || new $.Point(0, 0);\n        var cos;\n        var sin;\n        // Avoid float computations when possible\n        if (degrees % 90 === 0) {\n            var d = $.positiveModulo(degrees, 360);\n            switch (d) {\n                case 0:\n                    cos = 1;\n                    sin = 0;\n                    break;\n                case 90:\n                    cos = 0;\n                    sin = 1;\n                    break;\n                case 180:\n                    cos = -1;\n                    sin = 0;\n                    break;\n                case 270:\n                    cos = 0;\n                    sin = -1;\n                    break;\n            }\n        } else {\n            var angle = degrees * Math.PI / 180.0;\n            cos = Math.cos(angle);\n            sin = Math.sin(angle);\n        }\n        var x = cos * (this.x - pivot.x) - sin * (this.y - pivot.y) + pivot.x;\n        var y = sin * (this.x - pivot.x) + cos * (this.y - pivot.y) + pivot.y;\n        return new $.Point(x, y);\n    },\n\n    /**\n     * Convert this point to a string in the format (x,y) where x and y are\n     * rounded to the nearest integer.\n     * @function\n     * @returns {String} A string representation of this point.\n     */\n    toString: function() {\n        return \"(\" + (Math.round(this.x * 100) / 100) + \",\" + (Math.round(this.y * 100) / 100) + \")\";\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class TileSource\n * @classdesc The TileSource contains the most basic implementation required to create a\n * smooth transition between layers in an image pyramid. It has only a single key\n * interface that must be implemented to complete its key functionality:\n * 'getTileUrl'.  It also has several optional interfaces that can be\n * implemented if a new TileSource wishes to support configuration via a simple\n * object or array ('configure') and if the tile source supports or requires\n * configuration via retrieval of a document on the network ala AJAX or JSONP,\n * ('getImageInfo').\n * <br/>\n * By default the image pyramid is split into N layers where the image's longest\n * side in M (in pixels), where N is the smallest integer which satisfies\n *      <strong>2^(N+1) >= M</strong>.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n *      You can either specify a URL, or literally define the TileSource (by specifying\n *      width, height, tileSize, tileOverlap, minLevel, and maxLevel). For the former,\n *      the extending class is expected to implement 'getImageInfo' and 'configure'.\n *      For the latter, the construction is assumed to occur through\n *      the extending classes implementation of 'configure'.\n * @param {String} [options.url]\n *      The URL for the data necessary for this TileSource.\n * @param {String} [options.referenceStripThumbnailUrl]\n *      The URL for a thumbnail image to be used by the reference strip\n * @param {Function} [options.success]\n *      A function to be called upon successful creation.\n * @param {Boolean} [options.ajaxWithCredentials]\n *      If this TileSource needs to make an AJAX call, this specifies whether to set\n *      the XHR's withCredentials (for accessing secure data).\n * @param {Object} [options.ajaxHeaders]\n *      A set of headers to include in AJAX requests.\n * @param {Boolean} [options.splitHashDataForPost]\n *      First occurrence of '#' in the options.url is used to split URL\n *      and the latter part is treated as POST data (applies to getImageInfo(...))\n * @param {Number} [options.width]\n *      Width of the source image at max resolution in pixels.\n * @param {Number} [options.height]\n *      Height of the source image at max resolution in pixels.\n * @param {Number} [options.tileSize]\n *      The size of the tiles to assumed to make up each pyramid layer in pixels.\n *      Tile size determines the point at which the image pyramid must be\n *      divided into a matrix of smaller images.\n *      Use options.tileWidth and options.tileHeight to support non-square tiles.\n * @param {Number} [options.tileWidth]\n *      The width of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileHeight]\n *      The height of the tiles to assumed to make up each pyramid layer in pixels.\n * @param {Number} [options.tileOverlap]\n *      The number of pixels each tile is expected to overlap touching tiles.\n * @param {Number} [options.minLevel]\n *      The minimum level to attempt to load.\n * @param {Number} [options.maxLevel]\n *      The maximum level to attempt to load.\n */\n$.TileSource = function( width, height, tileSize, tileOverlap, minLevel, maxLevel ) {\n    var _this = this;\n\n    var args = arguments,\n        options,\n        i;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: args[0],\n            height: args[1],\n            tileSize: args[2],\n            tileOverlap: args[3],\n            minLevel: args[4],\n            maxLevel: args[5]\n        };\n    }\n\n    //Tile sources supply some events, namely 'ready' when they must be configured\n    //by asynchronously fetching their configuration data.\n    $.EventSource.call( this );\n\n    //we allow options to override anything we don't treat as\n    //required via idiomatic options or which is functionally\n    //set depending on the state of the readiness of this tile\n    //source\n    $.extend( true, this, options );\n\n    if (!this.success) {\n        //Any functions that are passed as arguments are bound to the ready callback\n        for ( i = 0; i < arguments.length; i++ ) {\n            if ( $.isFunction( arguments[ i ] ) ) {\n                this.success = arguments[ i ];\n                //only one callback per constructor\n                break;\n            }\n        }\n    }\n\n    if (this.success) {\n        this.addHandler( 'ready', function ( event ) {\n            _this.success( event );\n        } );\n    }\n\n    /**\n     * Ratio of width to height\n     * @member {Number} aspectRatio\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * Vector storing x and y dimensions ( width and height respectively ).\n     * @member {OpenSeadragon.Point} dimensions\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The overlap in pixels each tile shares with its adjacent neighbors.\n     * @member {Number} tileOverlap\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The minimum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     * The maximum pyramid level this tile source supports or should attempt to load.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.TileSource#\n     */\n    /**\n     *\n     * @member {Boolean} ready\n     * @memberof OpenSeadragon.TileSource#\n     */\n\n    if( 'string' === $.type( arguments[ 0 ] ) ){\n        this.url = arguments[0];\n    }\n\n    if (this.url) {\n        //in case the getImageInfo method is overridden and/or implies an\n        //async mechanism set some safe defaults first\n        this.aspectRatio = 1;\n        this.dimensions  = new $.Point( 10, 10 );\n        this._tileWidth  = 0;\n        this._tileHeight = 0;\n        this.tileOverlap = 0;\n        this.minLevel    = 0;\n        this.maxLevel    = 0;\n        this.ready       = false;\n        //configuration via url implies the extending class\n        //implements and 'configure'\n        this.getImageInfo( this.url );\n\n    } else {\n\n        //explicit configuration via positional args in constructor\n        //or the more idiomatic 'options' object\n        this.ready       = true;\n        this.aspectRatio = (options.width && options.height) ?\n            (options.width / options.height) : 1;\n        this.dimensions  = new $.Point( options.width, options.height );\n\n        if ( this.tileSize ){\n            this._tileWidth = this._tileHeight = this.tileSize;\n            delete this.tileSize;\n        } else {\n            if( this.tileWidth ){\n                // We were passed tileWidth in options, but we want to rename it\n                // with a leading underscore to make clear that it is not safe to directly modify it\n                this._tileWidth = this.tileWidth;\n                delete this.tileWidth;\n            } else {\n                this._tileWidth = 0;\n            }\n\n            if( this.tileHeight ){\n                // See note above about renaming this.tileWidth\n                this._tileHeight = this.tileHeight;\n                delete this.tileHeight;\n            } else {\n                this._tileHeight = 0;\n            }\n        }\n\n        this.tileOverlap = options.tileOverlap ? options.tileOverlap : 0;\n        this.minLevel    = options.minLevel ? options.minLevel : 0;\n        this.maxLevel    = ( undefined !== options.maxLevel && null !== options.maxLevel ) ?\n            options.maxLevel : (\n                ( options.width && options.height ) ? Math.ceil(\n                    Math.log( Math.max( options.width, options.height ) ) /\n                    Math.log( 2 )\n                ) : 0\n            );\n        if( this.success && $.isFunction( this.success ) ){\n            this.success( this );\n        }\n    }\n\n\n};\n\n/** @lends OpenSeadragon.TileSource.prototype */\n$.TileSource.prototype = {\n\n    getTileSize: function( level ) {\n        $.console.error(\n            \"[TileSource.getTileSize] is deprecated. \" +\n            \"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead\"\n        );\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileWidth for a given level.\n     * Subclasses should override this if tileWidth can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileWidth directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n        if (!this._tileWidth) {\n            return this.getTileSize(level);\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for a given level.\n     * Subclasses should override this if tileHeight can be different at different levels\n     *   such as in IIIFTileSource.  Code should use this function rather than reading\n     *   from ._tileHeight directly.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n        if (!this._tileHeight) {\n            return this.getTileSize(level);\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * Set the maxLevel to the given level, and perform the memoization of\n     * getLevelScale with the new maxLevel. This function can be useful if the\n     * memoization is required before the first call of getLevelScale, or both\n     * memoized getLevelScale and maxLevel should be changed accordingly.\n     * @function\n     * @param {Number} level\n     */\n    setMaxLevel: function( level ) {\n        this.maxLevel = level;\n        this._memoizeLevelScale();\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function( level ) {\n        // if getLevelScale is not memoized, we generate the memoized version\n        // at the first call and return the result\n        this._memoizeLevelScale();\n        return this.getLevelScale( level );\n    },\n\n    // private\n    _memoizeLevelScale: function() {\n        // see https://github.com/openseadragon/openseadragon/issues/22\n        // we use the tilesources implementation of getLevelScale to generate\n        // a memoized re-implementation\n        var levelScaleCache = {},\n            i;\n        for( i = 0; i <= this.maxLevel; i++ ){\n            levelScaleCache[ i ] = 1 / Math.pow(2, this.maxLevel - i);\n        }\n        this.getLevelScale = function( _level ){\n            return levelScaleCache[ _level ];\n        };\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level ),\n            x = Math.ceil( scale * this.dimensions.x / this.getTileWidth(level) ),\n            y = Math.ceil( scale * this.dimensions.y / this.getTileHeight(level) );\n\n        return new $.Point( x, y );\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getPixelRatio: function( level ) {\n        var imageSizeScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            rx = 1.0 / imageSizeScaled.x * $.pixelDensityRatio,\n            ry = 1.0 / imageSizeScaled.y * $.pixelDensityRatio;\n\n        return new $.Point(rx, ry);\n    },\n\n\n    /**\n     * @function\n     * @returns {Number} The highest level in this tile source that can be contained in a single tile.\n     */\n    getClosestLevel: function() {\n        var i,\n            tiles;\n\n        for (i = this.minLevel + 1; i <= this.maxLevel; i++){\n            tiles = this.getNumTiles(i);\n            if (tiles.x > 1 || tiles.y > 1) {\n                break;\n            }\n        }\n\n        return i - 1;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function(level, point) {\n        var validPoint = point.x >= 0 && point.x <= 1 &&\n            point.y >= 0 && point.y <= 1 / this.aspectRatio;\n        $.console.assert(validPoint, \"[TileSource.getTileAtPoint] must be called with a valid point.\");\n\n        var widthScaled = this.dimensions.x * this.getLevelScale(level);\n        var pixelX = point.x * widthScaled;\n        var pixelY = point.y * widthScaled;\n\n        var x = Math.floor(pixelX / this.getTileWidth(level));\n        var y = Math.floor(pixelY / this.getTileHeight(level));\n\n        // When point.x == 1 or point.y == 1 / this.aspectRatio we want to\n        // return the last tile of the row/column\n        if (point.x >= 1) {\n            x = this.getNumTiles(level).x - 1;\n        }\n        var EPSILON = 1e-15;\n        if (point.y >= 1 / this.aspectRatio - EPSILON) {\n            y = this.getNumTiles(level).y - 1;\n        }\n\n        return new $.Point(x, y);\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Boolean} [isSource=false] Whether to return the source bounds of the tile.\n     * @returns {OpenSeadragon.Rect} Either where this tile fits (in normalized coordinates) or the\n     * portion of the tile to use as the source of the drawing operation (in pixels), depending on\n     * the isSource parameter.\n     */\n    getTileBounds: function( level, x, y, isSource ) {\n        var dimensionsScaled = this.dimensions.times( this.getLevelScale( level ) ),\n            tileWidth = this.getTileWidth(level),\n            tileHeight = this.getTileHeight(level),\n            px = ( x === 0 ) ? 0 : tileWidth * x - this.tileOverlap,\n            py = ( y === 0 ) ? 0 : tileHeight * y - this.tileOverlap,\n            sx = tileWidth + ( x === 0 ? 1 : 2 ) * this.tileOverlap,\n            sy = tileHeight + ( y === 0 ? 1 : 2 ) * this.tileOverlap,\n            scale = 1.0 / dimensionsScaled.x;\n\n        sx = Math.min( sx, dimensionsScaled.x - px );\n        sy = Math.min( sy, dimensionsScaled.y - py );\n\n        if (isSource) {\n            return new $.Rect(0, 0, sx, sy);\n        }\n\n        return new $.Rect( px * scale, py * scale, sx * scale, sy * scale );\n    },\n\n\n    /**\n     * Responsible for retrieving, and caching the\n     * image metadata pertinent to this TileSources implementation.\n     * @function\n     * @param {String} url\n     * @throws {Error}\n     */\n    getImageInfo: function( url ) {\n        var _this = this,\n            callbackName,\n            callback,\n            readySource,\n            options,\n            urlParts,\n            filename,\n            lastDot;\n\n\n        if( url ) {\n            urlParts = url.split( '/' );\n            filename = urlParts[ urlParts.length - 1 ];\n            lastDot  = filename.lastIndexOf( '.' );\n            if ( lastDot > -1 ) {\n                urlParts[ urlParts.length - 1 ] = filename.slice( 0, lastDot );\n            }\n        }\n\n        var postData = null;\n        if (this.splitHashDataForPost) {\n            var hashIdx = url.indexOf(\"#\");\n            if (hashIdx !== -1) {\n                postData = url.substring(hashIdx + 1);\n                url = url.substr(0, hashIdx);\n            }\n        }\n\n        callback = function( data ){\n            if( typeof (data) === \"string\" ) {\n                data = $.parseXml( data );\n            }\n            var $TileSource = $.TileSource.determineType( _this, data, url );\n            if ( !$TileSource ) {\n                /**\n                 * Raised when an error occurs loading a TileSource.\n                 *\n                 * @event open-failed\n                 * @memberof OpenSeadragon.TileSource\n                 * @type {object}\n                 * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                 * @property {String} message\n                 * @property {String} source\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( 'open-failed', { message: \"Unable to load TileSource\", source: url } );\n                return;\n            }\n\n            options = $TileSource.prototype.configure.apply( _this, [ data, url, postData ]);\n            if (options.ajaxWithCredentials === undefined) {\n                options.ajaxWithCredentials = _this.ajaxWithCredentials;\n            }\n\n            readySource = new $TileSource( options );\n            _this.ready = true;\n            /**\n             * Raised when a TileSource is opened and initialized.\n             *\n             * @event ready\n             * @memberof OpenSeadragon.TileSource\n             * @type {object}\n             * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n             * @property {Object} tileSource\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( 'ready', { tileSource: readySource } );\n        };\n\n        if( url.match(/\\.js$/) ){\n            //TODO: Its not very flexible to require tile sources to end jsonp\n            //      request for info  with a url that ends with '.js' but for\n            //      now it's the only way I see to distinguish uniformly.\n            callbackName = url.split('/').pop().replace('.js', '');\n            $.jsonp({\n                url: url,\n                async: false,\n                callbackName: callbackName,\n                callback: callback\n            });\n        } else {\n            // request info via xhr asynchronously.\n            $.makeAjaxRequest( {\n                url: url,\n                postData: postData,\n                withCredentials: this.ajaxWithCredentials,\n                headers: this.ajaxHeaders,\n                success: function( xhr ) {\n                    var data = processResponse( xhr );\n                    callback( data );\n                },\n                error: function ( xhr, exc ) {\n                    var msg;\n\n                    /*\n                        IE < 10 will block XHR requests to different origins. Any property access on the request\n                        object will raise an exception which we'll attempt to handle by formatting the original\n                        exception rather than the second one raised when we try to access xhr.status\n                     */\n                    try {\n                        msg = \"HTTP \" + xhr.status + \" attempting to load TileSource: \" + url;\n                    } catch ( e ) {\n                        var formattedExc;\n                        if ( typeof ( exc ) === \"undefined\" || !exc.toString ) {\n                            formattedExc = \"Unknown error\";\n                        } else {\n                            formattedExc = exc.toString();\n                        }\n\n                        msg = formattedExc + \" attempting to load TileSource: \" + url;\n                    }\n\n                    $.console.error(msg);\n\n                    /***\n                     * Raised when an error occurs loading a TileSource.\n                     *\n                     * @event open-failed\n                     * @memberof OpenSeadragon.TileSource\n                     * @type {object}\n                     * @property {OpenSeadragon.TileSource} eventSource - A reference to the TileSource which raised the event.\n                     * @property {String} message\n                     * @property {String} source\n                     * @property {String} postData - HTTP POST data (usually but not necessarily in k=v&k2=v2... form,\n                     *      see TileSrouce::getPostData) or null\n                     * @property {?Object} userData - Arbitrary subscriber-defined object.\n                     */\n                    _this.raiseEvent( 'open-failed', {\n                        message: msg,\n                        source: url,\n                        postData: postData\n                    });\n                }\n            });\n        }\n\n    },\n\n    /**\n     * Responsible determining if a the particular TileSource supports the\n     * data format ( and allowed to apply logic against the url the data was\n     * loaded from, if any ). Overriding implementations are expected to do\n     * something smart with data and / or url to determine support.  Also\n     * understand that iteration order of TileSources is not guarunteed so\n     * please make sure your data or url is expressive enough to ensure a simple\n     * and sufficient mechanisim for clear determination.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @return {Boolean}\n     */\n    supports: function( data, url ) {\n        return false;\n    },\n\n    /**\n     * Responsible for parsing and configuring the\n     * image metadata pertinent to this TileSources implementation.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {String|Object|Array|Document} data\n     * @param {String} url - the url the data was loaded\n     *      from if any.\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null value obtained from\n     *      the protocol URL after '#' sign if flag splitHashDataForPost set to 'true'\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure the tile source constructor (include all values you want to\n     *      instantiate the TileSource subclass with - what _options_ object should contain).\n     * @throws {Error}\n     */\n    configure: function( data, url, postData ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * Responsible for retrieving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ) {\n        throw new Error( \"Method not implemented.\" );\n    },\n\n    /**\n     * Must use AJAX in order to work, i.e. loadTilesWithAjax = true is set.\n     * If a value is returned, ajax issues POST request to the tile url.\n     * If null is returned, ajax issues GET request.\n     * The return value must comply to the header 'content type'.\n     *\n     * Examples (USED HEADER --> getTilePostData CODE):\n     * 'Content-type': 'application/x-www-form-urlencoded' -->\n     *   return \"key1=value=1&key2=value2\";\n     *\n     * 'Content-type': 'application/x-www-form-urlencoded' -->\n     *   return JSON.stringify({key: \"value\", number: 5});\n     *\n     * 'Content-type': 'multipart/form-data' -->\n     *   let result = new FormData();\n     *   result.append(\"data\", myData);\n     *   return result;\n     *\n     * IMPORTANT: in case you move all the logic on image fetching\n     * to post data, you must re-define 'getTileHashKey(...)' to\n     * stay unique for different tile images.\n     *\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @return {*|null} post data to send with tile configuration request\n     */\n    getTilePostData: function( level, x, y ) {\n        return null;\n    },\n\n    /**\n     * Responsible for retrieving the headers which will be attached to the image request for the\n     * region specified by the given x, y, and level components.\n     * This option is only relevant if {@link OpenSeadragon.Options}.loadTilesWithAjax is set to true.\n     * The headers returned here will override headers specified at the Viewer or TiledImage level.\n     * Specifying a falsy value for a header will clear its existing value set at the Viewer or\n     * TiledImage level (if any).\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Object}\n     */\n    getTileAjaxHeaders: function( level, x, y ) {\n        return {};\n    },\n\n    /**\n     * The tile cache object is uniquely determined by this key and used to lookup\n     * the image data in cache: keys should be different if images are different.\n     *\n     * In case a tile has context2D property defined (TileSource.prototype.getContext2D)\n     * or its context2D is set manually; the cache is not used and this function\n     * is irrelevant.\n     * Note: default behaviour does not take into account post data.\n     * @param {Number} level tile level it was fetched with\n     * @param {Number} x x-coordinate in the pyramid level\n     * @param {Number} y y-coordinate in the pyramid level\n     * @param {String} url the tile was fetched with\n     * @param {Object} ajaxHeaders the tile was fetched with\n     * @param {*} postData data the tile was fetched with (type depends on getTilePostData(..) return type)\n     */\n    getTileHashKey: function(level, x, y, url, ajaxHeaders, postData) {\n        if (ajaxHeaders) {\n            return url + \"+\" + JSON.stringify(ajaxHeaders);\n        } else {\n            return url;\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var numTiles = this.getNumTiles( level );\n        return level >= this.minLevel &&\n               level <= this.maxLevel &&\n               x >= 0 &&\n               y >= 0 &&\n               x < numTiles.x &&\n               y < numTiles.y;\n    }\n};\n\n\n$.extend( true, $.TileSource.prototype, $.EventSource.prototype );\n\n\n/**\n * Decides whether to try to process the response as xml, json, or hand back\n * the text\n * @private\n * @inner\n * @function\n * @param {XMLHttpRequest} xhr - the completed network request\n */\nfunction processResponse( xhr ){\n    var responseText = xhr.responseText,\n        status       = xhr.status,\n        statusText,\n        data;\n\n    if ( !xhr ) {\n        throw new Error( $.getString( \"Errors.Security\" ) );\n    } else if ( xhr.status !== 200 && xhr.status !== 0 ) {\n        status     = xhr.status;\n        statusText = ( status === 404 ) ?\n            \"Not Found\" :\n            xhr.statusText;\n        throw new Error( $.getString( \"Errors.Status\", status, statusText ) );\n    }\n\n    if( responseText.match(/\\s*<.*/) ){\n        try{\n        data = ( xhr.responseXML && xhr.responseXML.documentElement ) ?\n            xhr.responseXML :\n            $.parseXml( responseText );\n        } catch (e){\n            data = xhr.responseText;\n        }\n    }else if( responseText.match(/\\s*[{[].*/) ){\n        try{\n          data = $.parseJSON(responseText);\n        } catch(e){\n          data =  responseText;\n        }\n    }else{\n        data = responseText;\n    }\n    return data;\n}\n\n\n/**\n * Determines the TileSource Implementation by introspection of OpenSeadragon\n * namespace, calling each TileSource implementation of 'isType'\n * @private\n * @inner\n * @function\n * @param {Object|Array|Document} data - the tile source configuration object\n * @param {String} url - the url where the tile source configuration object was\n *      loaded from, if any.\n */\n$.TileSource.determineType = function( tileSource, data, url ){\n    var property;\n    for( property in OpenSeadragon ){\n        if( property.match(/.+TileSource$/) &&\n            $.isFunction( OpenSeadragon[ property ] ) &&\n            $.isFunction( OpenSeadragon[ property ].prototype.supports ) &&\n            OpenSeadragon[ property ].prototype.supports.call( tileSource, data, url )\n        ){\n            return OpenSeadragon[ property ];\n        }\n    }\n\n    $.console.error( \"No TileSource was able to open %s %s\", url, data );\n\n    return null;\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - DziTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DziTileSource\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n * @param {String} fileFormat\n * @param {OpenSeadragon.DisplayRect[]} displayRects\n * @property {String} tilesUrl\n * @property {String} fileFormat\n * @property {OpenSeadragon.DisplayRect[]} displayRects\n */\n$.DziTileSource = function( width, height, tileSize, tileOverlap, tilesUrl, fileFormat, displayRects, minLevel, maxLevel ) {\n    var i,\n        rect,\n        level,\n        options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[ 0 ],\n            height: arguments[ 1 ],\n            tileSize: arguments[ 2 ],\n            tileOverlap: arguments[ 3 ],\n            tilesUrl: arguments[ 4 ],\n            fileFormat: arguments[ 5 ],\n            displayRects: arguments[ 6 ],\n            minLevel: arguments[ 7 ],\n            maxLevel: arguments[ 8 ]\n        };\n    }\n\n    this._levelRects  = {};\n    this.tilesUrl     = options.tilesUrl;\n    this.fileFormat   = options.fileFormat;\n    this.displayRects = options.displayRects;\n\n    if ( this.displayRects ) {\n        for ( i = this.displayRects.length - 1; i >= 0; i-- ) {\n            rect = this.displayRects[ i ];\n            for ( level = rect.minLevel; level <= rect.maxLevel; level++ ) {\n                if ( !this._levelRects[ level ] ) {\n                    this._levelRects[ level ] = [];\n                }\n                this._levelRects[ level ].push( rect );\n            }\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.DziTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.DziTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        var ns;\n        if ( data.Image ) {\n            ns = data.Image.xmlns;\n        } else if ( data.documentElement) {\n            if (\"Image\" === data.documentElement.localName || \"Image\" === data.documentElement.tagName) {\n                ns = data.documentElement.namespaceURI;\n            }\n        }\n\n        ns = (ns || '').toLowerCase();\n\n        return (ns.indexOf('schemas.microsoft.com/deepzoom/2008') !== -1 ||\n            ns.indexOf('schemas.microsoft.com/deepzoom/2009') !== -1);\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url, postData ){\n\n        var options;\n\n        if( !$.isPlainObject(data) ){\n\n            options = configureFromXML( this, data );\n\n        }else{\n\n            options = configureFromObject( this, data );\n        }\n\n        if (url && !options.tilesUrl) {\n            options.tilesUrl = url.replace(\n                    /([^/]+?)(\\.(dzi|xml|js)?(\\?[^/]*)?)?\\/?$/, '$1_files/');\n\n            if (url.search(/\\.(dzi|xml|js)\\?/) !== -1) {\n                options.queryParams = url.match(/\\?.*/);\n            }else{\n                options.queryParams = '';\n            }\n        }\n\n        return options;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return [ this.tilesUrl, level, '/', x, '_', y, '.', this.fileFormat, this.queryParams ].join( '' );\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    tileExists: function( level, x, y ) {\n        var rects = this._levelRects[ level ],\n            rect,\n            scale,\n            xMin,\n            yMin,\n            xMax,\n            yMax,\n            i;\n\n        if ((this.minLevel && level < this.minLevel) || (this.maxLevel && level > this.maxLevel)) {\n            return false;\n        }\n\n        if ( !rects || !rects.length ) {\n            return true;\n        }\n\n        for ( i = rects.length - 1; i >= 0; i-- ) {\n            rect = rects[ i ];\n\n            if ( level < rect.minLevel || level > rect.maxLevel ) {\n                continue;\n            }\n\n            scale = this.getLevelScale( level );\n            xMin = rect.x * scale;\n            yMin = rect.y * scale;\n            xMax = xMin + rect.width * scale;\n            yMax = yMin + rect.height * scale;\n\n            xMin = Math.floor( xMin / this._tileWidth );\n            yMin = Math.floor( yMin / this._tileWidth ); // DZI tiles are square, so we just use _tileWidth\n            xMax = Math.ceil( xMax / this._tileWidth );\n            yMax = Math.ceil( yMax / this._tileWidth );\n\n            if ( xMin <= x && x < xMax && yMin <= y && y < yMax ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n});\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root           = xmlDoc.documentElement,\n        rootName       = root.localName || root.tagName,\n        ns             = xmlDoc.documentElement.namespaceURI,\n        configuration  = null,\n        displayRects   = [],\n        dispRectNodes,\n        dispRectNode,\n        rectNode,\n        sizeNode,\n        i;\n\n    if ( rootName === \"Image\" ) {\n\n        try {\n            sizeNode = root.getElementsByTagName(\"Size\" )[ 0 ];\n            if (sizeNode === undefined) {\n                sizeNode = root.getElementsByTagNameNS(ns, \"Size\" )[ 0 ];\n            }\n\n            configuration = {\n                Image: {\n                    xmlns:       \"http://schemas.microsoft.com/deepzoom/2008\",\n                    Url:         root.getAttribute( \"Url\" ),\n                    Format:      root.getAttribute( \"Format\" ),\n                    DisplayRect: null,\n                    Overlap:     parseInt( root.getAttribute( \"Overlap\" ), 10 ),\n                    TileSize:    parseInt( root.getAttribute( \"TileSize\" ), 10 ),\n                    Size: {\n                        Height: parseInt( sizeNode.getAttribute( \"Height\" ), 10 ),\n                        Width:  parseInt( sizeNode.getAttribute( \"Width\" ), 10 )\n                    }\n                }\n            };\n\n            if ( !$.imageFormatSupported( configuration.Image.Format ) ) {\n                throw new Error(\n                    $.getString( \"Errors.ImageFormat\", configuration.Image.Format.toUpperCase() )\n                );\n            }\n\n            dispRectNodes = root.getElementsByTagName(\"DisplayRect\" );\n            if (dispRectNodes === undefined) {\n                dispRectNodes = root.getElementsByTagNameNS(ns, \"DisplayRect\" )[ 0 ];\n            }\n\n            for ( i = 0; i < dispRectNodes.length; i++ ) {\n                dispRectNode = dispRectNodes[ i ];\n                rectNode     = dispRectNode.getElementsByTagName(\"Rect\" )[ 0 ];\n                if (rectNode === undefined) {\n                    rectNode = dispRectNode.getElementsByTagNameNS(ns, \"Rect\" )[ 0 ];\n                }\n\n                displayRects.push({\n                    Rect: {\n                        X: parseInt( rectNode.getAttribute( \"X\" ), 10 ),\n                        Y: parseInt( rectNode.getAttribute( \"Y\" ), 10 ),\n                        Width: parseInt( rectNode.getAttribute( \"Width\" ), 10 ),\n                        Height: parseInt( rectNode.getAttribute( \"Height\" ), 10 ),\n                        MinLevel: parseInt( dispRectNode.getAttribute( \"MinLevel\" ), 10 ),\n                        MaxLevel: parseInt( dispRectNode.getAttribute( \"MaxLevel\" ), 10 )\n                    }\n                });\n            }\n\n            if( displayRects.length ){\n                configuration.Image.DisplayRect = displayRects;\n            }\n\n            return configureFromObject( tileSource, configuration );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( $.getString(\"Errors.Dzi\") );\n        }\n    } else if ( rootName === \"Collection\" ) {\n        throw new Error( $.getString( \"Errors.Dzc\" ) );\n    } else if ( rootName === \"Error\" ) {\n        var messageNode = root.getElementsByTagName(\"Message\")[0];\n        var message = messageNode.firstChild.nodeValue;\n        throw new Error(message);\n    }\n\n    throw new Error( $.getString( \"Errors.Dzi\" ) );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n    var imageData     = configuration.Image,\n        tilesUrl      = imageData.Url,\n        fileFormat    = imageData.Format,\n        sizeData      = imageData.Size,\n        dispRectData  = imageData.DisplayRect || [],\n        width         = parseInt( sizeData.Width, 10 ),\n        height        = parseInt( sizeData.Height, 10 ),\n        tileSize      = parseInt( imageData.TileSize, 10 ),\n        tileOverlap   = parseInt( imageData.Overlap, 10 ),\n        displayRects  = [],\n        rectData,\n        i;\n\n    //TODO: need to figure out out to better handle image format compatibility\n    //      which actually includes additional file formats like xml and pdf\n    //      and plain text for various tilesource implementations to avoid low\n    //      level errors.\n    //\n    //      For now, just don't perform the check.\n    //\n    /*if ( !imageFormatSupported( fileFormat ) ) {\n        throw new Error(\n            $.getString( \"Errors.ImageFormat\", fileFormat.toUpperCase() )\n        );\n    }*/\n\n    for ( i = 0; i < dispRectData.length; i++ ) {\n        rectData = dispRectData[ i ].Rect;\n\n        displayRects.push( new $.DisplayRect(\n            parseInt( rectData.X, 10 ),\n            parseInt( rectData.Y, 10 ),\n            parseInt( rectData.Width, 10 ),\n            parseInt( rectData.Height, 10 ),\n            parseInt( rectData.MinLevel, 10 ),\n            parseInt( rectData.MaxLevel, 10 )\n        ));\n    }\n\n    return $.extend(true, {\n        width: width, /* width *required */\n        height: height, /* height *required */\n        tileSize: tileSize, /* tileSize *required */\n        tileOverlap: tileOverlap, /* tileOverlap *required */\n        minLevel: null, /* minLevel */\n        maxLevel: null, /* maxLevel */\n        tilesUrl: tilesUrl, /* tilesUrl */\n        fileFormat: fileFormat, /* fileFormat */\n        displayRects: displayRects /* displayRects */\n    }, configuration );\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - IIIFTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class IIIFTileSource\n * @classdesc A client implementation of the International Image Interoperability Framework\n * Format: Image API 1.0 - 2.1\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @see http://iiif.io/api/image/\n * @param {String} [options.tileFormat='jpg']\n *      The extension that will be used when requiring tiles.\n */\n$.IIIFTileSource = function( options ){\n\n    /* eslint-disable camelcase */\n\n    $.extend( true, this, options );\n\n    if ( !( this.height && this.width && this['@id'] ) ) {\n        throw new Error( 'IIIF required parameters not provided.' );\n    }\n\n    options.tileSizePerScaleFactor = {};\n\n    this.tileFormat = this.tileFormat || 'jpg';\n\n    this.version = options.version;\n\n    // N.B. 2.0 renamed scale_factors to scaleFactors\n    if ( this.tile_width && this.tile_height ) {\n        options.tileWidth = this.tile_width;\n        options.tileHeight = this.tile_height;\n    } else if ( this.tile_width ) {\n        options.tileSize = this.tile_width;\n    } else if ( this.tile_height ) {\n        options.tileSize = this.tile_height;\n    } else if ( this.tiles ) {\n        // Version 2.0 forwards\n        if ( this.tiles.length === 1 ) {\n            options.tileWidth  = this.tiles[0].width;\n            // Use height if provided, otherwise assume square tiles and use width.\n            options.tileHeight = this.tiles[0].height || this.tiles[0].width;\n            this.scale_factors = this.tiles[0].scaleFactors;\n        } else {\n            // Multiple tile sizes at different levels\n            this.scale_factors = [];\n            for (var t = 0; t < this.tiles.length; t++ ) {\n                for (var sf = 0; sf < this.tiles[t].scaleFactors.length; sf++) {\n                    var scaleFactor = this.tiles[t].scaleFactors[sf];\n                    this.scale_factors.push(scaleFactor);\n                    options.tileSizePerScaleFactor[scaleFactor] = {\n                        width: this.tiles[t].width,\n                        height: this.tiles[t].height || this.tiles[t].width\n                    };\n                }\n            }\n        }\n    } else if ( canBeTiled(options) ) {\n        // use the largest of tileOptions that is smaller than the short dimension\n        var shortDim = Math.min( this.height, this.width ),\n            tileOptions = [256, 512, 1024],\n            smallerTiles = [];\n\n        for ( var c = 0; c < tileOptions.length; c++ ) {\n            if ( tileOptions[c] <= shortDim ) {\n                smallerTiles.push( tileOptions[c] );\n            }\n        }\n\n        if ( smallerTiles.length > 0 ) {\n            options.tileSize = Math.max.apply( null, smallerTiles );\n        } else {\n            // If we're smaller than 256, just use the short side.\n            options.tileSize = shortDim;\n        }\n    } else if (this.sizes && this.sizes.length > 0) {\n        // This info.json can't be tiled, but we can still construct a legacy pyramid from the sizes array.\n        // In this mode, IIIFTileSource will call functions from the abstract baseTileSource or the\n        // LegacyTileSource instead of performing IIIF tiling.\n        this.emulateLegacyImagePyramid = true;\n\n        options.levels = constructLevels( this );\n        // use the largest available size to define tiles\n        $.extend( true, options, {\n            width: options.levels[ options.levels.length - 1 ].width,\n            height: options.levels[ options.levels.length - 1 ].height,\n            tileSize: Math.max( options.height, options.width ),\n            tileOverlap: 0,\n            minLevel: 0,\n            maxLevel: options.levels.length - 1\n        });\n        this.levels = options.levels;\n    } else {\n        $.console.error(\"Nothing in the info.json to construct image pyramids from\");\n    }\n\n    if (!options.maxLevel && !this.emulateLegacyImagePyramid) {\n        if (!this.scale_factors) {\n            options.maxLevel = Number(Math.ceil(Math.log(Math.max(this.width, this.height), 2)));\n        } else {\n            var maxScaleFactor = Math.max.apply(null, this.scale_factors);\n            options.maxLevel = Math.round(Math.log(maxScaleFactor) * Math.LOG2E);\n        }\n    }\n\n    $.TileSource.apply( this, [ options ] );\n};\n\n$.extend( $.IIIFTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.IIIFTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n\n    supports: function( data, url ) {\n        // Version 2.0 and forwards\n        if (data.protocol && data.protocol === 'http://iiif.io/api/image') {\n            return true;\n        // Version 1.1\n        } else if ( data['@context'] && (\n            data['@context'] === \"http://library.stanford.edu/iiif/image-api/1.1/context.json\" ||\n            data['@context'] === \"http://iiif.io/api/image/1/context.json\") ) {\n            // N.B. the iiif.io context is wrong, but where the representation lives so likely to be used\n            return true;\n\n        // Version 1.0\n        } else if ( data.profile &&\n            data.profile.indexOf(\"http://library.stanford.edu/iiif/image-api/compliance.html\") === 0) {\n            return true;\n        } else if ( data.identifier && data.width && data.height ) {\n            return true;\n        } else if ( data.documentElement &&\n            \"info\" === data.documentElement.tagName &&\n            \"http://library.stanford.edu/iiif/image-api/ns/\" ===\n                data.documentElement.namespaceURI) {\n            return true;\n\n        // Not IIIF\n        } else {\n            return false;\n        }\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url configuration was retrieved from\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n     * @example <caption>IIIF 1.1 Info Looks like this</caption>\n     * {\n     *   \"@context\" : \"http://library.stanford.edu/iiif/image-api/1.1/context.json\",\n     *   \"@id\" : \"http://iiif.example.com/prefix/1E34750D-38DB-4825-A38A-B60A345E591C\",\n     *   \"width\" : 6000,\n     *   \"height\" : 4000,\n     *   \"scale_factors\" : [ 1, 2, 4 ],\n     *   \"tile_width\" : 1024,\n     *   \"tile_height\" : 1024,\n     *   \"formats\" : [ \"jpg\", \"png\" ],\n     *   \"qualities\" : [ \"native\", \"grey\" ],\n     *   \"profile\" : \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\"\n     * }\n     */\n    configure: function( data, url, postData ){\n        // Try to deduce our version and fake it upwards if needed\n        if ( !$.isPlainObject(data) ) {\n            var options = configureFromXml10( data );\n            options['@context'] = \"http://iiif.io/api/image/1.0/context.json\";\n            options['@id'] = url.replace('/info.xml', '');\n            options.version = 1;\n            return options;\n        } else {\n            if ( !data['@context'] ) {\n                data['@context'] = 'http://iiif.io/api/image/1.0/context.json';\n                data['@id'] = url.replace('/info.json', '');\n                data.version = 1;\n            } else {\n                var context = data['@context'];\n                if (Array.isArray(context)) {\n                    for (var i = 0; i < context.length; i++) {\n                        if (typeof context[i] === 'string' &&\n                            ( /^http:\\/\\/iiif\\.io\\/api\\/image\\/[1-3]\\/context\\.json$/.test(context[i]) ||\n                            context[i] === 'http://library.stanford.edu/iiif/image-api/1.1/context.json' ) ) {\n                            context = context[i];\n                            break;\n                        }\n                    }\n                }\n                switch (context) {\n                    case 'http://iiif.io/api/image/1/context.json':\n                    case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                        data.version = 1;\n                        break;\n                    case 'http://iiif.io/api/image/2/context.json':\n                        data.version = 2;\n                        break;\n                    case 'http://iiif.io/api/image/3/context.json':\n                        data.version = 3;\n                        break;\n                    default:\n                        $.console.error('Data has a @context property which contains no known IIIF context URI.');\n                }\n            }\n            if ( !data['@id'] && data['id'] ) {\n                data['@id'] = data['id'];\n            }\n            if(data.preferredFormats) {\n                for (var f = 0; f < data.preferredFormats.length; f++ ) {\n                    if ( OpenSeadragon.imageFormatSupported(data.preferredFormats[f]) ) {\n                        data.tileFormat = data.preferredFormats[f];\n                        break;\n                    }\n                }\n            }\n            return data;\n        }\n    },\n\n    /**\n     * Return the tileWidth for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileWidth: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileWidth.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].width;\n        }\n        return this._tileWidth;\n    },\n\n    /**\n     * Return the tileHeight for the given level.\n     * @function\n     * @param {Number} level\n     */\n    getTileHeight: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return $.TileSource.prototype.getTileHeight.call(this, level);\n        }\n\n        var scaleFactor = Math.pow(2, this.maxLevel - level);\n\n        if (this.tileSizePerScaleFactor && this.tileSizePerScaleFactor[scaleFactor]) {\n            return this.tileSizePerScaleFactor[scaleFactor].height;\n        }\n        return this._tileHeight;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var levelScale = NaN;\n            if (this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                    this.levels[level].width /\n                    this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        }\n\n        return $.TileSource.prototype.getLevelScale.call(this, level);\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        }\n\n        return $.TileSource.prototype.getNumTiles.call(this, level);\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {OpenSeadragon.Point} point\n     */\n    getTileAtPoint: function( level, point ) {\n\n        if(this.emulateLegacyImagePyramid) {\n            return new $.Point(0, 0);\n        }\n\n        return $.TileSource.prototype.getTileAtPoint.call(this, level, point);\n    },\n\n\n    /**\n     * Responsible for retrieving the url which will return an image for the\n     * region specified by the given x, y, and level components.\n     * @function\n     * @param {Number} level - z index\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function( level, x, y ){\n\n        if(this.emulateLegacyImagePyramid) {\n            var url = null;\n            if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n                url = this.levels[ level ].url;\n            }\n            return url;\n        }\n\n        //# constants\n        var IIIF_ROTATION = '0',\n            //## get the scale (level as a decimal)\n            scale = Math.pow( 0.5, this.maxLevel - level ),\n\n            //# image dimensions at this level\n            levelWidth = Math.ceil( this.width * scale ),\n            levelHeight = Math.ceil( this.height * scale ),\n\n            //## iiif region\n            tileWidth,\n            tileHeight,\n            iiifTileSizeWidth,\n            iiifTileSizeHeight,\n            iiifRegion,\n            iiifTileX,\n            iiifTileY,\n            iiifTileW,\n            iiifTileH,\n            iiifSize,\n            iiifSizeW,\n            iiifSizeH,\n            iiifQuality,\n            uri;\n\n        tileWidth = this.getTileWidth(level);\n        tileHeight = this.getTileHeight(level);\n        iiifTileSizeWidth = Math.ceil( tileWidth / scale );\n        iiifTileSizeHeight = Math.ceil( tileHeight / scale );\n        if (this.version === 1) {\n            iiifQuality = \"native.\" + this.tileFormat;\n        } else {\n            iiifQuality = \"default.\" + this.tileFormat;\n        }\n        if ( levelWidth < tileWidth && levelHeight < tileHeight ){\n            if ( this.version === 2 && levelWidth === this.width ) {\n                iiifSize = \"full\";\n            } else if ( this.version === 3 && levelWidth === this.width && levelHeight === this.height ) {\n                iiifSize = \"max\";\n            } else if ( this.version === 3 ) {\n                iiifSize = levelWidth + \",\" + levelHeight;\n            } else {\n                iiifSize = levelWidth + \",\";\n            }\n            iiifRegion = 'full';\n        } else {\n            iiifTileX = x * iiifTileSizeWidth;\n            iiifTileY = y * iiifTileSizeHeight;\n            iiifTileW = Math.min( iiifTileSizeWidth, this.width - iiifTileX );\n            iiifTileH = Math.min( iiifTileSizeHeight, this.height - iiifTileY );\n            if ( x === 0 && y === 0 && iiifTileW === this.width && iiifTileH === this.height ) {\n                iiifRegion = \"full\";\n            } else {\n                iiifRegion = [ iiifTileX, iiifTileY, iiifTileW, iiifTileH ].join( ',' );\n            }\n            iiifSizeW = Math.ceil( iiifTileW * scale );\n            iiifSizeH = Math.ceil( iiifTileH * scale );\n            if ( this.version === 2 && iiifSizeW === this.width ) {\n                iiifSize = \"full\";\n            } else if ( this.version === 3 && iiifSizeW === this.width && iiifSizeH === this.height ) {\n                iiifSize = \"max\";\n            } else if (this.version === 3) {\n                iiifSize = iiifSizeW + \",\" + iiifSizeH;\n            } else {\n                iiifSize = iiifSizeW + \",\";\n            }\n        }\n        uri = [ this['@id'], iiifRegion, iiifSize, IIIF_ROTATION, iiifQuality ].join( '/' );\n\n        return uri;\n    },\n\n    __testonly__: {\n        canBeTiled: canBeTiled,\n        constructLevels: constructLevels\n    }\n\n  });\n\n    /**\n     * Determine whether arbitrary tile requests can be made against a service with the given profile\n     * @function\n     * @param {Object} options\n     * @param {Array|String} options.profile\n     * @param {Number} options.version\n     * @param {String} options.extraFeatures\n     * @returns {Boolean}\n     */\n    function canBeTiled ( options ) {\n        var level0Profiles = [\n            \"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",\n            \"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",\n            \"http://iiif.io/api/image/2/level0.json\",\n            \"level0\",\n            \"https://iiif.io/api/image/3/level0.json\"\n        ];\n        var profileLevel = Array.isArray(options.profile) ? options.profile[0] : options.profile;\n        var isLevel0 = (level0Profiles.indexOf(profileLevel) !== -1);\n        var hasCanoncicalSizeFeature = false;\n        if ( options.version === 2 && options.profile.length > 1 && options.profile[1].supports ) {\n            hasCanoncicalSizeFeature = options.profile[1].supports.indexOf( \"sizeByW\" ) !== -1;\n        }\n        if ( options.version === 3 && options.extraFeatures ) {\n            hasCanoncicalSizeFeature = options.extraFeatures.indexOf( \"sizeByWh\" ) !== -1;\n        }\n        return !isLevel0 || hasCanoncicalSizeFeature;\n    }\n\n    /**\n     * Build the legacy pyramid URLs (one tile per level)\n     * @function\n     * @param {object} options - infoJson\n     * @throws {Error}\n     */\n    function constructLevels(options) {\n        var levels = [];\n        for(var i = 0; i < options.sizes.length; i++) {\n            levels.push({\n                url: options['@id'] + '/full/' + options.sizes[i].width + ',' +\n                    (options.version === 3 ? options.sizes[i].height : '') +\n                    '/0/default.' + options.tileFormat,\n                width: options.sizes[i].width,\n                height: options.sizes[i].height\n            });\n        }\n        return levels.sort(function(a, b) {\n            return a.width - b.width;\n        });\n    }\n\n\n    function configureFromXml10(xmlDoc) {\n        //parse the xml\n        if ( !xmlDoc || !xmlDoc.documentElement ) {\n            throw new Error( $.getString( \"Errors.Xml\" ) );\n        }\n\n        var root            = xmlDoc.documentElement,\n            rootName        = root.tagName,\n            configuration   = null;\n\n        if ( rootName === \"info\" ) {\n            try {\n                configuration = {};\n                parseXML10( root, configuration );\n                return configuration;\n\n            } catch ( e ) {\n                throw (e instanceof Error) ?\n                    e :\n                    new Error( $.getString(\"Errors.IIIF\") );\n            }\n        }\n        throw new Error( $.getString( \"Errors.IIIF\" ) );\n    }\n\n    function parseXML10( node, configuration, property ) {\n        var i,\n            value;\n        if ( node.nodeType === 3 && property ) {//text node\n            value = node.nodeValue.trim();\n            if( value.match(/^\\d*$/)){\n                value = Number( value );\n            }\n            if( !configuration[ property ] ){\n                configuration[ property ] = value;\n            }else{\n                if( !$.isArray( configuration[ property ] ) ){\n                    configuration[ property ] = [ configuration[ property ] ];\n                }\n                configuration[ property ].push( value );\n            }\n        } else if( node.nodeType === 1 ){\n            for( i = 0; i < node.childNodes.length; i++ ){\n                parseXML10( node.childNodes[ i ], configuration, node.nodeName );\n            }\n        }\n    }\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - OsmTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the OSM tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class OsmTileSource\n * @classdesc A tilesource implementation for OpenStreetMap.<br><br>\n *\n * Note 1. Zoomlevels. Deep Zoom and OSM define zoom levels differently. In  Deep\n * Zoom, level 0 equals an image of 1x1 pixels. In OSM, level 0 equals an image of\n * 256x256 levels (see http://gasi.ch/blog/inside-deep-zoom-2). I.e. there is a\n * difference of log2(256)=8 levels.<br><br>\n *\n * Note 2. Image dimension. According to the OSM Wiki\n * (http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Zoom_levels)\n * the highest Mapnik zoom level has 256.144x256.144 tiles, with a 256x256\n * pixel size. I.e. the Deep Zoom image dimension is 65.572.864x65.572.864\n * pixels.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.OsmTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    //apply default setting for standard public OpenStreatMaps service\n    //but allow them to be specified so fliks can host there own instance\n    //or apply against other services supportting the same standard\n    if( !options.width || !options.height ){\n        options.width = 65572864;\n        options.height = 65572864;\n    }\n    if( !options.tileSize ){\n        options.tileSize = 256;\n        options.tileOverlap = 0;\n    }\n    if( !options.tilesUrl ){\n        options.tilesUrl = \"http://tile.openstreetmap.org/\";\n    }\n    options.minLevel = 8;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.OsmTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.OsmTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"openstreetmaps\" === data.type\n        );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url, postData ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        return this.tilesUrl + (level - 8) + \"/\" + x + \"/\" + y + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TmsTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Derived from the TMS tile source in Rainer Simon's seajax-utils project\n * <http://github.com/rsimon/seajax-utils>.  Rainer Simon has contributed\n * the included code to the OpenSeadragon project under the New BSD license;\n * see <https://github.com/openseadragon/openseadragon/issues/58>.\n */\n\n\n(function( $ ){\n\n/**\n * @class TmsTileSource\n * @classdesc A tilesource implementation for Tiled Map Services (TMS).\n * TMS tile scheme ( [ as supported by OpenLayers ] is described here\n * ( http://openlayers.org/dev/examples/tms.html ).\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Number|Object} width - the pixel width of the image or the idiomatic\n *      options object which is used instead of positional arguments.\n * @param {Number} height\n * @param {Number} tileSize\n * @param {Number} tileOverlap\n * @param {String} tilesUrl\n */\n$.TmsTileSource = function( width, height, tileSize, tileOverlap, tilesUrl ) {\n    var options;\n\n    if( $.isPlainObject( width ) ){\n        options = width;\n    }else{\n        options = {\n            width: arguments[0],\n            height: arguments[1],\n            tileSize: arguments[2],\n            tileOverlap: arguments[3],\n            tilesUrl: arguments[4]\n        };\n    }\n    // TMS has integer multiples of 256 for width/height and adds buffer\n    // if necessary -> account for this!\n    var bufferedWidth = Math.ceil(options.width / 256) * 256,\n        bufferedHeight = Math.ceil(options.height / 256) * 256,\n        max;\n\n    // Compute number of zoomlevels in this tileset\n    if (bufferedWidth > bufferedHeight) {\n        max = bufferedWidth / 256;\n    } else {\n        max = bufferedHeight / 256;\n    }\n    options.maxLevel = Math.ceil(Math.log(max) / Math.log(2)) - 1;\n    options.tileSize = 256;\n    options.width = bufferedWidth;\n    options.height = bufferedHeight;\n\n    $.TileSource.apply( this, [ options ] );\n\n};\n\n$.extend( $.TmsTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.TmsTileSource.prototype */{\n\n\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return ( data.type && \"tiledmapservice\" === data.type );\n    },\n\n    /**\n     *\n     * @function\n     * @param {Object} data - the raw configuration\n     * @param {String} url - the url the data was retrieved from if any.\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( data, url, postData ){\n        return data;\n    },\n\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     */\n    getTileUrl: function( level, x, y ) {\n        // Convert from Deep Zoom definition to TMS zoom definition\n        var yTiles = this.getNumTiles( level ).y - 1;\n\n        return this.tilesUrl + level + \"/\" + x + \"/\" + (yTiles - y) + \".png\";\n    }\n});\n\n\n}( OpenSeadragon ));\n\n(function($) {\n\n    /**\n     * @class ZoomifyTileSource\n     * @classdesc A tilesource implementation for the zoomify format.\n     *\n     * A description of the format can be found here:\n     * https://ecommons.cornell.edu/bitstream/handle/1813/5410/Introducing_Zoomify_Image.pdf\n     *\n     * There are two ways of creating a zoomify tilesource for openseadragon\n     *\n     * 1) Supplying all necessary information in the tilesource object. A minimal example object for this method looks like this:\n     *\n     * {\n     *      type: \"zoomifytileservice\",\n     *      width: 1000,\n     *      height: 1000,\n     *      tilesUrl: \"/test/data/zoomify/\"\n     * }\n     *\n     * The tileSize is set to 256 (the usual Zoomify default) when it is not defined. The tileUrl must the path to the image _directory_.\n     *\n     * 2) Loading image metadata from xml file: (CURRENTLY NOT SUPPORTED)\n     *\n     * When creating zoomify formatted images one \"xml\" like file with name ImageProperties.xml\n     * will be created as well. Here is an example of such a file:\n     *\n     * <IMAGE_PROPERTIES WIDTH=\"1000\" HEIGHT=\"1000\" NUMTILES=\"21\" NUMIMAGES=\"1\" VERSION=\"1.8\" TILESIZE=\"256\" />\n     *\n     * To use this xml file as metadata source you must supply the path to the ImageProperties.xml file and leave out all other parameters:\n     * As stated above, this method of loading a zoomify tilesource is currently not supported\n     *\n     * {\n     *      type: \"zoomifytileservice\",\n     *      tilesUrl: \"/test/data/zoomify/ImageProperties.xml\"\n     * }\n\n    *\n    * @memberof OpenSeadragon\n     * @extends OpenSeadragon.TileSource\n     * @param {Number} width - the pixel width of the image.\n     * @param {Number} height\n     * @param {Number} tileSize\n     * @param {String} tilesUrl\n     */\n    $.ZoomifyTileSource = function(options) {\n        if(typeof options.tileSize === 'undefined'){\n            options.tileSize = 256;\n        }\n\n        if(typeof options.fileFormat === 'undefined'){\n            options.fileFormat = 'jpg';\n            this.fileFormat = options.fileFormat;\n        }\n\n        var currentImageSize = {\n            x: options.width,\n            y: options.height\n        };\n        options.imageSizes = [{\n            x: options.width,\n            y: options.height\n        }];\n        options.gridSize = [this._getGridSize(options.width, options.height, options.tileSize)];\n\n        while (parseInt(currentImageSize.x, 10) > options.tileSize || parseInt(currentImageSize.y, 10) > options.tileSize) {\n            currentImageSize.x = Math.floor(currentImageSize.x / 2);\n            currentImageSize.y = Math.floor(currentImageSize.y / 2);\n            options.imageSizes.push({\n                x: currentImageSize.x,\n                y: currentImageSize.y\n            });\n            options.gridSize.push(this._getGridSize(currentImageSize.x, currentImageSize.y, options.tileSize));\n        }\n        options.imageSizes.reverse();\n        options.gridSize.reverse();\n        options.minLevel = 0;\n        options.maxLevel = options.gridSize.length - 1;\n\n        OpenSeadragon.TileSource.apply(this, [options]);\n    };\n\n    $.extend($.ZoomifyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ZoomifyTileSource.prototype */ {\n\n        //private\n        _getGridSize: function(width, height, tileSize) {\n            return {\n                x: Math.ceil(width / tileSize),\n                y: Math.ceil(height / tileSize)\n            };\n        },\n\n        //private\n        _calculateAbsoluteTileNumber: function(level, x, y) {\n            var num = 0;\n            var size = {};\n\n            //Sum up all tiles below the level we want the number of tiles\n            for (var z = 0; z < level; z++) {\n                size = this.gridSize[z];\n                num += size.x * size.y;\n            }\n            //Add the tiles of the level\n            size = this.gridSize[level];\n            num += size.x * y + x;\n            return num;\n        },\n\n        /**\n         * Determine if the data and/or url imply the image service is supported by\n         * this tile source.\n         * @function\n         * @param {Object|Array} data\n         * @param {String} optional - url\n         */\n        supports: function(data, url) {\n            return (data.type && \"zoomifytileservice\" === data.type);\n        },\n\n        /**\n         *\n         * @function\n         * @param {Object} data - the raw configuration\n         * @param {String} url - the url the data was retrieved from if any.\n         * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n         * @return {Object} options - A dictionary of keyword arguments sufficient\n         *      to configure this tile sources constructor.\n         */\n        configure: function(data, url, postData) {\n            return data;\n        },\n\n        /**\n         * @function\n         * @param {Number} level\n         * @param {Number} x\n         * @param {Number} y\n         */\n        getTileUrl: function(level, x, y) {\n            //console.log(level);\n            var result = 0;\n            var num = this._calculateAbsoluteTileNumber(level, x, y);\n            result = Math.floor(num / 256);\n            return this.tilesUrl + 'TileGroup' + result + '/' + level + '-' + x + '-' + y + '.' + this.fileFormat;\n\n        }\n    });\n\n}(OpenSeadragon));\n\n\n/*\n * OpenSeadragon - LegacyTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class LegacyTileSource\n * @classdesc The LegacyTileSource allows simple, traditional image pyramids to be loaded\n * into an OpenSeadragon Viewer.  Basically, this translates to the historically\n * common practice of starting with a 'master' image, maybe a tiff for example,\n * and generating a set of 'service' images like one or more thumbnails, a medium\n * resolution image and a high resolution image in standard web formats like\n * png or jpg.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.TileSource\n * @param {Array} levels An array of file descriptions, each is an object with\n *      a 'url', a 'width', and a 'height'.  Overriding classes can expect more\n *      properties but these properties are sufficient for this implementation.\n *      Additionally, the levels are required to be listed in order from\n *      smallest to largest.\n * @property {Number} aspectRatio\n * @property {Number} dimensions\n * @property {Number} tileSize\n * @property {Number} tileOverlap\n * @property {Number} minLevel\n * @property {Number} maxLevel\n * @property {Array}  levels\n */\n$.LegacyTileSource = function( levels ) {\n\n    var options,\n        width,\n        height;\n\n    if( $.isArray( levels ) ){\n        options = {\n            type: 'legacy-image-pyramid',\n            levels: levels\n        };\n    }\n\n    //clean up the levels to make sure we support all formats\n    options.levels = filterFiles( options.levels );\n\n    if ( options.levels.length > 0 ) {\n        width = options.levels[ options.levels.length - 1 ].width;\n        height = options.levels[ options.levels.length - 1 ].height;\n    }\n    else {\n        width = 0;\n        height = 0;\n        $.console.error( \"No supported image formats found\" );\n    }\n\n    $.extend( true, options, {\n        width: width,\n        height: height,\n        tileSize: Math.max( height, width ),\n        tileOverlap: 0,\n        minLevel: 0,\n        maxLevel: options.levels.length > 0 ? options.levels.length - 1 : 0\n    } );\n\n    $.TileSource.apply( this, [ options ] );\n\n    this.levels = options.levels;\n};\n\n$.extend( $.LegacyTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.LegacyTileSource.prototype */{\n    /**\n     * Determine if the data and/or url imply the image service is supported by\n     * this tile source.\n     * @function\n     * @param {Object|Array} data\n     * @param {String} optional - url\n     */\n    supports: function( data, url ){\n        return (\n            data.type &&\n            \"legacy-image-pyramid\" === data.type\n        ) || (\n            data.documentElement &&\n            \"legacy-image-pyramid\" === data.documentElement.getAttribute('type')\n        );\n    },\n\n\n    /**\n     *\n     * @function\n     * @param {Object|XMLDocument} configuration - the raw configuration\n     * @param {String} dataUrl - the url the data was retrieved from if any.\n     * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n     * @return {Object} options - A dictionary of keyword arguments sufficient\n     *      to configure this tile sources constructor.\n     */\n    configure: function( configuration, dataUrl, postData ){\n\n        var options;\n\n        if( !$.isPlainObject(configuration) ){\n\n            options = configureFromXML( this, configuration );\n\n        }else{\n\n            options = configureFromObject( this, configuration );\n        }\n\n        return options;\n\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getLevelScale: function ( level ) {\n        var levelScale = NaN;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            levelScale =\n                this.levels[ level ].width /\n                this.levels[ this.maxLevel ].width;\n        }\n        return levelScale;\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     */\n    getNumTiles: function( level ) {\n        var scale = this.getLevelScale( level );\n        if ( scale ){\n            return new $.Point( 1, 1 );\n        } else {\n            return new $.Point( 0, 0 );\n        }\n    },\n\n    /**\n     * This method is not implemented by this class other than to throw an Error\n     * announcing you have to implement it.  Because of the variety of tile\n     * server technologies, and various specifications for building image\n     * pyramids, this method is here to allow easy integration.\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @throws {Error}\n     */\n    getTileUrl: function ( level, x, y ) {\n        var url = null;\n        if ( this.levels.length > 0 && level >= this.minLevel && level <= this.maxLevel ) {\n            url = this.levels[ level ].url;\n        }\n        return url;\n    }\n} );\n\n/**\n * This method removes any files from the Array which don't conform to our\n * basic requirements for a 'level' in the LegacyTileSource.\n * @private\n * @inner\n * @function\n */\nfunction filterFiles( files ){\n    var filtered = [],\n        file,\n        i;\n    for( i = 0; i < files.length; i++ ){\n        file = files[ i ];\n        if( file.height &&\n            file.width &&\n            file.url ){\n            //This is sufficient to serve as a level\n            filtered.push({\n                url: file.url,\n                width: Number( file.width ),\n                height: Number( file.height )\n            });\n        }\n        else {\n            $.console.error( 'Unsupported image format: %s', file.url ? file.url : '<no URL>' );\n        }\n    }\n\n    return filtered.sort(function(a, b) {\n        return a.height - b.height;\n    });\n\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromXML( tileSource, xmlDoc ){\n\n    if ( !xmlDoc || !xmlDoc.documentElement ) {\n        throw new Error( $.getString( \"Errors.Xml\" ) );\n    }\n\n    var root         = xmlDoc.documentElement,\n        rootName     = root.tagName,\n        conf         = null,\n        levels       = [],\n        level,\n        i;\n\n    if ( rootName === \"image\" ) {\n\n        try {\n            conf = {\n                type:        root.getAttribute( \"type\" ),\n                levels:      []\n            };\n\n            levels = root.getElementsByTagName( \"level\" );\n            for ( i = 0; i < levels.length; i++ ) {\n                level = levels[ i ];\n\n                conf.levels.push({\n                    url:    level.getAttribute( \"url\" ),\n                    width:  parseInt( level.getAttribute( \"width\" ), 10 ),\n                    height: parseInt( level.getAttribute( \"height\" ), 10 )\n                });\n            }\n\n            return configureFromObject( tileSource, conf );\n\n        } catch ( e ) {\n            throw (e instanceof Error) ?\n                e :\n                new Error( 'Unknown error parsing Legacy Image Pyramid XML.' );\n        }\n    } else if ( rootName === \"collection\" ) {\n        throw new Error( 'Legacy Image Pyramid Collections not yet supported.' );\n    } else if ( rootName === \"error\" ) {\n        throw new Error( 'Error: ' + xmlDoc );\n    }\n\n    throw new Error( 'Unknown element ' + rootName );\n}\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction configureFromObject( tileSource, configuration ){\n\n    return configuration.levels;\n\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageTileSource\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ($) {\n\n    /**\n     * @class ImageTileSource\n     * @classdesc The ImageTileSource allows a simple image to be loaded\n     * into an OpenSeadragon Viewer.\n     * There are 2 ways to open an ImageTileSource:\n     * 1. viewer.open({type: 'image', url: fooUrl});\n     * 2. viewer.open(new OpenSeadragon.ImageTileSource({url: fooUrl}));\n     *\n     * With the first syntax, the crossOriginPolicy, ajaxWithCredentials and\n     * useCanvas options are inherited from the viewer if they are not\n     * specified directly in the options object.\n     *\n     * @memberof OpenSeadragon\n     * @extends OpenSeadragon.TileSource\n     * @param {Object} options Options object.\n     * @param {String} options.url URL of the image\n     * @param {Boolean} [options.buildPyramid=true] If set to true (default), a\n     * pyramid will be built internally to provide a better downsampling.\n     * @param {String|Boolean} [options.crossOriginPolicy=false] Valid values are\n     * 'Anonymous', 'use-credentials', and false. If false, image requests will\n     * not use CORS preventing internal pyramid building for images from other\n     * domains.\n     * @param {String|Boolean} [options.ajaxWithCredentials=false] Whether to set\n     * the withCredentials XHR flag for AJAX requests (when loading tile sources).\n     * @param {Boolean} [options.useCanvas=true] Set to false to prevent any use\n     * of the canvas API.\n     */\n    $.ImageTileSource = function (options) {\n\n        options = $.extend({\n            buildPyramid: true,\n            crossOriginPolicy: false,\n            ajaxWithCredentials: false,\n            useCanvas: true\n        }, options);\n        $.TileSource.apply(this, [options]);\n\n    };\n\n    $.extend($.ImageTileSource.prototype, $.TileSource.prototype, /** @lends OpenSeadragon.ImageTileSource.prototype */{\n        /**\n         * Determine if the data and/or url imply the image service is supported by\n         * this tile source.\n         * @function\n         * @param {Object|Array} data\n         * @param {String} optional - url\n         */\n        supports: function (data, url) {\n            return data.type && data.type === \"image\";\n        },\n        /**\n         *\n         * @function\n         * @param {Object} options - the options\n         * @param {String} dataUrl - the url the image was retrieved from, if any.\n         * @param {String} postData - HTTP POST data in k=v&k2=v2... form or null\n         * @return {Object} options - A dictionary of keyword arguments sufficient\n         *      to configure this tile sources constructor.\n         */\n        configure: function (options, dataUrl, postData) {\n            return options;\n        },\n        /**\n         * Responsible for retrieving, and caching the\n         * image metadata pertinent to this TileSources implementation.\n         * @function\n         * @param {String} url\n         * @throws {Error}\n         */\n        getImageInfo: function (url) {\n            var image = this._image = new Image();\n            var _this = this;\n\n            if (this.crossOriginPolicy) {\n                image.crossOrigin = this.crossOriginPolicy;\n            }\n            if (this.ajaxWithCredentials) {\n                image.useCredentials = this.ajaxWithCredentials;\n            }\n\n            $.addEvent(image, 'load', function () {\n                _this.width = image.naturalWidth;\n                _this.height = image.naturalHeight;\n                _this.aspectRatio = _this.width / _this.height;\n                _this.dimensions = new $.Point(_this.width, _this.height);\n                _this._tileWidth = _this.width;\n                _this._tileHeight = _this.height;\n                _this.tileOverlap = 0;\n                _this.minLevel = 0;\n                _this.levels = _this._buildLevels();\n                _this.maxLevel = _this.levels.length - 1;\n\n                _this.ready = true;\n\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('ready', {tileSource: _this});\n            });\n\n            $.addEvent(image, 'error', function () {\n                // Note: this event is documented elsewhere, in TileSource\n                _this.raiseEvent('open-failed', {\n                    message: \"Error loading image at \" + url,\n                    source: url\n                });\n            });\n\n            image.src = url;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getLevelScale: function (level) {\n            var levelScale = NaN;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                levelScale =\n                        this.levels[level].width /\n                        this.levels[this.maxLevel].width;\n            }\n            return levelScale;\n        },\n        /**\n         * @function\n         * @param {Number} level\n         */\n        getNumTiles: function (level) {\n            var scale = this.getLevelScale(level);\n            if (scale) {\n                return new $.Point(1, 1);\n            } else {\n                return new $.Point(0, 0);\n            }\n        },\n        /**\n         * Retrieves a tile url\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getTileUrl: function (level, x, y) {\n            var url = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                url = this.levels[level].url;\n            }\n            return url;\n        },\n        /**\n         * Retrieves a tile context 2D\n         * @function\n         * @param {Number} level Level of the tile\n         * @param {Number} x x coordinate of the tile\n         * @param {Number} y y coordinate of the tile\n         */\n        getContext2D: function (level, x, y) {\n            var context = null;\n            if (level >= this.minLevel && level <= this.maxLevel) {\n                context = this.levels[level].context2D;\n            }\n            return context;\n        },\n        /**\n         * Destroys ImageTileSource\n         * @function\n         */\n        destroy: function () {\n            this._freeupCanvasMemory();\n        },\n\n        // private\n        //\n        // Builds the different levels of the pyramid if possible\n        // (i.e. if canvas API enabled and no canvas tainting issue).\n        _buildLevels: function () {\n            var levels = [{\n                    url: this._image.src,\n                    width: this._image.naturalWidth,\n                    height:  this._image.naturalHeight\n                }];\n\n            if (!this.buildPyramid || !$.supportsCanvas || !this.useCanvas) {\n                // We don't need the image anymore. Allows it to be GC.\n                delete this._image;\n                return levels;\n            }\n\n            var currentWidth = this._image.naturalWidth;\n            var currentHeight = this._image.naturalHeight;\n\n\n            var bigCanvas = document.createElement(\"canvas\");\n            var bigContext = bigCanvas.getContext(\"2d\");\n\n            bigCanvas.width = currentWidth;\n            bigCanvas.height = currentHeight;\n            bigContext.drawImage(this._image, 0, 0, currentWidth, currentHeight);\n            // We cache the context of the highest level because the browser\n            // is a lot faster at downsampling something it already has\n            // downsampled before.\n            levels[0].context2D = bigContext;\n            // We don't need the image anymore. Allows it to be GC.\n            delete this._image;\n\n            if ($.isCanvasTainted(bigCanvas)) {\n                // If the canvas is tainted, we can't compute the pyramid.\n                return levels;\n            }\n\n            // We build smaller levels until either width or height becomes\n            // 1 pixel wide.\n            while (currentWidth >= 2 && currentHeight >= 2) {\n                currentWidth = Math.floor(currentWidth / 2);\n                currentHeight = Math.floor(currentHeight / 2);\n                var smallCanvas = document.createElement(\"canvas\");\n                var smallContext = smallCanvas.getContext(\"2d\");\n                smallCanvas.width = currentWidth;\n                smallCanvas.height = currentHeight;\n                smallContext.drawImage(bigCanvas, 0, 0, currentWidth, currentHeight);\n\n                levels.splice(0, 0, {\n                    context2D: smallContext,\n                    width: currentWidth,\n                    height: currentHeight\n                });\n\n                bigCanvas = smallCanvas;\n                bigContext = smallContext;\n            }\n            return levels;\n        },\n        /**\n         * Free up canvas memory\n         * (iOS 12 or higher on 2GB RAM device has only 224MB canvas memory,\n         * and Safari keeps canvas until its height and width will be set to 0).\n         * @function\n         */\n        _freeupCanvasMemory: function () {\n            for (var i = 0; i < this.levels.length; i++) {\n                if(this.levels[i].context2D){\n                    this.levels[i].context2D.canvas.height = 0;\n                    this.levels[i].context2D.canvas.width = 0;\n                }\n            }\n        },\n    });\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - TileSourceCollection\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n// deprecated\n$.TileSourceCollection = function(tileSize, tileSources, rows, layout) {\n    $.console.error('TileSourceCollection is deprecated; use World instead');\n};\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Button\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * An enumeration of button states\n * @member ButtonState\n * @memberof OpenSeadragon\n * @static\n * @type {Object}\n * @property {Number} REST\n * @property {Number} GROUP\n * @property {Number} HOVER\n * @property {Number} DOWN\n */\n$.ButtonState = {\n    REST:   0,\n    GROUP:  1,\n    HOVER:  2,\n    DOWN:   3\n};\n\n/**\n * @class Button\n * @classdesc Manages events, hover states for individual buttons, tool-tips, as well\n * as fading the buttons out when the user has not interacted with them\n * for a specified period.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @param {Object} options\n * @param {Element} [options.element=null] Element to use as the button. If not specified, an HTML &lt;div&gt; element is created.\n * @param {String} [options.tooltip=null] Provides context help for the button when the\n *  user hovers over it.\n * @param {String} [options.srcRest=null] URL of image to use in 'rest' state.\n * @param {String} [options.srcGroup=null] URL of image to use in 'up' state.\n * @param {String} [options.srcHover=null] URL of image to use in 'hover' state.\n * @param {String} [options.srcDown=null] URL of image to use in 'down' state.\n * @param {Number} [options.fadeDelay=0] How long to wait before fading.\n * @param {Number} [options.fadeLength=2000] How long should it take to fade the button.\n * @param {OpenSeadragon.EventHandler} [options.onPress=null] Event handler callback for {@link OpenSeadragon.Button.event:press}.\n * @param {OpenSeadragon.EventHandler} [options.onRelease=null] Event handler callback for {@link OpenSeadragon.Button.event:release}.\n * @param {OpenSeadragon.EventHandler} [options.onClick=null] Event handler callback for {@link OpenSeadragon.Button.event:click}.\n * @param {OpenSeadragon.EventHandler} [options.onEnter=null] Event handler callback for {@link OpenSeadragon.Button.event:enter}.\n * @param {OpenSeadragon.EventHandler} [options.onExit=null] Event handler callback for {@link OpenSeadragon.Button.event:exit}.\n * @param {OpenSeadragon.EventHandler} [options.onFocus=null] Event handler callback for {@link OpenSeadragon.Button.event:focus}.\n * @param {OpenSeadragon.EventHandler} [options.onBlur=null] Event handler callback for {@link OpenSeadragon.Button.event:blur}.\n * @param {Object} [options.userData=null] Arbitrary object to be passed unchanged to any attached handler methods.\n */\n$.Button = function( options ) {\n\n    var _this = this;\n\n    $.EventSource.call( this );\n\n    $.extend( true, this, {\n\n        tooltip:            null,\n        srcRest:            null,\n        srcGroup:           null,\n        srcHover:           null,\n        srcDown:            null,\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        /**\n         * How long to wait before fading.\n         * @member {Number} fadeDelay\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeDelay:          0,\n        /**\n         * How long should it take to fade the button.\n         * @member {Number} fadeLength\n         * @memberof OpenSeadragon.Button#\n         */\n        fadeLength:         2000,\n        onPress:            null,\n        onRelease:          null,\n        onClick:            null,\n        onEnter:            null,\n        onExit:             null,\n        onFocus:            null,\n        onBlur:             null,\n        userData:           null\n\n    }, options );\n\n    /**\n     * The button element.\n     * @member {Element} element\n     * @memberof OpenSeadragon.Button#\n     */\n    this.element = options.element || $.makeNeutralElement(\"div\");\n\n    //if the user has specified the element to bind the control to explicitly\n    //then do not add the default control images\n    if ( !options.element ) {\n        this.imgRest      = $.makeTransparentImage( this.srcRest );\n        this.imgGroup     = $.makeTransparentImage( this.srcGroup );\n        this.imgHover     = $.makeTransparentImage( this.srcHover );\n        this.imgDown      = $.makeTransparentImage( this.srcDown );\n\n        this.imgRest.alt  =\n        this.imgGroup.alt =\n        this.imgHover.alt =\n        this.imgDown.alt  =\n            this.tooltip;\n\n        // Allow pointer events to pass through the img elements so implicit\n        //   pointer capture works on touch devices\n        $.setElementPointerEventsNone( this.imgRest );\n        $.setElementPointerEventsNone( this.imgGroup );\n        $.setElementPointerEventsNone( this.imgHover );\n        $.setElementPointerEventsNone( this.imgDown );\n\n        this.element.style.position = \"relative\";\n        $.setElementTouchActionNone( this.element );\n\n        this.imgGroup.style.position =\n        this.imgHover.style.position =\n        this.imgDown.style.position  =\n            \"absolute\";\n\n        this.imgGroup.style.top =\n        this.imgHover.style.top =\n        this.imgDown.style.top  =\n            \"0px\";\n\n        this.imgGroup.style.left =\n        this.imgHover.style.left =\n        this.imgDown.style.left  =\n            \"0px\";\n\n        this.imgHover.style.visibility =\n        this.imgDown.style.visibility  =\n            \"hidden\";\n\n        if ($.Browser.vendor === $.BROWSERS.FIREFOX && $.Browser.version < 3) {\n            this.imgGroup.style.top =\n            this.imgHover.style.top =\n            this.imgDown.style.top  =\n                \"\";\n        }\n\n        this.element.appendChild( this.imgRest );\n        this.element.appendChild( this.imgGroup );\n        this.element.appendChild( this.imgHover );\n        this.element.appendChild( this.imgDown );\n    }\n\n\n    this.addHandler(\"press\", this.onPress);\n    this.addHandler(\"release\", this.onRelease);\n    this.addHandler(\"click\", this.onClick);\n    this.addHandler(\"enter\", this.onEnter);\n    this.addHandler(\"exit\", this.onExit);\n    this.addHandler(\"focus\", this.onFocus);\n    this.addHandler(\"blur\", this.onBlur);\n\n    /**\n     * The button's current state.\n     * @member {OpenSeadragon.ButtonState} currentState\n     * @memberof OpenSeadragon.Button#\n     */\n    this.currentState = $.ButtonState.GROUP;\n\n    // When the button last began to fade.\n    this.fadeBeginTime  = null;\n    // Whether this button should fade after user stops interacting with the viewport.\n    this.shouldFade     = false;\n\n    this.element.style.display  = \"inline-block\";\n    this.element.style.position = \"relative\";\n    this.element.title          = this.tooltip;\n\n    /**\n     * Tracks mouse/touch/key events on the button.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.Button#\n     */\n    this.tracker = new $.MouseTracker({\n\n        userData:           'Button.tracker',\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n\n        enterHandler: function( event ) {\n            if ( event.insideElementPressed ) {\n                inTo( _this, $.ButtonState.DOWN );\n                /**\n                 * Raised when the cursor enters the Button element.\n                 *\n                 * @event enter\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"enter\", { originalEvent: event.originalEvent } );\n            } else if ( !event.buttonDownAny ) {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        focusHandler: function ( event ) {\n            _this.tracker.enterHandler( event );\n            /**\n             * Raised when the Button element receives focus.\n             *\n             * @event focus\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"focus\", { originalEvent: event.originalEvent } );\n        },\n\n        leaveHandler: function( event ) {\n            outTo( _this, $.ButtonState.GROUP );\n            if ( event.insideElementPressed ) {\n                /**\n                 * Raised when the cursor leaves the Button element.\n                 *\n                 * @event exit\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"exit\", { originalEvent: event.originalEvent } );\n            }\n        },\n\n        blurHandler: function ( event ) {\n            _this.tracker.leaveHandler( event );\n            /**\n             * Raised when the Button element loses focus.\n             *\n             * @event blur\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"blur\", { originalEvent: event.originalEvent } );\n        },\n\n        pressHandler: function ( event ) {\n            inTo( _this, $.ButtonState.DOWN );\n            /**\n             * Raised when a mouse button is pressed or touch occurs in the Button element.\n             *\n             * @event press\n             * @memberof OpenSeadragon.Button\n             * @type {object}\n             * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n             * @property {Object} originalEvent - The original DOM event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            _this.raiseEvent( \"press\", { originalEvent: event.originalEvent } );\n        },\n\n        releaseHandler: function( event ) {\n            if ( event.insideElementPressed && event.insideElementReleased ) {\n                outTo( _this, $.ButtonState.HOVER );\n                /**\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n            } else if ( event.insideElementPressed ) {\n                outTo( _this, $.ButtonState.GROUP );\n            } else {\n                inTo( _this, $.ButtonState.HOVER );\n            }\n        },\n\n        clickHandler: function( event ) {\n            if ( event.quick ) {\n                /**\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent(\"click\", { originalEvent: event.originalEvent });\n            }\n        },\n\n        keyHandler: function( event ){\n            //console.log( \"%s : handling key %s!\", _this.tooltip, event.keyCode);\n            if( 13 === event.keyCode ){\n                /***\n                 * Raised when a mouse button is pressed and released or touch is initiated and ended in the Button element within the time and distance threshold.\n                 *\n                 * @event click\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"click\", { originalEvent: event.originalEvent } );\n                /***\n                 * Raised when the mouse button is released or touch ends in the Button element.\n                 *\n                 * @event release\n                 * @memberof OpenSeadragon.Button\n                 * @type {object}\n                 * @property {OpenSeadragon.Button} eventSource - A reference to the Button which raised the event.\n                 * @property {Object} originalEvent - The original DOM event.\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                _this.raiseEvent( \"release\", { originalEvent: event.originalEvent } );\n\n                event.preventDefault = true;\n            } else{\n                event.preventDefault = false;\n            }\n        }\n\n    });\n\n    outTo( this, $.ButtonState.REST );\n};\n\n$.extend( $.Button.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.Button.prototype */{\n\n    /**\n     * Used by a button container element (e.g. a ButtonGroup) to transition the button state\n     * to ButtonState.GROUP.\n     * @function\n     */\n    notifyGroupEnter: function() {\n        inTo( this, $.ButtonState.GROUP );\n    },\n\n    /**\n     * Used by a button container element (e.g. a ButtonGroup) to transition the button state\n     * to ButtonState.REST.\n     * @function\n     */\n    notifyGroupExit: function() {\n        outTo( this, $.ButtonState.REST );\n    },\n\n    /**\n     * @function\n     */\n    disable: function(){\n        this.notifyGroupExit();\n        this.element.disabled = true;\n        $.setElementOpacity( this.element, 0.2, true );\n    },\n\n    /**\n     * @function\n     */\n    enable: function(){\n        this.element.disabled = false;\n        $.setElementOpacity( this.element, 1.0, true );\n        this.notifyGroupEnter();\n    },\n\n    destroy: function() {\n        if (this.imgRest) {\n            this.element.removeChild(this.imgRest);\n            this.imgRest = null;\n        }\n        if (this.imgGroup) {\n            this.element.removeChild(this.imgGroup);\n            this.imgGroup = null;\n        }\n        if (this.imgHover) {\n            this.element.removeChild(this.imgHover);\n            this.imgHover = null;\n        }\n        if (this.imgDown) {\n            this.element.removeChild(this.imgDown);\n            this.imgDown = null;\n        }\n        this.removeAllHandlers();\n        this.tracker.destroy();\n        this.element = null;\n    }\n\n});\n\n\nfunction scheduleFade( button ) {\n    $.requestAnimationFrame(function(){\n        updateFade( button );\n    });\n}\n\nfunction updateFade( button ) {\n    var currentTime,\n        deltaTime,\n        opacity;\n\n    if ( button.shouldFade ) {\n        currentTime = $.now();\n        deltaTime   = currentTime - button.fadeBeginTime;\n        opacity     = 1.0 - deltaTime / button.fadeLength;\n        opacity     = Math.min( 1.0, opacity );\n        opacity     = Math.max( 0.0, opacity );\n\n        if( button.imgGroup ){\n            $.setElementOpacity( button.imgGroup, opacity, true );\n        }\n        if ( opacity > 0 ) {\n            // fade again\n            scheduleFade( button );\n        }\n    }\n}\n\nfunction beginFading( button ) {\n    button.shouldFade = true;\n    button.fadeBeginTime = $.now() + button.fadeDelay;\n    window.setTimeout( function(){\n        scheduleFade( button );\n    }, button.fadeDelay );\n}\n\nfunction stopFading( button ) {\n    button.shouldFade = false;\n    if( button.imgGroup ){\n        $.setElementOpacity( button.imgGroup, 1.0, true );\n    }\n}\n\nfunction inTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState >= $.ButtonState.GROUP &&\n         button.currentState === $.ButtonState.REST ) {\n        stopFading( button );\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState >= $.ButtonState.HOVER &&\n         button.currentState === $.ButtonState.GROUP ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState >= $.ButtonState.DOWN &&\n         button.currentState === $.ButtonState.HOVER ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"\";\n        }\n        button.currentState = $.ButtonState.DOWN;\n    }\n}\n\n\nfunction outTo( button, newState ) {\n\n    if( button.element.disabled ){\n        return;\n    }\n\n    if ( newState <= $.ButtonState.HOVER &&\n         button.currentState === $.ButtonState.DOWN ) {\n        if( button.imgDown ){\n            button.imgDown.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.HOVER;\n    }\n\n    if ( newState <= $.ButtonState.GROUP &&\n         button.currentState === $.ButtonState.HOVER ) {\n        if( button.imgHover ){\n            button.imgHover.style.visibility = \"hidden\";\n        }\n        button.currentState = $.ButtonState.GROUP;\n    }\n\n    if ( newState <= $.ButtonState.REST &&\n         button.currentState === $.ButtonState.GROUP ) {\n        beginFading( button );\n        button.currentState = $.ButtonState.REST;\n    }\n}\n\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ButtonGroup\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n/**\n * @class ButtonGroup\n * @classdesc Manages events on groups of buttons.\n *\n * @memberof OpenSeadragon\n * @param {Object} options - A dictionary of settings applied against the entire group of buttons.\n * @param {Array} options.buttons Array of buttons\n * @param {Element} [options.element] Element to use as the container\n **/\n$.ButtonGroup = function( options ) {\n\n    $.extend( true, this, {\n        /**\n         * An array containing the buttons themselves.\n         * @member {Array} buttons\n         * @memberof OpenSeadragon.ButtonGroup#\n         */\n        buttons:            [],\n        clickTimeThreshold: $.DEFAULT_SETTINGS.clickTimeThreshold,\n        clickDistThreshold: $.DEFAULT_SETTINGS.clickDistThreshold,\n        labelText:          \"\"\n    }, options );\n\n    // copy the button elements  TODO: Why?\n    var buttons = this.buttons.concat([]),\n        _this = this,\n        i;\n\n    /**\n     * The shared container for the buttons.\n     * @member {Element} element\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.element = options.element || $.makeNeutralElement( \"div\" );\n\n    // TODO What if there IS an options.group specified?\n    if( !options.group ){\n        this.element.style.display = \"inline-block\";\n        //this.label   = $.makeNeutralElement( \"label\" );\n        //TODO: support labels for ButtonGroups\n        //this.label.innerHTML = this.labelText;\n        //this.element.appendChild( this.label );\n        for ( i = 0; i < buttons.length; i++ ) {\n            this.element.appendChild( buttons[ i ].element );\n        }\n    }\n\n    $.setElementTouchActionNone( this.element );\n\n    /**\n     * Tracks mouse/touch/key events across the group of buttons.\n     * @member {OpenSeadragon.MouseTracker} tracker\n     * @memberof OpenSeadragon.ButtonGroup#\n     */\n    this.tracker = new $.MouseTracker({\n        userData:           'ButtonGroup.tracker',\n        element:            this.element,\n        clickTimeThreshold: this.clickTimeThreshold,\n        clickDistThreshold: this.clickDistThreshold,\n        enterHandler: function ( event ) {\n            var i;\n            for ( i = 0; i < _this.buttons.length; i++ ) {\n                _this.buttons[ i ].notifyGroupEnter();\n            }\n        },\n        leaveHandler: function ( event ) {\n            var i;\n            if ( !event.insideElementPressed ) {\n                for ( i = 0; i < _this.buttons.length; i++ ) {\n                    _this.buttons[ i ].notifyGroupExit();\n                }\n            }\n        },\n    });\n};\n\n/** @lends OpenSeadragon.ButtonGroup.prototype */\n$.ButtonGroup.prototype = {\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateEnter: function() {\n        this.tracker.enterHandler( { eventSource: this.tracker } );\n    },\n\n    /**\n     * TODO: Figure out why this is used on the public API and if a more useful\n     * api can be created.\n     * @function\n     * @private\n     */\n    emulateLeave: function() {\n        this.tracker.leaveHandler( { eventSource: this.tracker } );\n    },\n\n    destroy: function() {\n        while (this.buttons.length) {\n            var button = this.buttons.pop();\n            this.element.removeChild(button.element);\n            button.destroy();\n        }\n        this.tracker.destroy();\n        this.element = null;\n    }\n};\n\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Rect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n/**\n * @class Rect\n * @classdesc A Rectangle is described by it top left coordinates (x, y), width,\n * height and degrees of rotation around (x, y).\n * Note that the coordinate system used is the one commonly used with images:\n * x increases when going to the right\n * y increases when going to the bottom\n * degrees increases clockwise with 0 being the horizontal\n *\n * The constructor normalizes the rectangle to always have 0 <= degrees < 90\n *\n * @memberof OpenSeadragon\n * @param {Number} [x=0] The vector component 'x'.\n * @param {Number} [y=0] The vector component 'y'.\n * @param {Number} [width=0] The vector component 'width'.\n * @param {Number} [height=0] The vector component 'height'.\n * @param {Number} [degrees=0] Rotation of the rectangle around (x,y) in degrees.\n */\n$.Rect = function(x, y, width, height, degrees) {\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.x = typeof (x) === \"number\" ? x : 0;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.y = typeof (y) === \"number\" ? y : 0;\n    /**\n     * The vector component 'width'.\n     * @member {Number} width\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.width  = typeof (width) === \"number\" ? width : 0;\n    /**\n     * The vector component 'height'.\n     * @member {Number} height\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.height = typeof (height) === \"number\" ? height : 0;\n\n    /**\n     * The rotation of the rectangle, in degrees.\n     * @member {Number} degrees\n     * @memberof OpenSeadragon.Rect#\n     */\n    this.degrees = typeof (degrees) === \"number\" ? degrees : 0;\n\n    // Normalizes the rectangle.\n    this.degrees = $.positiveModulo(this.degrees, 360);\n    var newTopLeft, newWidth;\n    if (this.degrees >= 270) {\n        newTopLeft = this.getTopRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 270;\n    } else if (this.degrees >= 180) {\n        newTopLeft = this.getBottomRight();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        this.degrees -= 180;\n    } else if (this.degrees >= 90) {\n        newTopLeft = this.getBottomLeft();\n        this.x = newTopLeft.x;\n        this.y = newTopLeft.y;\n        newWidth = this.height;\n        this.height = this.width;\n        this.width = newWidth;\n        this.degrees -= 90;\n    }\n};\n\n/**\n * Builds a rectangle having the 3 specified points as summits.\n * @static\n * @memberof OpenSeadragon.Rect\n * @param {OpenSeadragon.Point} topLeft\n * @param {OpenSeadragon.Point} topRight\n * @param {OpenSeadragon.Point} bottomLeft\n * @returns {OpenSeadragon.Rect}\n */\n$.Rect.fromSummits = function(topLeft, topRight, bottomLeft) {\n    var width = topLeft.distanceTo(topRight);\n    var height = topLeft.distanceTo(bottomLeft);\n    var diff = topRight.minus(topLeft);\n    var radians = Math.atan(diff.y / diff.x);\n    if (diff.x < 0) {\n        radians += Math.PI;\n    } else if (diff.y < 0) {\n        radians += 2 * Math.PI;\n    }\n    return new $.Rect(\n        topLeft.x,\n        topLeft.y,\n        width,\n        height,\n        radians / Math.PI * 180);\n};\n\n/** @lends OpenSeadragon.Rect.prototype */\n$.Rect.prototype = {\n    /**\n     * @function\n     * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n     */\n    clone: function() {\n        return new $.Rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * The aspect ratio is simply the ratio of width to height.\n     * @function\n     * @returns {Number} The ratio of width to height.\n     */\n    getAspectRatio: function() {\n        return this.width / this.height;\n    },\n\n    /**\n     * Provides the coordinates of the upper-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the upper-left corner of\n     *  the rectangle.\n     */\n    getTopLeft: function() {\n        return new $.Point(\n            this.x,\n            this.y\n        );\n    },\n\n    /**\n     * Provides the coordinates of the bottom-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-right corner of\n     *  the rectangle.\n     */\n    getBottomRight: function() {\n        return new $.Point(this.x + this.width, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the top-right corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the top-right corner of\n     *  the rectangle.\n     */\n    getTopRight: function() {\n        return new $.Point(this.x + this.width, this.y)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Provides the coordinates of the bottom-left corner of the rectangle as a\n     * point.\n     * @function\n     * @returns {OpenSeadragon.Point} The coordinate of the bottom-left corner of\n     *  the rectangle.\n     */\n    getBottomLeft: function() {\n        return new $.Point(this.x, this.y + this.height)\n            .rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Computes the center of the rectangle.\n     * @function\n     * @returns {OpenSeadragon.Point} The center of the rectangle as represented\n     *  as represented by a 2-dimensional vector (x,y)\n     */\n    getCenter: function() {\n        return new $.Point(\n            this.x + this.width / 2.0,\n            this.y + this.height / 2.0\n        ).rotate(this.degrees, this.getTopLeft());\n    },\n\n    /**\n     * Returns the width and height component as a vector OpenSeadragon.Point\n     * @function\n     * @returns {OpenSeadragon.Point} The 2 dimensional vector representing the\n     *  width and height of the rectangle.\n     */\n    getSize: function() {\n        return new $.Point(this.width, this.height);\n    },\n\n    /**\n     * Determines if two Rectangles have equivalent components.\n     * @function\n     * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n     * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n     */\n    equals: function(other) {\n        return (other instanceof $.Rect) &&\n            this.x === other.x &&\n            this.y === other.y &&\n            this.width === other.width &&\n            this.height === other.height &&\n            this.degrees === other.degrees;\n    },\n\n    /**\n    * Multiply all dimensions (except degrees) in this Rect by a factor and\n    * return a new Rect.\n    * @function\n    * @param {Number} factor The factor to multiply vector components.\n    * @returns {OpenSeadragon.Rect} A new rect representing the multiplication\n    *  of the vector components by the factor\n    */\n    times: function(factor) {\n        return new $.Rect(\n            this.x * factor,\n            this.y * factor,\n            this.width * factor,\n            this.height * factor,\n            this.degrees);\n    },\n\n    /**\n    * Translate/move this Rect by a vector and return new Rect.\n    * @function\n    * @param {OpenSeadragon.Point} delta The translation vector.\n    * @returns {OpenSeadragon.Rect} A new rect with altered position\n    */\n    translate: function(delta) {\n        return new $.Rect(\n            this.x + delta.x,\n            this.y + delta.y,\n            this.width,\n            this.height,\n            this.degrees);\n    },\n\n    /**\n     * Returns the smallest rectangle that will contain this and the given\n     * rectangle bounding boxes.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} The new rectangle.\n     */\n    union: function(rect) {\n        var thisBoundingBox = this.getBoundingBox();\n        var otherBoundingBox = rect.getBoundingBox();\n\n        var left = Math.min(thisBoundingBox.x, otherBoundingBox.x);\n        var top = Math.min(thisBoundingBox.y, otherBoundingBox.y);\n        var right = Math.max(\n            thisBoundingBox.x + thisBoundingBox.width,\n            otherBoundingBox.x + otherBoundingBox.width);\n        var bottom = Math.max(\n            thisBoundingBox.y + thisBoundingBox.height,\n            otherBoundingBox.y + otherBoundingBox.height);\n\n        return new $.Rect(\n            left,\n            top,\n            right - left,\n            bottom - top);\n    },\n\n    /**\n     * Returns the bounding box of the intersection of this rectangle with the\n     * given rectangle.\n     * @param {OpenSeadragon.Rect} rect\n     * @return {OpenSeadragon.Rect} the bounding box of the intersection\n     * or null if the rectangles don't intersect.\n     */\n    intersection: function(rect) {\n        // Simplified version of Weiler Atherton clipping algorithm\n        // https://en.wikipedia.org/wiki/Weiler%E2%80%93Atherton_clipping_algorithm\n        // Because we just want the bounding box of the intersection,\n        // we can just compute the bounding box of:\n        // 1. all the summits of this which are inside rect\n        // 2. all the summits of rect which are inside this\n        // 3. all the intersections of rect and this\n        var EPSILON = 0.0000000001;\n\n        var intersectionPoints = [];\n\n        var thisTopLeft = this.getTopLeft();\n        if (rect.containsPoint(thisTopLeft, EPSILON)) {\n            intersectionPoints.push(thisTopLeft);\n        }\n        var thisTopRight = this.getTopRight();\n        if (rect.containsPoint(thisTopRight, EPSILON)) {\n            intersectionPoints.push(thisTopRight);\n        }\n        var thisBottomLeft = this.getBottomLeft();\n        if (rect.containsPoint(thisBottomLeft, EPSILON)) {\n            intersectionPoints.push(thisBottomLeft);\n        }\n        var thisBottomRight = this.getBottomRight();\n        if (rect.containsPoint(thisBottomRight, EPSILON)) {\n            intersectionPoints.push(thisBottomRight);\n        }\n\n        var rectTopLeft = rect.getTopLeft();\n        if (this.containsPoint(rectTopLeft, EPSILON)) {\n            intersectionPoints.push(rectTopLeft);\n        }\n        var rectTopRight = rect.getTopRight();\n        if (this.containsPoint(rectTopRight, EPSILON)) {\n            intersectionPoints.push(rectTopRight);\n        }\n        var rectBottomLeft = rect.getBottomLeft();\n        if (this.containsPoint(rectBottomLeft, EPSILON)) {\n            intersectionPoints.push(rectBottomLeft);\n        }\n        var rectBottomRight = rect.getBottomRight();\n        if (this.containsPoint(rectBottomRight, EPSILON)) {\n            intersectionPoints.push(rectBottomRight);\n        }\n\n        var thisSegments = this._getSegments();\n        var rectSegments = rect._getSegments();\n        for (var i = 0; i < thisSegments.length; i++) {\n            var thisSegment = thisSegments[i];\n            for (var j = 0; j < rectSegments.length; j++) {\n                var rectSegment = rectSegments[j];\n                var intersect = getIntersection(thisSegment[0], thisSegment[1],\n                    rectSegment[0], rectSegment[1]);\n                if (intersect) {\n                    intersectionPoints.push(intersect);\n                }\n            }\n        }\n\n        // Get intersection point of segments [a,b] and [c,d]\n        function getIntersection(a, b, c, d) {\n            // http://stackoverflow.com/a/1968345/1440403\n            var abVector = b.minus(a);\n            var cdVector = d.minus(c);\n\n            var denom = -cdVector.x * abVector.y + abVector.x * cdVector.y;\n            if (denom === 0) {\n                return null;\n            }\n\n            var s = (abVector.x * (a.y - c.y) - abVector.y * (a.x - c.x)) / denom;\n            var t = (cdVector.x * (a.y - c.y) - cdVector.y * (a.x - c.x)) / denom;\n\n            if (-EPSILON <= s && s <= 1 - EPSILON &&\n                -EPSILON <= t && t <= 1 - EPSILON) {\n                return new $.Point(a.x + t * abVector.x, a.y + t * abVector.y);\n            }\n            return null;\n        }\n\n        if (intersectionPoints.length === 0) {\n            return null;\n        }\n\n        var minX = intersectionPoints[0].x;\n        var maxX = intersectionPoints[0].x;\n        var minY = intersectionPoints[0].y;\n        var maxY = intersectionPoints[0].y;\n        for (var k = 1; k < intersectionPoints.length; k++) {\n            var point = intersectionPoints[k];\n            if (point.x < minX) {\n                minX = point.x;\n            }\n            if (point.x > maxX) {\n                maxX = point.x;\n            }\n            if (point.y < minY) {\n                minY = point.y;\n            }\n            if (point.y > maxY) {\n                maxY = point.y;\n            }\n        }\n        return new $.Rect(minX, minY, maxX - minX, maxY - minY);\n    },\n\n    // private\n    _getSegments: function() {\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        return [[topLeft, topRight],\n            [topRight, bottomRight],\n            [bottomRight, bottomLeft],\n            [bottomLeft, topLeft]];\n    },\n\n    /**\n     * Rotates a rectangle around a point.\n     * @function\n     * @param {Number} degrees The angle in degrees to rotate.\n     * @param {OpenSeadragon.Point} [pivot] The point about which to rotate.\n     * Defaults to the center of the rectangle.\n     * @return {OpenSeadragon.Rect}\n     */\n    rotate: function(degrees, pivot) {\n        degrees = $.positiveModulo(degrees, 360);\n        if (degrees === 0) {\n            return this.clone();\n        }\n\n        pivot = pivot || this.getCenter();\n        var newTopLeft = this.getTopLeft().rotate(degrees, pivot);\n        var newTopRight = this.getTopRight().rotate(degrees, pivot);\n\n        var diff = newTopRight.minus(newTopLeft);\n        // Handle floating point error\n        diff = diff.apply(function(x) {\n            var EPSILON = 1e-15;\n            return Math.abs(x) < EPSILON ? 0 : x;\n        });\n        var radians = Math.atan(diff.y / diff.x);\n        if (diff.x < 0) {\n            radians += Math.PI;\n        } else if (diff.y < 0) {\n            radians += 2 * Math.PI;\n        }\n        return new $.Rect(\n            newTopLeft.x,\n            newTopLeft.y,\n            this.width,\n            this.height,\n            radians / Math.PI * 180);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle.\n     * @returns {OpenSeadragon.Rect}\n     */\n    getBoundingBox: function() {\n        if (this.degrees === 0) {\n            return this.clone();\n        }\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var bottomRight = this.getBottomRight();\n        var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n        var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n        return new $.Rect(\n            minX,\n            minY,\n            maxX - minX,\n            maxY - minY);\n    },\n\n    /**\n     * Retrieves the smallest horizontal (degrees=0) rectangle which contains\n     * this rectangle and has integers x, y, width and height\n     * @returns {OpenSeadragon.Rect}\n     */\n    getIntegerBoundingBox: function() {\n        var boundingBox = this.getBoundingBox();\n        var x = Math.floor(boundingBox.x);\n        var y = Math.floor(boundingBox.y);\n        var width = Math.ceil(boundingBox.width + boundingBox.x - x);\n        var height = Math.ceil(boundingBox.height + boundingBox.y - y);\n        return new $.Rect(x, y, width, height);\n    },\n\n    /**\n     * Determines whether a point is inside this rectangle (edge included).\n     * @function\n     * @param {OpenSeadragon.Point} point\n     * @param {Number} [epsilon=0] the margin of error allowed\n     * @returns {Boolean} true if the point is inside this rectangle, false\n     * otherwise.\n     */\n    containsPoint: function(point, epsilon) {\n        epsilon = epsilon || 0;\n\n        // See http://stackoverflow.com/a/2752754/1440403 for explanation\n        var topLeft = this.getTopLeft();\n        var topRight = this.getTopRight();\n        var bottomLeft = this.getBottomLeft();\n        var topDiff = topRight.minus(topLeft);\n        var leftDiff = bottomLeft.minus(topLeft);\n\n        return ((point.x - topLeft.x) * topDiff.x +\n            (point.y - topLeft.y) * topDiff.y >= -epsilon) &&\n\n            ((point.x - topRight.x) * topDiff.x +\n            (point.y - topRight.y) * topDiff.y <= epsilon) &&\n\n            ((point.x - topLeft.x) * leftDiff.x +\n            (point.y - topLeft.y) * leftDiff.y >= -epsilon) &&\n\n            ((point.x - bottomLeft.x) * leftDiff.x +\n            (point.y - bottomLeft.y) * leftDiff.y <= epsilon);\n    },\n\n    /**\n     * Provides a string representation of the rectangle which is useful for\n     * debugging.\n     * @function\n     * @returns {String} A string representation of the rectangle.\n     */\n    toString: function() {\n        return \"[\" +\n            (Math.round(this.x * 100) / 100) + \", \" +\n            (Math.round(this.y * 100) / 100) + \", \" +\n            (Math.round(this.width * 100) / 100) + \"x\" +\n            (Math.round(this.height * 100) / 100) + \", \" +\n            (Math.round(this.degrees * 100) / 100) + \"deg\" +\n            \"]\";\n    }\n};\n\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - ReferenceStrip\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function ( $ ) {\n\n// dictionary from id to private properties\nvar THIS = {};\n\n/**\n *  The CollectionDrawer is a reimplementation if the Drawer API that\n *  focuses on allowing a viewport to be redefined as a collection\n *  of smaller viewports, defined by a clear number of rows and / or\n *  columns of which each item in the matrix of viewports has its own\n *  source.\n *\n *  This idea is a reexpression of the idea of dzi collections\n *  which allows a clearer algorithm to reuse the tile sources already\n *  supported by OpenSeadragon, in heterogenious or homogenious\n *  sequences just like mixed groups already supported by the viewer\n *  for the purpose of image sequnces.\n *\n *  TODO:   The difficult part of this feature is figuring out how to express\n *          this functionality as a combination of the functionality already\n *          provided by Drawer, Viewport, TileSource, and Navigator.  It may\n *          require better abstraction at those points in order to efficiently\n *          reuse those paradigms.\n */\n/**\n * @class ReferenceStrip\n * @memberof OpenSeadragon\n * @param {Object} options\n */\n$.ReferenceStrip = function ( options ) {\n\n    var _this       = this,\n        viewer      = options.viewer,\n        viewerSize  = $.getElementSize( viewer.element ),\n        element,\n        style,\n        i;\n\n    //We may need to create a new element and id if they did not\n    //provide the id for the existing element\n    if ( !options.id ) {\n        options.id              = 'referencestrip-' + $.now();\n        this.element            = $.makeNeutralElement( \"div\" );\n        this.element.id         = options.id;\n        this.element.className  = 'referencestrip';\n    }\n\n    options = $.extend( true, {\n        sizeRatio:  $.DEFAULT_SETTINGS.referenceStripSizeRatio,\n        position:   $.DEFAULT_SETTINGS.referenceStripPosition,\n        scroll:     $.DEFAULT_SETTINGS.referenceStripScroll,\n        clickTimeThreshold:  $.DEFAULT_SETTINGS.clickTimeThreshold\n    }, options, {\n        element:                this.element\n    } );\n\n    $.extend( this, options );\n    //Private state properties\n    THIS[this.id] = {\n        animating:           false\n    };\n\n    this.minPixelRatio = this.viewer.minPixelRatio;\n\n    this.element.tabIndex = 0;\n\n    style = this.element.style;\n    style.marginTop     = '0px';\n    style.marginRight   = '0px';\n    style.marginBottom  = '0px';\n    style.marginLeft    = '0px';\n    style.left          = '0px';\n    style.bottom        = '0px';\n    style.border        = '0px';\n    style.background    = '#000';\n    style.position      = 'relative';\n\n    $.setElementTouchActionNone( this.element );\n\n    $.setElementOpacity( this.element, 0.8 );\n\n    this.viewer = viewer;\n    this.tracker = new $.MouseTracker( {\n        userData:       'ReferenceStrip.tracker',\n        element:        this.element,\n        clickHandler:   $.delegate( this, onStripClick ),\n        dragHandler:    $.delegate( this, onStripDrag ),\n        scrollHandler:  $.delegate( this, onStripScroll ),\n        enterHandler:   $.delegate( this, onStripEnter ),\n        leaveHandler:   $.delegate( this, onStripLeave ),\n        keyDownHandler: $.delegate( this, onKeyDown ),\n        keyHandler:     $.delegate( this, onKeyPress ),\n        preProcessEventHandler: function (eventInfo) {\n            if (eventInfo.eventType === 'wheel') {\n                eventInfo.preventDefault = true;\n            }\n        }\n    } );\n\n    //Controls the position and orientation of the reference strip and sets the\n    //appropriate width and height\n    if ( options.width && options.height ) {\n        this.element.style.width  = options.width + 'px';\n        this.element.style.height = options.height + 'px';\n        viewer.addControl(\n            this.element,\n            { anchor: $.ControlAnchor.BOTTOM_LEFT }\n        );\n    } else {\n        if ( \"horizontal\" === options.scroll ) {\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.BOTTOM_LEFT }\n            );\n        } else {\n            this.element.style.height = (\n                viewerSize.y *\n                options.sizeRatio *\n                viewer.tileSources.length\n            ) + ( 12 * viewer.tileSources.length ) + 'px';\n\n            this.element.style.width = (\n                viewerSize.x *\n                options.sizeRatio\n            ) + 'px';\n\n            viewer.addControl(\n                this.element,\n                { anchor: $.ControlAnchor.TOP_LEFT }\n            );\n\n        }\n    }\n\n    this.panelWidth = ( viewerSize.x * this.sizeRatio ) + 8;\n    this.panelHeight = ( viewerSize.y * this.sizeRatio ) + 8;\n    this.panels = [];\n    this.miniViewers = {};\n\n    /*jshint loopfunc:true*/\n    for ( i = 0; i < viewer.tileSources.length; i++ ) {\n\n        element = $.makeNeutralElement( 'div' );\n        element.id = this.element.id + \"-\" + i;\n\n        element.style.width         = _this.panelWidth + 'px';\n        element.style.height        = _this.panelHeight + 'px';\n        element.style.display       = 'inline';\n        element.style['float']      = 'left'; //Webkit\n        element.style.cssFloat      = 'left'; //Firefox\n        element.style.styleFloat    = 'left'; //IE\n        element.style.padding       = '2px';\n        $.setElementTouchActionNone( element );\n        $.setElementPointerEventsNone( element );\n\n        this.element.appendChild( element );\n\n        element.activePanel = false;\n\n        this.panels.push( element );\n\n    }\n    loadPanels( this, this.scroll === 'vertical' ? viewerSize.y : viewerSize.x, 0 );\n    this.setFocus( 0 );\n\n};\n\n/** @lends OpenSeadragon.ReferenceStrip.prototype */\n$.ReferenceStrip.prototype = {\n\n    /**\n     * @function\n     */\n    setFocus: function ( page ) {\n        var element      = this.element.querySelector('#' + this.element.id + '-' + page ),\n            viewerSize   = $.getElementSize( this.viewer.canvas ),\n            scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n            scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n            offsetLeft   = -Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n            offsetTop    = -Number( this.element.style.marginTop.replace( 'px', '' ) ),\n            offset;\n\n        if ( this.currentSelected !== element ) {\n            if ( this.currentSelected ) {\n                this.currentSelected.style.background = '#000';\n            }\n            this.currentSelected = element;\n            this.currentSelected.style.background = '#999';\n\n            if ( 'horizontal' === this.scroll ) {\n                //right left\n                offset = ( Number( page ) ) * ( this.panelWidth + 3 );\n                if ( offset > offsetLeft + viewerSize.x - this.panelWidth ) {\n                    offset = Math.min( offset, ( scrollWidth - viewerSize.x ) );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                } else if ( offset < offsetLeft ) {\n                    offset = Math.max( 0, offset - viewerSize.x / 2 );\n                    this.element.style.marginLeft = -offset + 'px';\n                    loadPanels( this, viewerSize.x, -offset );\n                }\n            } else {\n                offset = ( Number( page ) ) * ( this.panelHeight + 3 );\n                if ( offset > offsetTop + viewerSize.y - this.panelHeight ) {\n                    offset = Math.min( offset, ( scrollHeight - viewerSize.y ) );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                } else if ( offset < offsetTop ) {\n                    offset = Math.max( 0, offset - viewerSize.y / 2 );\n                    this.element.style.marginTop = -offset + 'px';\n                    loadPanels( this, viewerSize.y, -offset );\n                }\n            }\n\n            this.currentPage = page;\n            onStripEnter.call( this, { eventSource: this.tracker } );\n        }\n    },\n\n    /**\n     * @function\n     */\n    update: function () {\n        if ( THIS[this.id].animating ) {\n            // $.console.log( 'image reference strip update' );\n            return true;\n        }\n        return false;\n    },\n\n    destroy: function() {\n        if (this.miniViewers) {\n          for (var key in this.miniViewers) {\n            this.miniViewers[key].destroy();\n          }\n        }\n\n        this.tracker.destroy();\n\n        if (this.element) {\n            this.viewer.removeControl( this.element );\n        }\n    }\n\n};\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripClick( event ) {\n    if ( event.quick ) {\n        var page;\n\n        if ( 'horizontal' === this.scroll ) {\n            page = Math.floor(event.position.x / this.panelWidth);\n        } else {\n            page = Math.floor(event.position.y / this.panelHeight);\n        }\n\n        this.viewer.goToPage( page );\n    }\n\n    this.element.focus();\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripDrag( event ) {\n\n    this.dragging = true;\n    if ( this.element ) {\n        var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n\n        if ( 'horizontal' === this.scroll ) {\n            if ( -event.delta.x > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            } else if ( -event.delta.x < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft + ( event.delta.x * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft + ( event.delta.x * 2 ) );\n                }\n            }\n        } else {\n            if ( -event.delta.y > 0 ) {\n                //forward\n                if ( offsetTop > -( scrollHeight - viewerSize.y ) ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            } else if ( -event.delta.y < 0 ) {\n                //reverse\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.delta.y * 2 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.delta.y * 2 ) );\n                }\n            }\n        }\n    }\n\n}\n\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripScroll( event ) {\n    if ( this.element ) {\n        var offsetLeft   = Number( this.element.style.marginLeft.replace( 'px', '' ) ),\n        offsetTop    = Number( this.element.style.marginTop.replace( 'px', '' ) ),\n        scrollWidth  = Number( this.element.style.width.replace( 'px', '' ) ),\n        scrollHeight = Number( this.element.style.height.replace( 'px', '' ) ),\n        viewerSize   = $.getElementSize( this.viewer.canvas );\n\n        if ( 'horizontal' === this.scroll ) {\n            if ( event.scroll > 0 ) {\n                //forward\n                if ( offsetLeft > -( scrollWidth - viewerSize.x ) ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll < 0 ) {\n                //reverse\n                if ( offsetLeft < 0 ) {\n                    this.element.style.marginLeft = ( offsetLeft - ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.x, offsetLeft - ( event.scroll * 60 ) );\n                }\n            }\n        } else {\n            if ( event.scroll < 0 ) {\n                //scroll up\n                if ( offsetTop > viewerSize.y - scrollHeight ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            } else if ( event.scroll > 0 ) {\n                //scroll dowm\n                if ( offsetTop < 0 ) {\n                    this.element.style.marginTop = ( offsetTop + ( event.scroll * 60 ) ) + 'px';\n                    loadPanels( this, viewerSize.y, offsetTop + ( event.scroll * 60 ) );\n                }\n            }\n        }\n\n        event.preventDefault = true;\n    }\n}\n\n\nfunction loadPanels( strip, viewerSize, scroll ) {\n    var panelSize,\n        activePanelsStart,\n        activePanelsEnd,\n        miniViewer,\n        i,\n        element;\n    if ( 'horizontal' === strip.scroll ) {\n        panelSize = strip.panelWidth;\n    } else {\n        panelSize = strip.panelHeight;\n    }\n    activePanelsStart = Math.ceil( viewerSize / panelSize ) + 5;\n    activePanelsEnd = Math.ceil( ( Math.abs( scroll ) + viewerSize ) / panelSize ) + 1;\n    activePanelsStart = activePanelsEnd - activePanelsStart;\n    activePanelsStart = activePanelsStart < 0 ? 0 : activePanelsStart;\n\n    for ( i = activePanelsStart; i < activePanelsEnd && i < strip.panels.length; i++ ) {\n        element = strip.panels[i];\n        if ( !element.activePanel ) {\n            var miniTileSource;\n            var originalTileSource = strip.viewer.tileSources[i];\n            if (originalTileSource.referenceStripThumbnailUrl) {\n                miniTileSource = {\n                    type: 'image',\n                    url: originalTileSource.referenceStripThumbnailUrl\n                };\n            } else {\n                miniTileSource = originalTileSource;\n            }\n            miniViewer = new $.Viewer( {\n                id:                     element.id,\n                tileSources:            [miniTileSource],\n                element:                element,\n                navigatorSizeRatio:     strip.sizeRatio,\n                showNavigator:          false,\n                mouseNavEnabled:        false,\n                showNavigationControl:  false,\n                showSequenceControl:    false,\n                immediateRender:        true,\n                blendTime:              0,\n                animationTime:          0,\n                loadTilesWithAjax:      strip.viewer.loadTilesWithAjax,\n                ajaxHeaders:            strip.viewer.ajaxHeaders,\n                useCanvas:              strip.useCanvas\n            } );\n            // Allow pointer events to pass through miniViewer's canvas/container\n            //   elements so implicit pointer capture works on touch devices\n            $.setElementPointerEventsNone( miniViewer.canvas );\n            $.setElementPointerEventsNone( miniViewer.container );\n            // We'll use event delegation from the reference strip element instead of\n            //   handling events on every miniViewer\n            miniViewer.innerTracker.setTracking( false );\n            miniViewer.outerTracker.setTracking( false );\n\n            strip.miniViewers[element.id] = miniViewer;\n\n            element.activePanel = true;\n        }\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripEnter( event ) {\n    var element = event.eventSource.element;\n\n    //$.setElementOpacity(element, 0.8);\n\n    //element.style.border = '1px solid #555';\n    //element.style.background = '#000';\n\n    if ( 'horizontal' === this.scroll ) {\n\n        //element.style.paddingTop = \"0px\";\n        element.style.marginBottom = \"0px\";\n\n    } else {\n\n        //element.style.paddingRight = \"0px\";\n        element.style.marginLeft = \"0px\";\n\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onStripLeave( event ) {\n    var element = event.eventSource.element;\n\n    if ( 'horizontal' === this.scroll ) {\n\n        //element.style.paddingTop = \"10px\";\n        element.style.marginBottom = \"-\" + ( $.getElementSize( element ).y / 2 ) + \"px\";\n\n    } else {\n\n        //element.style.paddingRight = \"10px\";\n        element.style.marginLeft = \"-\" + ( $.getElementSize( element ).x / 2 ) + \"px\";\n\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyDown( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 38: //up arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 40: //down arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 37: //left arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 39: //right arrow\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                event.preventDefault = true;\n                break;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                event.preventDefault = false;\n                break;\n        }\n    } else {\n        event.preventDefault = false;\n    }\n}\n\n\n/**\n * @private\n * @inner\n * @function\n */\nfunction onKeyPress( event ) {\n    //console.log( event.keyCode );\n\n    if ( !event.ctrl && !event.alt && !event.meta ) {\n        switch ( event.keyCode ) {\n            case 61: //=|+\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 45: //-|_\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 48: //0|)\n            case 119: //w\n            case 87: //W\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 115: //s\n            case 83: //S\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 97: //a\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: -1, shift: null } );\n                event.preventDefault = true;\n                break;\n            case 100: //d\n                onStripScroll.call( this, { eventSource: this.tracker, position: null, scroll: 1, shift: null } );\n                event.preventDefault = true;\n                break;\n            default:\n                //console.log( 'navigator keycode %s', event.keyCode );\n                event.preventDefault = false;\n                break;\n        }\n    } else {\n        event.preventDefault = false;\n    }\n}\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - DisplayRect\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class DisplayRect\n * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds two\n * fields, 'minLevel' and 'maxLevel' which denote the supported zoom levels\n * for this rectangle.\n *\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.Rect\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {Number} width The vector component 'height'.\n * @param {Number} height The vector component 'width'.\n * @param {Number} minLevel The lowest zoom level supported.\n * @param {Number} maxLevel The highest zoom level supported.\n */\n$.DisplayRect = function( x, y, width, height, minLevel, maxLevel ) {\n    $.Rect.apply( this, [ x, y, width, height ] );\n\n    /**\n     * The lowest zoom level supported.\n     * @member {Number} minLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.minLevel = minLevel;\n    /**\n     * The highest zoom level supported.\n     * @member {Number} maxLevel\n     * @memberof OpenSeadragon.DisplayRect#\n     */\n    this.maxLevel = maxLevel;\n};\n\n$.extend( $.DisplayRect.prototype, $.Rect.prototype );\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Spring\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Spring\n * @memberof OpenSeadragon\n * @param {Object} options - Spring configuration settings.\n * @param {Number} options.springStiffness - Spring stiffness. Must be greater than zero.\n * The closer to zero, the closer to linear animation.\n * @param {Number} options.animationTime - Animation duration per spring, in seconds.\n * Must be zero or greater.\n * @param {Number} [options.initial=0] - Initial value of spring.\n * @param {Boolean} [options.exponential=false] - Whether this spring represents\n * an exponential scale (such as zoom) and should be animated accordingly. Note that\n * exponential springs must have non-zero values.\n */\n$.Spring = function( options ) {\n    var args = arguments;\n\n    if( typeof ( options ) !== 'object' ){\n        //allows backward compatible use of ( initialValue, config ) as\n        //constructor parameters\n        options = {\n            initial: args.length && typeof ( args[ 0 ] ) === \"number\" ?\n                args[ 0 ] :\n                undefined,\n            /**\n             * Spring stiffness.\n             * @member {Number} springStiffness\n             * @memberof OpenSeadragon.Spring#\n             */\n            springStiffness: args.length > 1 ?\n                args[ 1 ].springStiffness :\n                5.0,\n            /**\n             * Animation duration per spring.\n             * @member {Number} animationTime\n             * @memberof OpenSeadragon.Spring#\n             */\n            animationTime: args.length > 1 ?\n                args[ 1 ].animationTime :\n                1.5\n        };\n    }\n\n    $.console.assert(typeof options.springStiffness === \"number\" && options.springStiffness !== 0,\n        \"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number\");\n\n    $.console.assert(typeof options.animationTime === \"number\" && options.animationTime >= 0,\n        \"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0\");\n\n    if (options.exponential) {\n        this._exponential = true;\n        delete options.exponential;\n    }\n\n    $.extend( true, this, options);\n\n    /**\n     * @member {Object} current\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.current = {\n        value: typeof ( this.initial ) === \"number\" ?\n            this.initial :\n            (this._exponential ? 0 : 1),\n        time:  $.now() // always work in milliseconds\n    };\n\n    $.console.assert(!this._exponential || this.current.value !== 0,\n        \"[OpenSeadragon.Spring] value must be non-zero for exponential springs\");\n\n    /**\n     * @member {Object} start\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.start = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    /**\n     * @member {Object} target\n     * @memberof OpenSeadragon.Spring#\n     * @property {Number} value\n     * @property {Number} time\n     */\n    this.target = {\n        value: this.current.value,\n        time:  this.current.time\n    };\n\n    if (this._exponential) {\n        this.start._logValue = Math.log(this.start.value);\n        this.target._logValue = Math.log(this.target.value);\n        this.current._logValue = Math.log(this.current.value);\n    }\n};\n\n/** @lends OpenSeadragon.Spring.prototype */\n$.Spring.prototype = {\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    resetTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs\");\n\n        this.start.value = this.target.value = this.current.value = target;\n        this.start.time = this.target.time = this.current.time = $.now();\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} target\n     */\n    springTo: function( target ) {\n        $.console.assert(!this._exponential || target !== 0,\n            \"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs\");\n\n        this.start.value  = this.current.value;\n        this.start.time   = this.current.time;\n        this.target.value = target;\n        this.target.time  = this.start.time + 1000 * this.animationTime;\n\n        if (this._exponential) {\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    /**\n     * @function\n     * @param {Number} delta\n     */\n    shiftBy: function( delta ) {\n        this.start.value  += delta;\n        this.target.value += delta;\n\n        if (this._exponential) {\n            $.console.assert(this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n        }\n    },\n\n    setExponential: function(value) {\n        this._exponential = value;\n\n        if (this._exponential) {\n            $.console.assert(this.current.value !== 0 && this.target.value !== 0 && this.start.value !== 0,\n                \"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs\");\n\n            this.start._logValue = Math.log(this.start.value);\n            this.target._logValue = Math.log(this.target.value);\n            this.current._logValue = Math.log(this.current.value);\n        }\n    },\n\n    /**\n     * @function\n     * @returns true if the value got updated, false otherwise\n     */\n    update: function() {\n        this.current.time  = $.now();\n\n        var startValue, targetValue;\n        if (this._exponential) {\n            startValue = this.start._logValue;\n            targetValue = this.target._logValue;\n        } else {\n            startValue = this.start.value;\n            targetValue = this.target.value;\n        }\n\n        var currentValue = (this.current.time >= this.target.time) ?\n            targetValue :\n            startValue +\n                ( targetValue - startValue ) *\n                transform(\n                    this.springStiffness,\n                    ( this.current.time - this.start.time ) /\n                    ( this.target.time - this.start.time )\n                );\n\n        var oldValue = this.current.value;\n        if (this._exponential) {\n            this.current.value = Math.exp(currentValue);\n        } else {\n            this.current.value = currentValue;\n        }\n\n        return oldValue !== this.current.value;\n    },\n\n    /**\n     * Returns whether the spring is at the target value\n     * @function\n     * @returns {Boolean} True if at target value, false otherwise\n     */\n    isAtTargetValue: function() {\n        return this.current.value === this.target.value;\n    }\n};\n\n/**\n * @private\n */\nfunction transform( stiffness, x ) {\n    return ( 1.0 - Math.exp( stiffness * -x ) ) /\n        ( 1.0 - Math.exp( -stiffness ) );\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - ImageLoader\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($){\n\n/**\n * @private\n * @class ImageJob\n * @classdesc Handles downloading of a single image.\n * @param {Object} options - Options for this ImageJob.\n * @param {String} [options.src] - URL of image to download.\n * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n * @param {String} [options.crossOriginPolicy] - CORS policy to use for downloads\n * @param {String} [options.postData] - HTTP POST data (usually but not necessarily in k=v&k2=v2... form,\n *      see TileSrouce::getPostData) or null\n * @param {Function} [options.callback] - Called once image has been downloaded.\n * @param {Function} [options.abort] - Called when this image job is aborted.\n * @param {Number} [options.timeout] - The max number of milliseconds that this image job may take to complete.\n */\nfunction ImageJob (options) {\n\n    $.extend(true, this, {\n        timeout: $.DEFAULT_SETTINGS.timeout,\n        jobId: null\n    }, options);\n\n    /**\n     * Image object which will contain downloaded image.\n     * @member {Image} image\n     * @memberof OpenSeadragon.ImageJob#\n     */\n    this.image = null;\n}\n\nImageJob.prototype = {\n    errorMsg: null,\n\n    /**\n     * Starts the image job.\n     * @method\n     */\n    start: function(){\n        var self = this;\n        var selfAbort = this.abort;\n\n        this.image = new Image();\n\n        this.image.onload = function(){\n            self.finish(true);\n        };\n        this.image.onabort = this.image.onerror = function() {\n            self.errorMsg = \"Image load aborted\";\n            self.finish(false);\n        };\n\n        this.jobId = window.setTimeout(function(){\n            self.errorMsg = \"Image load exceeded timeout (\" + self.timeout + \" ms)\";\n            self.finish(false);\n        }, this.timeout);\n\n        // Load the tile with an AJAX request if the loadWithAjax option is\n        // set. Otherwise load the image by setting the source proprety of the image object.\n        if (this.loadWithAjax) {\n            this.request = $.makeAjaxRequest({\n                url: this.src,\n                withCredentials: this.ajaxWithCredentials,\n                headers: this.ajaxHeaders,\n                responseType: \"arraybuffer\",\n                postData: this.postData,\n                success: function(request) {\n                    var blb;\n                    // Make the raw data into a blob.\n                    // BlobBuilder fallback adapted from\n                    // http://stackoverflow.com/questions/15293694/blob-constructor-browser-compatibility\n                    try {\n                        blb = new window.Blob([request.response]);\n                    } catch (e) {\n                        var BlobBuilder = (\n                            window.BlobBuilder ||\n                            window.WebKitBlobBuilder ||\n                            window.MozBlobBuilder ||\n                            window.MSBlobBuilder\n                        );\n                        if (e.name === 'TypeError' && BlobBuilder) {\n                            var bb = new BlobBuilder();\n                            bb.append(request.response);\n                            blb = bb.getBlob();\n                        }\n                    }\n                    // If the blob is empty for some reason consider the image load a failure.\n                    if (blb.size === 0) {\n                        self.errorMsg = \"Empty image response.\";\n                        self.finish(false);\n                    }\n                    // Create a URL for the blob data and make it the source of the image object.\n                    // This will still trigger Image.onload to indicate a successful tile load.\n                    var url = (window.URL || window.webkitURL).createObjectURL(blb);\n                    self.image.src = url;\n                },\n                error: function(request) {\n                    self.errorMsg = \"Image load aborted - XHR error: Ajax returned \" + request.status;\n                    self.finish(false);\n                }\n            });\n\n            // Provide a function to properly abort the request.\n            this.abort = function() {\n                self.request.abort();\n\n                // Call the existing abort function if available\n                if (typeof selfAbort === \"function\") {\n                    selfAbort();\n                }\n            };\n        } else {\n            if (this.crossOriginPolicy !== false) {\n                this.image.crossOrigin = this.crossOriginPolicy;\n            }\n\n            this.image.src = this.src;\n        }\n    },\n\n    finish: function(successful) {\n        this.image.onload = this.image.onerror = this.image.onabort = null;\n        if (!successful) {\n            this.image = null;\n        }\n\n        if (this.jobId) {\n            window.clearTimeout(this.jobId);\n        }\n\n        this.callback(this);\n    }\n\n};\n\n/**\n * @class ImageLoader\n * @memberof OpenSeadragon\n * @classdesc Handles downloading of a set of images using asynchronous queue pattern.\n * You generally won't have to interact with the ImageLoader directly.\n * @param {Object} options - Options for this ImageLoader.\n * @param {Number} [options.jobLimit] - The number of concurrent image requests. See imageLoaderLimit in {@link OpenSeadragon.Options} for details.\n * @param {Number} [options.timeout] - The max number of milliseconds that an image job may take to complete.\n */\n$.ImageLoader = function(options) {\n\n    $.extend(true, this, {\n        jobLimit:       $.DEFAULT_SETTINGS.imageLoaderLimit,\n        timeout:        $.DEFAULT_SETTINGS.timeout,\n        jobQueue:       [],\n        jobsInProgress: 0\n    }, options);\n\n};\n\n/** @lends OpenSeadragon.ImageLoader.prototype */\n$.ImageLoader.prototype = {\n\n    /**\n     * Add an unloaded image to the loader queue.\n     * @method\n     * @param {Object} options - Options for this job.\n     * @param {String} [options.src] - URL of image to download.\n     * @param {String} [options.loadWithAjax] - Whether to load this image with AJAX.\n     * @param {String} [options.ajaxHeaders] - Headers to add to the image request if using AJAX.\n     * @param {String|Boolean} [options.crossOriginPolicy] - CORS policy to use for downloads\n     * @param {String} [options.postData] - POST parameters (usually but not necessarily in k=v&k2=v2... form,\n     *      see TileSrouce::getPostData) or null\n     * @param {Boolean} [options.ajaxWithCredentials] - Whether to set withCredentials on AJAX\n     *      requests.\n     * @param {Function} [options.callback] - Called once image has been downloaded.\n     * @param {Function} [options.abort] - Called when this image job is aborted.\n     */\n    addJob: function(options) {\n        var _this = this,\n            complete = function(job) {\n                completeJob(_this, job, options.callback);\n            },\n            jobOptions = {\n                src: options.src,\n                loadWithAjax: options.loadWithAjax,\n                ajaxHeaders: options.loadWithAjax ? options.ajaxHeaders : null,\n                crossOriginPolicy: options.crossOriginPolicy,\n                ajaxWithCredentials: options.ajaxWithCredentials,\n                postData: options.postData,\n                callback: complete,\n                abort: options.abort,\n                timeout: this.timeout\n            },\n            newJob = new ImageJob(jobOptions);\n\n        if ( !this.jobLimit || this.jobsInProgress < this.jobLimit ) {\n            newJob.start();\n            this.jobsInProgress++;\n        }\n        else {\n            this.jobQueue.push( newJob );\n        }\n    },\n\n    /**\n     * Clear any unstarted image loading jobs from the queue.\n     * @method\n     */\n    clear: function() {\n        for( var i = 0; i < this.jobQueue.length; i++ ) {\n            var job = this.jobQueue[i];\n            if ( typeof job.abort === \"function\" ) {\n                job.abort();\n            }\n        }\n\n        this.jobQueue = [];\n    }\n};\n\n/**\n * Cleans up ImageJob once completed.\n * @method\n * @private\n * @param loader - ImageLoader used to start job.\n * @param job - The ImageJob that has completed.\n * @param callback - Called once cleanup is finished.\n */\nfunction completeJob(loader, job, callback) {\n    var nextJob;\n\n    loader.jobsInProgress--;\n\n    if ((!loader.jobLimit || loader.jobsInProgress < loader.jobLimit) && loader.jobQueue.length > 0) {\n        nextJob = loader.jobQueue.shift();\n        nextJob.start();\n        loader.jobsInProgress++;\n    }\n\n    callback(job.image, job.errorMsg, job.request);\n}\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Tile\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Tile\n * @memberof OpenSeadragon\n * @param {Number} level The zoom level this tile belongs to.\n * @param {Number} x The vector component 'x'.\n * @param {Number} y The vector component 'y'.\n * @param {OpenSeadragon.Rect} bounds Where this tile fits, in normalized\n *      coordinates.\n * @param {Boolean} exists Is this tile a part of a sparse image? ( Also has\n *      this tile failed to load? )\n * @param {String} url The URL of this tile's image.\n * @param {CanvasRenderingContext2D} context2D The context2D of this tile if it\n *      is provided directly by the tile source.\n * @param {Boolean} loadWithAjax Whether this tile image should be loaded with an AJAX request .\n * @param {Object} ajaxHeaders The headers to send with this tile's AJAX request (if applicable).\n * @param {OpenSeadragon.Rect} sourceBounds The portion of the tile to use as the source of the\n *      drawing operation, in pixels. Note that this only works when drawing with canvas; when drawing\n *      with HTML the entire tile is always used.\n * @param {String} postData HTTP POST data (usually but not necessarily in k=v&k2=v2... form,\n *      see TileSrouce::getPostData) or null\n * @param {String} cacheKey key to act as a tile cache, must be unique for tiles with unique image data\n */\n$.Tile = function(level, x, y, bounds, exists, url, context2D, loadWithAjax, ajaxHeaders, sourceBounds, postData, cacheKey) {\n    /**\n     * The zoom level this tile belongs to.\n     * @member {Number} level\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.level   = level;\n    /**\n     * The vector component 'x'.\n     * @member {Number} x\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.x       = x;\n    /**\n     * The vector component 'y'.\n     * @member {Number} y\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.y       = y;\n    /**\n     * Where this tile fits, in normalized coordinates\n     * @member {OpenSeadragon.Rect} bounds\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.bounds  = bounds;\n    /**\n    * The portion of the tile to use as the source of the drawing operation, in pixels. Note that\n    * this only works when drawing with canvas; when drawing with HTML the entire tile is always used.\n    * @member {OpenSeadragon.Rect} sourceBounds\n    * @memberof OpenSeadragon.Tile#\n    */\n    this.sourceBounds = sourceBounds;\n    /**\n     * Is this tile a part of a sparse image? Also has this tile failed to load?\n     * @member {Boolean} exists\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.exists  = exists;\n    /**\n     * The URL of this tile's image.\n     * @member {String} url\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.url     = url;\n    /**\n     * Post parameters for this tile. For example, it can be an URL-encoded string\n     * in k1=v1&k2=v2... format, or a JSON, or a FormData instance... or null if no POST request used\n     * @member {String} postData HTTP POST data (usually but not necessarily in k=v&k2=v2... form,\n     *      see TileSrouce::getPostData) or null\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.postData  = postData;\n    /**\n     * The context2D of this tile if it is provided directly by the tile source.\n     * @member {CanvasRenderingContext2D} context2D\n     * @memberOf OpenSeadragon.Tile#\n     */\n    this.context2D = context2D;\n    /**\n     * Whether to load this tile's image with an AJAX request.\n     * @member {Boolean} loadWithAjax\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loadWithAjax = loadWithAjax;\n    /**\n     * The headers to be used in requesting this tile's image.\n     * Only used if loadWithAjax is set to true.\n     * @member {Object} ajaxHeaders\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.ajaxHeaders = ajaxHeaders;\n    /**\n     * The unique cache key for this tile.\n     * @member {String} cacheKey\n     * @memberof OpenSeadragon.Tile#\n     */\n    if (cacheKey === undefined) {\n        $.console.error(\"Tile constructor needs 'cacheKey' variable: creation tile cache\" +\n            \" in Tile class is deprecated. TileSource.prototype.getTileHashKey will be used.\");\n        cacheKey = $.TileSource.prototype.getTileHashKey(level, x, y, url, ajaxHeaders, postData);\n    }\n    this.cacheKey = cacheKey;\n\n    /**\n     * Is this tile loaded?\n     * @member {Boolean} loaded\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loaded  = false;\n    /**\n     * Is this tile loading?\n     * @member {Boolean} loading\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.loading = false;\n\n    /**\n     * The HTML div element for this tile\n     * @member {Element} element\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.element    = null;\n    /**\n     * The HTML img element for this tile.\n     * @member {Element} imgElement\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.imgElement = null;\n    /**\n     * The Image object for this tile.\n     * @member {Object} image\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.image      = null;\n\n    /**\n     * The alias of this.element.style.\n     * @member {String} style\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.style      = null;\n    /**\n     * This tile's position on screen, in pixels.\n     * @member {OpenSeadragon.Point} position\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.position   = null;\n    /**\n     * This tile's size on screen, in pixels.\n     * @member {OpenSeadragon.Point} size\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.size       = null;\n    /**\n     * Whether to flip the tile when rendering.\n     * @member {Boolean} flipped\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.flipped    = false;\n    /**\n     * The start time of this tile's blending.\n     * @member {Number} blendStart\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.blendStart = null;\n    /**\n     * The current opacity this tile should be.\n     * @member {Number} opacity\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.opacity    = null;\n    /**\n     * The squared distance of this tile to the viewport center.\n     * Use for comparing tiles.\n     * @private\n     * @member {Number} squaredDistance\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.squaredDistance   = null;\n    /**\n     * The visibility score of this tile.\n     * @member {Number} visibility\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.visibility = null;\n\n    /**\n     * Whether this tile is currently being drawn.\n     * @member {Boolean} beingDrawn\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.beingDrawn     = false;\n\n    /**\n     * Timestamp the tile was last touched.\n     * @member {Number} lastTouchTime\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.lastTouchTime  = 0;\n\n    /**\n     * Whether this tile is in the right-most column for its level.\n     * @member {Boolean} isRightMost\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.isRightMost = false;\n\n    /**\n     * Whether this tile is in the bottom-most row for its level.\n     * @member {Boolean} isBottomMost\n     * @memberof OpenSeadragon.Tile#\n     */\n    this.isBottomMost = false;\n};\n\n/** @lends OpenSeadragon.Tile.prototype */\n$.Tile.prototype = {\n\n    /**\n     * Provides a string representation of this tiles level and (x,y)\n     * components.\n     * @function\n     * @returns {String}\n     */\n    toString: function() {\n        return this.level + \"/\" + this.x + \"_\" + this.y;\n    },\n\n    // private\n    _hasTransparencyChannel: function() {\n        return !!this.context2D || this.url.match('.png');\n    },\n\n    /**\n     * Renders the tile in an html container.\n     * @function\n     * @param {Element} container\n     */\n    drawHTML: function( container ) {\n        if (!this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawHTML] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        if ( !this.loaded ) {\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n            return;\n        }\n\n        //EXPERIMENTAL - trying to figure out how to scale the container\n        //               content during animation of the container size.\n\n        if ( !this.element ) {\n            this.element                              = $.makeNeutralElement( \"div\" );\n            this.imgElement                           = this.cacheImageRecord.getImage().cloneNode();\n            this.imgElement.style.msInterpolationMode = \"nearest-neighbor\";\n            this.imgElement.style.width               = \"100%\";\n            this.imgElement.style.height              = \"100%\";\n\n            this.style                     = this.element.style;\n            this.style.position            = \"absolute\";\n        }\n        if ( this.element.parentNode !== container ) {\n            container.appendChild( this.element );\n        }\n        if ( this.imgElement.parentNode !== this.element ) {\n            this.element.appendChild( this.imgElement );\n        }\n\n        this.style.top     = this.position.y + \"px\";\n        this.style.left    = this.position.x + \"px\";\n        this.style.height  = this.size.y + \"px\";\n        this.style.width   = this.size.x + \"px\";\n\n        if (this.flipped) {\n            this.style.transform = \"scaleX(-1)\";\n        }\n\n        $.setElementOpacity( this.element, this.opacity );\n    },\n\n    /**\n     * Renders the tile in a canvas-based context.\n     * @function\n     * @param {Canvas} context\n     * @param {Function} drawingHandler - Method for firing the drawing event.\n     * drawingHandler({context, tile, rendered})\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Number} [scale=1] - Apply a scale to position and size\n     * @param {OpenSeadragon.Point} [translate] - A translation vector\n     * @param {Boolean} [shouldRoundPositionAndSize] - Tells whether to round\n     * position and size of tiles supporting alpha channel in non-transparency\n     * context.\n     */\n    drawCanvas: function( context, drawingHandler, scale, translate, shouldRoundPositionAndSize ) {\n\n        var position = this.position.times($.pixelDensityRatio),\n            size     = this.size.times($.pixelDensityRatio),\n            rendered;\n\n        if (!this.context2D && !this.cacheImageRecord) {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to draw tile %s when it\\'s not cached',\n                this.toString());\n            return;\n        }\n\n        rendered = this.context2D || this.cacheImageRecord.getRenderedContext();\n\n        if ( !this.loaded || !rendered ){\n            $.console.warn(\n                \"Attempting to draw tile %s when it's not yet loaded.\",\n                this.toString()\n            );\n\n            return;\n        }\n\n        context.save();\n\n        context.globalAlpha = this.opacity;\n\n        if (typeof scale === 'number' && scale !== 1) {\n            // draw tile at a different scale\n            position = position.times(scale);\n            size = size.times(scale);\n        }\n\n        if (translate instanceof $.Point) {\n            // shift tile position slightly\n            position = position.plus(translate);\n        }\n\n        //if we are supposed to be rendering fully opaque rectangle,\n        //ie its done fading or fading is turned off, and if we are drawing\n        //an image with an alpha channel, then the only way\n        //to avoid seeing the tile underneath is to clear the rectangle\n        if (context.globalAlpha === 1 && this._hasTransparencyChannel()) {\n            if (shouldRoundPositionAndSize) {\n                // Round to the nearest whole pixel so we don't get seams from overlap.\n                position.x = Math.round(position.x);\n                position.y = Math.round(position.y);\n                size.x = Math.round(size.x);\n                size.y = Math.round(size.y);\n            }\n\n            //clearing only the inside of the rectangle occupied\n            //by the png prevents edge flikering\n            context.clearRect(\n                position.x,\n                position.y,\n                size.x,\n                size.y\n            );\n        }\n\n        // This gives the application a chance to make image manipulation\n        // changes as we are rendering the image\n        drawingHandler({context: context, tile: this, rendered: rendered});\n\n        var sourceWidth, sourceHeight;\n        if (this.sourceBounds) {\n            sourceWidth = Math.min(this.sourceBounds.width, rendered.canvas.width);\n            sourceHeight = Math.min(this.sourceBounds.height, rendered.canvas.height);\n        } else {\n            sourceWidth = rendered.canvas.width;\n            sourceHeight = rendered.canvas.height;\n        }\n\n        context.translate(position.x + size.x / 2, 0);\n        if (this.flipped) {\n            context.scale(-1, 1);\n        }\n        context.drawImage(\n            rendered.canvas,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight,\n            -size.x / 2,\n            position.y,\n            size.x,\n            size.y\n        );\n\n        context.restore();\n    },\n\n    /**\n     * Get the ratio between current and original size.\n     * @function\n     * @return {Float}\n     */\n    getScaleForEdgeSmoothing: function() {\n        var context;\n        if (this.cacheImageRecord) {\n            context = this.cacheImageRecord.getRenderedContext();\n        } else if (this.context2D) {\n            context = this.context2D;\n        } else {\n            $.console.warn(\n                '[Tile.drawCanvas] attempting to get tile scale %s when tile\\'s not cached',\n                this.toString());\n            return 1;\n        }\n        return context.canvas.width / (this.size.x * $.pixelDensityRatio);\n    },\n\n    /**\n     * Get a translation vector that when applied to the tile position produces integer coordinates.\n     * Needed to avoid swimming and twitching.\n     * @function\n     * @param {Number} [scale=1] - Scale to be applied to position.\n     * @return {OpenSeadragon.Point}\n     */\n    getTranslationForEdgeSmoothing: function(scale, canvasSize, sketchCanvasSize) {\n        // The translation vector must have positive values, otherwise the image goes a bit off\n        // the sketch canvas to the top and left and we must use negative coordinates to repaint it\n        // to the main canvas. In that case, some browsers throw:\n        // INDEX_SIZE_ERR: DOM Exception 1: Index or size was negative, or greater than the allowed value.\n        var x = Math.max(1, Math.ceil((sketchCanvasSize.x - canvasSize.x) / 2));\n        var y = Math.max(1, Math.ceil((sketchCanvasSize.y - canvasSize.y) / 2));\n        return new $.Point(x, y).minus(\n            this.position\n                .times($.pixelDensityRatio)\n                .times(scale || 1)\n                .apply(function(x) {\n                    return x % 1;\n                })\n        );\n    },\n\n    /**\n     * Removes tile from its container.\n     * @function\n     */\n    unload: function() {\n        if ( this.imgElement && this.imgElement.parentNode ) {\n            this.imgElement.parentNode.removeChild( this.imgElement );\n        }\n        if ( this.element && this.element.parentNode ) {\n            this.element.parentNode.removeChild( this.element );\n        }\n\n        this.element    = null;\n        this.imgElement = null;\n        this.loaded     = false;\n        this.loading    = false;\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Overlay\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function($) {\n\n    /**\n     * An enumeration of positions that an overlay may be assigned relative to\n     * the viewport.\n     * It is identical to OpenSeadragon.Placement but is kept for backward\n     * compatibility.\n     * @member OverlayPlacement\n     * @memberof OpenSeadragon\n     * @see OpenSeadragon.Placement\n     * @static\n     * @readonly\n     * @type {Object}\n     * @property {Number} CENTER\n     * @property {Number} TOP_LEFT\n     * @property {Number} TOP\n     * @property {Number} TOP_RIGHT\n     * @property {Number} RIGHT\n     * @property {Number} BOTTOM_RIGHT\n     * @property {Number} BOTTOM\n     * @property {Number} BOTTOM_LEFT\n     * @property {Number} LEFT\n     */\n    $.OverlayPlacement = $.Placement;\n\n    /**\n     * An enumeration of possible ways to handle overlays rotation\n     * @member OverlayRotationMode\n     * @memberOf OpenSeadragon\n     * @static\n     * @readonly\n     * @property {Number} NO_ROTATION The overlay ignore the viewport rotation.\n     * @property {Number} EXACT The overlay use CSS 3 transforms to rotate with\n     * the viewport. If the overlay contains text, it will get rotated as well.\n     * @property {Number} BOUNDING_BOX The overlay adjusts for rotation by\n     * taking the size of the bounding box of the rotated bounds.\n     * Only valid for overlays with Rect location and scalable in both directions.\n     */\n    $.OverlayRotationMode = $.freezeObject({\n        NO_ROTATION: 1,\n        EXACT: 2,\n        BOUNDING_BOX: 3\n    });\n\n    /**\n     * @class Overlay\n     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n     *\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     * @param {Element} options.element\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect} options.location - The\n     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n     * is specified, the overlay will be located at this location with respect\n     * to the placement option. If a {@link OpenSeadragon.Rect} is specified,\n     * the overlay will be placed at this location with the corresponding width\n     * and height and placement TOP_LEFT.\n     * @param {OpenSeadragon.Placement} [options.placement=OpenSeadragon.Placement.TOP_LEFT]\n     * Defines what part of the overlay should be at the specified options.location\n     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n     * check the size of the overlay every time it is drawn in the directions\n     * which are not scaled. It will improve performances but will cause a\n     * misalignment if the overlay size changes.\n     * @param {Number} [options.width] The width of the overlay in viewport\n     * coordinates. If specified, the width of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Number} [options.height] The height of the overlay in viewport\n     * coordinates. If specified, the height of the overlay will be adjusted when\n     * the zoom changes.\n     * @param {Boolean} [options.rotationMode=OpenSeadragon.OverlayRotationMode.EXACT]\n     * How to handle the rotation of the viewport.\n     */\n    $.Overlay = function(element, location, placement) {\n\n        /**\n         * onDraw callback signature used by {@link OpenSeadragon.Overlay}.\n         *\n         * @callback OnDrawCallback\n         * @memberof OpenSeadragon.Overlay\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         * @param {Element} element\n         */\n\n        var options;\n        if ($.isPlainObject(element)) {\n            options = element;\n        } else {\n            options = {\n                element: element,\n                location: location,\n                placement: placement\n            };\n        }\n\n        this.element = options.element;\n        this.style = options.element.style;\n        this._init(options);\n    };\n\n    /** @lends OpenSeadragon.Overlay.prototype */\n    $.Overlay.prototype = {\n\n        // private\n        _init: function(options) {\n            this.location = options.location;\n            this.placement = options.placement === undefined ?\n                $.Placement.TOP_LEFT : options.placement;\n            this.onDraw = options.onDraw;\n            this.checkResize = options.checkResize === undefined ?\n                true : options.checkResize;\n\n            // When this.width is not null, the overlay get scaled horizontally\n            this.width = options.width === undefined ? null : options.width;\n\n            // When this.height is not null, the overlay get scaled vertically\n            this.height = options.height === undefined ? null : options.height;\n\n            this.rotationMode = options.rotationMode || $.OverlayRotationMode.EXACT;\n\n            // Having a rect as location is a syntactic sugar\n            if (this.location instanceof $.Rect) {\n                this.width = this.location.width;\n                this.height = this.location.height;\n                this.location = this.location.getTopLeft();\n                this.placement = $.Placement.TOP_LEFT;\n            }\n\n            // Deprecated properties kept for backward compatibility.\n            this.scales = this.width !== null && this.height !== null;\n            this.bounds = new $.Rect(\n                this.location.x, this.location.y, this.width, this.height);\n            this.position = this.location;\n        },\n\n        /**\n         * Internal function to adjust the position of an overlay\n         * depending on it size and placement.\n         * @function\n         * @param {OpenSeadragon.Point} position\n         * @param {OpenSeadragon.Point} size\n         */\n        adjust: function(position, size) {\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return;\n            }\n            if (properties.isHorizontallyCentered) {\n                position.x -= size.x / 2;\n            } else if (properties.isRight) {\n                position.x -= size.x;\n            }\n            if (properties.isVerticallyCentered) {\n                position.y -= size.y / 2;\n            } else if (properties.isBottom) {\n                position.y -= size.y;\n            }\n        },\n\n        /**\n         * @function\n         */\n        destroy: function() {\n            var element = this.element;\n            var style = this.style;\n\n            if (element.parentNode) {\n                element.parentNode.removeChild(element);\n                //this should allow us to preserve overlays when required between\n                //pages\n                if (element.prevElementParent) {\n                    style.display = 'none';\n                    //element.prevElementParent.insertBefore(\n                    //    element,\n                    //    element.prevNextSibling\n                    //);\n                    document.body.appendChild(element);\n                }\n            }\n\n            // clear the onDraw callback\n            this.onDraw = null;\n\n            style.top = \"\";\n            style.left = \"\";\n            style.position = \"\";\n\n            if (this.width !== null) {\n                style.width = \"\";\n            }\n            if (this.height !== null) {\n                style.height = \"\";\n            }\n            var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                'transformOrigin');\n            var transformProp = $.getCssPropertyWithVendorPrefix(\n                'transform');\n            if (transformOriginProp && transformProp) {\n                style[transformOriginProp] = \"\";\n                style[transformProp] = \"\";\n            }\n        },\n\n        /**\n         * @function\n         * @param {Element} container\n         */\n        drawHTML: function(container, viewport) {\n            var element = this.element;\n            if (element.parentNode !== container) {\n                //save the source parent for later if we need it\n                element.prevElementParent = element.parentNode;\n                element.prevNextSibling = element.nextSibling;\n                container.appendChild(element);\n\n                // have to set position before calculating size, fix #1116\n                this.style.position = \"absolute\";\n                // this.size is used by overlays which don't get scaled in at\n                // least one direction when this.checkResize is set to false.\n                this.size = $.getElementSize(element);\n            }\n\n            var positionAndSize = this._getOverlayPositionAndSize(viewport);\n\n            var position = positionAndSize.position;\n            var size = this.size = positionAndSize.size;\n            var rotate = positionAndSize.rotate;\n\n            // call the onDraw callback if it exists to allow one to overwrite\n            // the drawing/positioning/sizing of the overlay\n            if (this.onDraw) {\n                this.onDraw(position, size, this.element);\n            } else {\n                var style = this.style;\n                style.left = position.x + \"px\";\n                style.top = position.y + \"px\";\n                if (this.width !== null) {\n                    style.width = size.x + \"px\";\n                }\n                if (this.height !== null) {\n                    style.height = size.y + \"px\";\n                }\n                var transformOriginProp = $.getCssPropertyWithVendorPrefix(\n                    'transformOrigin');\n                var transformProp = $.getCssPropertyWithVendorPrefix(\n                    'transform');\n                if (transformOriginProp && transformProp) {\n                    if (rotate) {\n                        style[transformOriginProp] = this._getTransformOrigin();\n                        style[transformProp] = \"rotate(\" + rotate + \"deg)\";\n                    } else {\n                        style[transformOriginProp] = \"\";\n                        style[transformProp] = \"\";\n                    }\n                }\n                style.display = 'block';\n            }\n        },\n\n        // private\n        _getOverlayPositionAndSize: function(viewport) {\n            var position = viewport.pixelFromPoint(this.location, true);\n            var size = this._getSizeInPixels(viewport);\n            this.adjust(position, size);\n\n            var rotate = 0;\n            if (viewport.degrees &&\n                this.rotationMode !== $.OverlayRotationMode.NO_ROTATION) {\n                // BOUNDING_BOX is only valid if both directions get scaled.\n                // Get replaced by EXACT otherwise.\n                if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX &&\n                    this.width !== null && this.height !== null) {\n                    var rect = new $.Rect(position.x, position.y, size.x, size.y);\n                    var boundingBox = this._getBoundingBox(rect, viewport.degrees);\n                    position = boundingBox.getTopLeft();\n                    size = boundingBox.getSize();\n                } else {\n                    rotate = viewport.degrees;\n                }\n            }\n\n            return {\n                position: position,\n                size: size,\n                rotate: rotate\n            };\n        },\n\n        // private\n        _getSizeInPixels: function(viewport) {\n            var width = this.size.x;\n            var height = this.size.y;\n            if (this.width !== null || this.height !== null) {\n                var scaledSize = viewport.deltaPixelsFromPointsNoRotate(\n                    new $.Point(this.width || 0, this.height || 0), true);\n                if (this.width !== null) {\n                    width = scaledSize.x;\n                }\n                if (this.height !== null) {\n                    height = scaledSize.y;\n                }\n            }\n            if (this.checkResize &&\n                (this.width === null || this.height === null)) {\n                var eltSize = this.size = $.getElementSize(this.element);\n                if (this.width === null) {\n                    width = eltSize.x;\n                }\n                if (this.height === null) {\n                    height = eltSize.y;\n                }\n            }\n            return new $.Point(width, height);\n        },\n\n        // private\n        _getBoundingBox: function(rect, degrees) {\n            var refPoint = this._getPlacementPoint(rect);\n            return rect.rotate(degrees, refPoint).getBoundingBox();\n        },\n\n        // private\n        _getPlacementPoint: function(rect) {\n            var result = new $.Point(rect.x, rect.y);\n            var properties = $.Placement.properties[this.placement];\n            if (properties) {\n                if (properties.isHorizontallyCentered) {\n                    result.x += rect.width / 2;\n                } else if (properties.isRight) {\n                    result.x += rect.width;\n                }\n                if (properties.isVerticallyCentered) {\n                    result.y += rect.height / 2;\n                } else if (properties.isBottom) {\n                    result.y += rect.height;\n                }\n            }\n            return result;\n        },\n\n        // private\n        _getTransformOrigin: function() {\n            var result = \"\";\n            var properties = $.Placement.properties[this.placement];\n            if (!properties) {\n                return result;\n            }\n            if (properties.isLeft) {\n                result = \"left\";\n            } else if (properties.isRight) {\n                result = \"right\";\n            }\n            if (properties.isTop) {\n                result += \" top\";\n            } else if (properties.isBottom) {\n                result += \" bottom\";\n            }\n            return result;\n        },\n\n        /**\n         * Changes the overlay settings.\n         * @function\n         * @param {OpenSeadragon.Point|OpenSeadragon.Rect|Object} location\n         * If an object is specified, the options are the same than the constructor\n         * except for the element which can not be changed.\n         * @param {OpenSeadragon.Placement} placement\n         */\n        update: function(location, placement) {\n            var options = $.isPlainObject(location) ? location : {\n                location: location,\n                placement: placement\n            };\n            this._init({\n                location: options.location || this.location,\n                placement: options.placement !== undefined ?\n                    options.placement : this.placement,\n                onDraw: options.onDraw || this.onDraw,\n                checkResize: options.checkResize || this.checkResize,\n                width: options.width !== undefined ? options.width : this.width,\n                height: options.height !== undefined ? options.height : this.height,\n                rotationMode: options.rotationMode || this.rotationMode\n            });\n        },\n\n        /**\n         * Returns the current bounds of the overlay in viewport coordinates\n         * @function\n         * @param {OpenSeadragon.Viewport} viewport the viewport\n         * @returns {OpenSeadragon.Rect} overlay bounds\n         */\n        getBounds: function(viewport) {\n            $.console.assert(viewport,\n                'A viewport must now be passed to Overlay.getBounds.');\n            var width = this.width;\n            var height = this.height;\n            if (width === null || height === null) {\n                var size = viewport.deltaPointsFromPixelsNoRotate(this.size, true);\n                if (width === null) {\n                    width = size.x;\n                }\n                if (height === null) {\n                    height = size.y;\n                }\n            }\n            var location = this.location.clone();\n            this.adjust(location, new $.Point(width, height));\n            return this._adjustBoundsForRotation(\n                viewport, new $.Rect(location.x, location.y, width, height));\n        },\n\n        // private\n        _adjustBoundsForRotation: function(viewport, bounds) {\n            if (!viewport ||\n                viewport.degrees === 0 ||\n                this.rotationMode === $.OverlayRotationMode.EXACT) {\n                return bounds;\n            }\n            if (this.rotationMode === $.OverlayRotationMode.BOUNDING_BOX) {\n                // If overlay not fully scalable, BOUNDING_BOX falls back to EXACT\n                if (this.width === null || this.height === null) {\n                    return bounds;\n                }\n                // It is easier to just compute the position and size and\n                // convert to viewport coordinates.\n                var positionAndSize = this._getOverlayPositionAndSize(viewport);\n                return viewport.viewerElementToViewportRectangle(new $.Rect(\n                    positionAndSize.position.x,\n                    positionAndSize.position.y,\n                    positionAndSize.size.x,\n                    positionAndSize.size.y));\n            }\n\n            // NO_ROTATION case\n            return bounds.rotate(-viewport.degrees,\n                this._getPlacementPoint(bounds));\n        }\n    };\n\n}(OpenSeadragon));\n\n/*\n * OpenSeadragon - Drawer\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class Drawer\n * @memberof OpenSeadragon\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Drawer.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this Drawer.\n * @param {OpenSeadragon.Viewport} options.viewport - Reference to Viewer viewport.\n * @param {Element} options.element - Parent element.\n * @param {Number} [options.debugGridColor] - See debugGridColor in {@link OpenSeadragon.Options} for details.\n */\n$.Drawer = function( options ) {\n\n    $.console.assert( options.viewer, \"[Drawer] options.viewer is required\" );\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    var args  = arguments;\n\n    if( !$.isPlainObject( options ) ){\n        options = {\n            source:     args[ 0 ], // Reference to Viewer tile source.\n            viewport:   args[ 1 ], // Reference to Viewer viewport.\n            element:    args[ 2 ]  // Parent element.\n        };\n    }\n\n    $.console.assert( options.viewport, \"[Drawer] options.viewport is required\" );\n    $.console.assert( options.element, \"[Drawer] options.element is required\" );\n\n    if ( options.source ) {\n        $.console.error( \"[Drawer] options.source is no longer accepted; use TiledImage instead\" );\n    }\n\n    this.viewer = options.viewer;\n    this.viewport = options.viewport;\n    this.debugGridColor = typeof options.debugGridColor === 'string' ? [options.debugGridColor] : options.debugGridColor || $.DEFAULT_SETTINGS.debugGridColor;\n    if (options.opacity) {\n        $.console.error( \"[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead\" );\n    }\n\n    this.useCanvas  = $.supportsCanvas && ( this.viewer ? this.viewer.useCanvas : true );\n    /**\n     * The parent element of this Drawer instance, passed in when the Drawer was created.\n     * The parent of {@link OpenSeadragon.Drawer#canvas}.\n     * @member {Element} container\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.container  = $.getElement( options.element );\n    /**\n     * A &lt;canvas&gt; element if the browser supports them, otherwise a &lt;div&gt; element.\n     * Child element of {@link OpenSeadragon.Drawer#container}.\n     * @member {Element} canvas\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.canvas     = $.makeNeutralElement( this.useCanvas ? \"canvas\" : \"div\" );\n    /**\n     * 2d drawing context for {@link OpenSeadragon.Drawer#canvas} if it's a &lt;canvas&gt; element, otherwise null.\n     * @member {Object} context\n     * @memberof OpenSeadragon.Drawer#\n     */\n    this.context    = this.useCanvas ? this.canvas.getContext( \"2d\" ) : null;\n\n    /**\n     * Sketch canvas used to temporarily draw tiles which cannot be drawn directly\n     * to the main canvas due to opacity. Lazily initialized.\n     */\n    this.sketchCanvas = null;\n    this.sketchContext = null;\n\n    /**\n     * @member {Element} element\n     * @memberof OpenSeadragon.Drawer#\n     * @deprecated Alias for {@link OpenSeadragon.Drawer#container}.\n     */\n    this.element    = this.container;\n\n    // We force our container to ltr because our drawing math doesn't work in rtl.\n    // This issue only affects our canvas renderer, but we do it always for consistency.\n    // Note that this means overlays you want to be rtl need to be explicitly set to rtl.\n    this.container.dir = 'ltr';\n\n    // check canvas available width and height, set canvas width and height such that the canvas backing store is set to the proper pixel density\n    if (this.useCanvas) {\n        var viewportSize = this._calculateCanvasSize();\n        this.canvas.width = viewportSize.x;\n        this.canvas.height = viewportSize.y;\n    }\n\n    this.canvas.style.width     = \"100%\";\n    this.canvas.style.height    = \"100%\";\n    this.canvas.style.position  = \"absolute\";\n    $.setElementOpacity( this.canvas, this.opacity, true );\n    // Allow pointer events to pass through the canvas element so implicit\n    //   pointer capture works on touch devices\n    $.setElementPointerEventsNone( this.canvas );\n    $.setElementTouchActionNone( this.canvas );\n\n    // explicit left-align\n    this.container.style.textAlign = \"left\";\n    this.container.appendChild( this.canvas );\n\n    // Image smoothing for canvas rendering (only if canvas is used).\n    // Canvas default is \"true\", so this will only be changed if user specified \"false\".\n    this._imageSmoothingEnabled = true;\n};\n\n/** @lends OpenSeadragon.Drawer.prototype */\n$.Drawer.prototype = {\n    // deprecated\n    addOverlay: function( element, location, placement, onDraw ) {\n        $.console.error(\"drawer.addOverlay is deprecated. Use viewer.addOverlay instead.\");\n        this.viewer.addOverlay( element, location, placement, onDraw );\n        return this;\n    },\n\n    // deprecated\n    updateOverlay: function( element, location, placement ) {\n        $.console.error(\"drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.\");\n        this.viewer.updateOverlay( element, location, placement );\n        return this;\n    },\n\n    // deprecated\n    removeOverlay: function( element ) {\n        $.console.error(\"drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.\");\n        this.viewer.removeOverlay( element );\n        return this;\n    },\n\n    // deprecated\n    clearOverlays: function() {\n        $.console.error(\"drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.\");\n        this.viewer.clearOverlays();\n        return this;\n    },\n\n    /**\n     * This function converts the given point from to the drawer coordinate by\n     * multiplying it with the pixel density.\n     * This function does not take rotation into account, thus assuming provided\n     * point is at 0 degree.\n     * @param {OpenSeadragon.Point} point - the pixel point to convert\n     */\n    viewportCoordToDrawerCoord: function(point) {\n        var vpPoint = this.viewport.pixelFromPointNoRotate(point, true);\n        return new $.Point(\n            vpPoint.x * $.pixelDensityRatio,\n            vpPoint.y * $.pixelDensityRatio\n        );\n    },\n\n    /**\n     * This function will create multiple polygon paths on the drawing context by provided polygons,\n     * then clip the context to the paths.\n     * @param {OpenSeadragon.Point[][]} polygons - an array of polygons. A polygon is an array of OpenSeadragon.Point\n     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n     */\n    clipWithPolygons: function (polygons, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n        var context = this._getContext(useSketch);\n        context.beginPath();\n        polygons.forEach(function (polygon) {\n            polygon.forEach(function (coord, i) {\n                context[i === 0 ? 'moveTo' : 'lineTo'](coord.x, coord.y);\n          });\n        });\n        context.clip();\n    },\n\n    /**\n     * Set the opacity of the drawer.\n     * @param {Number} opacity\n     * @return {OpenSeadragon.Drawer} Chainable.\n     */\n    setOpacity: function( opacity ) {\n        $.console.error(\"drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.\");\n        var world = this.viewer.world;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            world.getItemAt( i ).setOpacity( opacity );\n        }\n        return this;\n    },\n\n    /**\n     * Get the opacity of the drawer.\n     * @returns {Number}\n     */\n    getOpacity: function() {\n        $.console.error(\"drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.\");\n        var world = this.viewer.world;\n        var maxOpacity = 0;\n        for (var i = 0; i < world.getItemCount(); i++) {\n            var opacity = world.getItemAt( i ).getOpacity();\n            if ( opacity > maxOpacity ) {\n                maxOpacity = opacity;\n            }\n        }\n        return maxOpacity;\n    },\n\n    // deprecated\n    needsUpdate: function() {\n        $.console.error( \"[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.\" );\n        return this.viewer.world.needsDraw();\n    },\n\n    // deprecated\n    numTilesLoaded: function() {\n        $.console.error( \"[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.\" );\n        return this.viewer.tileCache.numTilesLoaded();\n    },\n\n    // deprecated\n    reset: function() {\n        $.console.error( \"[Drawer.reset] this function is deprecated. Use World.resetItems instead.\" );\n        this.viewer.world.resetItems();\n        return this;\n    },\n\n    // deprecated\n    update: function() {\n        $.console.error( \"[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.\" );\n        this.clear();\n        this.viewer.world.draw();\n        return this;\n    },\n\n    /**\n     * @return {Boolean} True if rotation is supported.\n     */\n    canRotate: function() {\n        return this.useCanvas;\n    },\n\n    /**\n     * Destroy the drawer (unload current loaded tiles)\n     */\n    destroy: function() {\n        //force unloading of current canvas (1x1 will be gc later, trick not necessarily needed)\n        this.canvas.width  = 1;\n        this.canvas.height = 1;\n        this.sketchCanvas = null;\n        this.sketchContext = null;\n    },\n\n    /**\n     * Clears the Drawer so it's ready to draw another frame.\n     */\n    clear: function() {\n        this.canvas.innerHTML = \"\";\n        if ( this.useCanvas ) {\n            var viewportSize = this._calculateCanvasSize();\n            if( this.canvas.width !== viewportSize.x ||\n                this.canvas.height !== viewportSize.y ) {\n                this.canvas.width = viewportSize.x;\n                this.canvas.height = viewportSize.y;\n                this._updateImageSmoothingEnabled(this.context);\n                if ( this.sketchCanvas !== null ) {\n                    var sketchCanvasSize = this._calculateSketchCanvasSize();\n                    this.sketchCanvas.width = sketchCanvasSize.x;\n                    this.sketchCanvas.height = sketchCanvasSize.y;\n                    this._updateImageSmoothingEnabled(this.sketchContext);\n                }\n            }\n            this._clear();\n        }\n    },\n\n    _clear: function (useSketch, bounds) {\n        if (!this.useCanvas) {\n            return;\n        }\n        var context = this._getContext(useSketch);\n        if (bounds) {\n            context.clearRect(bounds.x, bounds.y, bounds.width, bounds.height);\n        } else {\n            var canvas = context.canvas;\n            context.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    },\n\n    /**\n     * Scale from OpenSeadragon viewer rectangle to drawer rectangle\n     * (ignoring rotation)\n     * @param {OpenSeadragon.Rect} rectangle - The rectangle in viewport coordinate system.\n     * @return {OpenSeadragon.Rect} Rectangle in drawer coordinate system.\n     */\n    viewportToDrawerRectangle: function(rectangle) {\n        var topLeft = this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(), true);\n        var size = this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(), true);\n\n        return new $.Rect(\n            topLeft.x * $.pixelDensityRatio,\n            topLeft.y * $.pixelDensityRatio,\n            size.x * $.pixelDensityRatio,\n            size.y * $.pixelDensityRatio\n        );\n    },\n\n    /**\n     * Draws the given tile.\n     * @param {OpenSeadragon.Tile} tile - The tile to draw.\n     * @param {Function} drawingHandler - Method for firing the drawing event if using canvas.\n     * drawingHandler({context, tile, rendered})\n     * @param {Boolean} useSketch - Whether to use the sketch canvas or not.\n     * where <code>rendered</code> is the context with the pre-drawn image.\n     * @param {Float} [scale=1] - Apply a scale to tile position and size. Defaults to 1.\n     * @param {OpenSeadragon.Point} [translate] A translation vector to offset tile position\n     * @param {Boolean} [shouldRoundPositionAndSize] - Tells whether to round\n     * position and size of tiles supporting alpha channel in non-transparency\n     * context.\n     */\n    drawTile: function(tile, drawingHandler, useSketch, scale, translate, shouldRoundPositionAndSize) {\n        $.console.assert(tile, '[Drawer.drawTile] tile is required');\n        $.console.assert(drawingHandler, '[Drawer.drawTile] drawingHandler is required');\n\n        if (this.useCanvas) {\n            var context = this._getContext(useSketch);\n            scale = scale || 1;\n            tile.drawCanvas(context, drawingHandler, scale, translate, shouldRoundPositionAndSize);\n        } else {\n            tile.drawHTML( this.canvas );\n        }\n    },\n\n    _getContext: function( useSketch ) {\n        var context = this.context;\n        if ( useSketch ) {\n            if (this.sketchCanvas === null) {\n                this.sketchCanvas = document.createElement( \"canvas\" );\n                var sketchCanvasSize = this._calculateSketchCanvasSize();\n                this.sketchCanvas.width = sketchCanvasSize.x;\n                this.sketchCanvas.height = sketchCanvasSize.y;\n                this.sketchContext = this.sketchCanvas.getContext( \"2d\" );\n\n                // If the viewport is not currently rotated, the sketchCanvas\n                // will have the same size as the main canvas. However, if\n                // the viewport get rotated later on, we will need to resize it.\n                if (this.viewport.getRotation() === 0) {\n                    var self = this;\n                    this.viewer.addHandler('rotate', function resizeSketchCanvas() {\n                        if (self.viewport.getRotation() === 0) {\n                            return;\n                        }\n                        self.viewer.removeHandler('rotate', resizeSketchCanvas);\n                        var sketchCanvasSize = self._calculateSketchCanvasSize();\n                        self.sketchCanvas.width = sketchCanvasSize.x;\n                        self.sketchCanvas.height = sketchCanvasSize.y;\n                    });\n                }\n                this._updateImageSmoothingEnabled(this.sketchContext);\n            }\n            context = this.sketchContext;\n        }\n        return context;\n    },\n\n    // private\n    saveContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).save();\n    },\n\n    // private\n    restoreContext: function( useSketch ) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        this._getContext( useSketch ).restore();\n    },\n\n    // private\n    setClip: function(rect, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.beginPath();\n        context.rect(rect.x, rect.y, rect.width, rect.height);\n        context.clip();\n    },\n\n    // private\n    drawRectangle: function(rect, fillStyle, useSketch) {\n        if (!this.useCanvas) {\n            return;\n        }\n\n        var context = this._getContext( useSketch );\n        context.save();\n        context.fillStyle = fillStyle;\n        context.fillRect(rect.x, rect.y, rect.width, rect.height);\n        context.restore();\n    },\n\n    /**\n     * Blends the sketch canvas in the main canvas.\n     * @param {Object} options The options\n     * @param {Float} options.opacity The opacity of the blending.\n     * @param {Float} [options.scale=1] The scale at which tiles were drawn on\n     * the sketch. Default is 1.\n     * Use scale to draw at a lower scale and then enlarge onto the main canvas.\n     * @param {OpenSeadragon.Point} [options.translate] A translation vector\n     * that was used to draw the tiles\n     * @param {String} [options.compositeOperation] - How the image is\n     * composited onto other images; see compositeOperation in\n     * {@link OpenSeadragon.Options} for possible values.\n     * @param {OpenSeadragon.Rect} [options.bounds] The part of the sketch\n     * canvas to blend in the main canvas. If specified, options.scale and\n     * options.translate get ignored.\n     */\n    blendSketch: function(opacity, scale, translate, compositeOperation) {\n        var options = opacity;\n        if (!$.isPlainObject(options)) {\n            options = {\n                opacity: opacity,\n                scale: scale,\n                translate: translate,\n                compositeOperation: compositeOperation\n            };\n        }\n        if (!this.useCanvas || !this.sketchCanvas) {\n            return;\n        }\n        opacity = options.opacity;\n        compositeOperation = options.compositeOperation;\n        var bounds = options.bounds;\n\n        this.context.save();\n        this.context.globalAlpha = opacity;\n        if (compositeOperation) {\n            this.context.globalCompositeOperation = compositeOperation;\n        }\n        if (bounds) {\n            // Internet Explorer, Microsoft Edge, and Safari have problems\n            // when you call context.drawImage with negative x or y\n            // or x + width or y + height greater than the canvas width or height respectively.\n            if (bounds.x < 0) {\n                bounds.width += bounds.x;\n                bounds.x = 0;\n            }\n            if (bounds.x + bounds.width > this.canvas.width) {\n                bounds.width = this.canvas.width - bounds.x;\n            }\n            if (bounds.y < 0) {\n                bounds.height += bounds.y;\n                bounds.y = 0;\n            }\n            if (bounds.y + bounds.height > this.canvas.height) {\n                bounds.height = this.canvas.height - bounds.y;\n            }\n\n            this.context.drawImage(\n                this.sketchCanvas,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height,\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height\n            );\n        } else {\n            scale = options.scale || 1;\n            translate = options.translate;\n            var position = translate instanceof $.Point ?\n                translate : new $.Point(0, 0);\n\n            var widthExt = 0;\n            var heightExt = 0;\n            if (translate) {\n                var widthDiff = this.sketchCanvas.width - this.canvas.width;\n                var heightDiff = this.sketchCanvas.height - this.canvas.height;\n                widthExt = Math.round(widthDiff / 2);\n                heightExt = Math.round(heightDiff / 2);\n            }\n            this.context.drawImage(\n                this.sketchCanvas,\n                position.x - widthExt * scale,\n                position.y - heightExt * scale,\n                (this.canvas.width + 2 * widthExt) * scale,\n                (this.canvas.height + 2 * heightExt) * scale,\n                -widthExt,\n                -heightExt,\n                this.canvas.width + 2 * widthExt,\n                this.canvas.height + 2 * heightExt\n            );\n        }\n        this.context.restore();\n    },\n\n    // private\n    drawDebugInfo: function(tile, count, i, tiledImage) {\n        if ( !this.useCanvas ) {\n            return;\n        }\n\n        var colorIndex = this.viewer.world.getIndexOfItem(tiledImage) % this.debugGridColor.length;\n        var context = this.context;\n        context.save();\n        context.lineWidth = 2 * $.pixelDensityRatio;\n        context.font = 'small-caps bold ' + (13 * $.pixelDensityRatio) + 'px arial';\n        context.strokeStyle = this.debugGridColor[colorIndex];\n        context.fillStyle = this.debugGridColor[colorIndex];\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._offsetForRotation({degrees: this.viewport.degrees});\n        }\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            this._offsetForRotation({\n                degrees: tiledImage.getRotation(true),\n                point: tiledImage.viewport.pixelFromPointNoRotate(\n                    tiledImage._getRotationPoint(true), true)\n            });\n        }\n        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              tiledImage._drawer._flip();\n          }\n        }\n\n        context.strokeRect(\n            tile.position.x * $.pixelDensityRatio,\n            tile.position.y * $.pixelDensityRatio,\n            tile.size.x * $.pixelDensityRatio,\n            tile.size.y * $.pixelDensityRatio\n        );\n\n        var tileCenterX = (tile.position.x + (tile.size.x / 2)) * $.pixelDensityRatio;\n        var tileCenterY = (tile.position.y + (tile.size.y / 2)) * $.pixelDensityRatio;\n\n        // Rotate the text the right way around.\n        context.translate( tileCenterX, tileCenterY );\n        context.rotate( Math.PI / 180 * -this.viewport.degrees );\n        context.translate( -tileCenterX, -tileCenterY );\n\n        if( tile.x === 0 && tile.y === 0 ){\n            context.fillText(\n                \"Zoom: \" + this.viewport.getZoom(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 30) * $.pixelDensityRatio\n            );\n            context.fillText(\n                \"Pan: \" + this.viewport.getBounds().toString(),\n                tile.position.x * $.pixelDensityRatio,\n                (tile.position.y - 20) * $.pixelDensityRatio\n            );\n        }\n        context.fillText(\n            \"Level: \" + tile.level,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 20) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Column: \" + tile.x,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 30) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Row: \" + tile.y,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 40) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Order: \" + i + \" of \" + count,\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 50) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Size: \" + tile.size.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 60) * $.pixelDensityRatio\n        );\n        context.fillText(\n            \"Position: \" + tile.position.toString(),\n            (tile.position.x + 10) * $.pixelDensityRatio,\n            (tile.position.y + 70) * $.pixelDensityRatio\n        );\n\n        if ( this.viewport.degrees !== 0 ) {\n            this._restoreRotationChanges();\n        }\n        if (tiledImage.getRotation(true) % 360 !== 0) {\n            this._restoreRotationChanges();\n        }\n\n        if (tiledImage.viewport.degrees === 0 && tiledImage.getRotation(true) % 360 === 0){\n          if(tiledImage._drawer.viewer.viewport.getFlip()) {\n              tiledImage._drawer._flip();\n          }\n        }\n\n        context.restore();\n    },\n\n    // private\n    debugRect: function(rect) {\n        if ( this.useCanvas ) {\n            var context = this.context;\n            context.save();\n            context.lineWidth = 2 * $.pixelDensityRatio;\n            context.strokeStyle = this.debugGridColor[0];\n            context.fillStyle = this.debugGridColor[0];\n\n            context.strokeRect(\n                rect.x * $.pixelDensityRatio,\n                rect.y * $.pixelDensityRatio,\n                rect.width * $.pixelDensityRatio,\n                rect.height * $.pixelDensityRatio\n            );\n\n            context.restore();\n        }\n    },\n\n    /**\n     * Turns image smoothing on or off for this viewer. Note: Ignored in some (especially older) browsers that do not support this property.\n     *\n     * @function\n     * @param {Boolean} [imageSmoothingEnabled] - Whether or not the image is\n     * drawn smoothly on the canvas; see imageSmoothingEnabled in\n     * {@link OpenSeadragon.Options} for more explanation.\n     */\n    setImageSmoothingEnabled: function(imageSmoothingEnabled){\n        if ( this.useCanvas ) {\n            this._imageSmoothingEnabled = imageSmoothingEnabled;\n            this._updateImageSmoothingEnabled(this.context);\n            this.viewer.forceRedraw();\n        }\n    },\n\n    // private\n    _updateImageSmoothingEnabled: function(context){\n        context.msImageSmoothingEnabled = this._imageSmoothingEnabled;\n        context.imageSmoothingEnabled = this._imageSmoothingEnabled;\n    },\n\n    /**\n     * Get the canvas size\n     * @param {Boolean} sketch If set to true return the size of the sketch canvas\n     * @returns {OpenSeadragon.Point} The size of the canvas\n     */\n    getCanvasSize: function(sketch) {\n        var canvas = this._getContext(sketch).canvas;\n        return new $.Point(canvas.width, canvas.height);\n    },\n\n    getCanvasCenter: function() {\n        return new $.Point(this.canvas.width / 2, this.canvas.height / 2);\n    },\n\n    // private\n    _offsetForRotation: function(options) {\n        var point = options.point ?\n            options.point.times($.pixelDensityRatio) :\n            this.getCanvasCenter();\n\n        var context = this._getContext(options.useSketch);\n        context.save();\n\n        context.translate(point.x, point.y);\n        if(this.viewer.viewport.flipped){\n          context.rotate(Math.PI / 180 * -options.degrees);\n          context.scale(-1, 1);\n        } else{\n          context.rotate(Math.PI / 180 * options.degrees);\n        }\n        context.translate(-point.x, -point.y);\n    },\n\n    // private\n    _flip: function(options) {\n      options = options || {};\n      var point = options.point ?\n        options.point.times($.pixelDensityRatio) :\n        this.getCanvasCenter();\n      var context = this._getContext(options.useSketch);\n\n      context.translate(point.x, 0);\n      context.scale(-1, 1);\n      context.translate(-point.x, 0);\n    },\n\n    // private\n    _restoreRotationChanges: function(useSketch) {\n        var context = this._getContext(useSketch);\n        context.restore();\n    },\n\n    // private\n    _calculateCanvasSize: function() {\n        var pixelDensityRatio = $.pixelDensityRatio;\n        var viewportSize = this.viewport.getContainerSize();\n        return {\n            // canvas width and height are integers\n            x: Math.round(viewportSize.x * pixelDensityRatio),\n            y: Math.round(viewportSize.y * pixelDensityRatio)\n        };\n    },\n\n    // private\n    _calculateSketchCanvasSize: function() {\n        var canvasSize = this._calculateCanvasSize();\n        if (this.viewport.getRotation() === 0) {\n            return canvasSize;\n        }\n        // If the viewport is rotated, we need a larger sketch canvas in order\n        // to support edge smoothing.\n        var sketchCanvasSize = Math.ceil(Math.sqrt(\n            canvasSize.x * canvasSize.x +\n            canvasSize.y * canvasSize.y));\n        return {\n            x: sketchCanvasSize,\n            y: sketchCanvasSize\n        };\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - Viewport\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n\n/**\n * @class Viewport\n * @memberof OpenSeadragon\n * @classdesc Handles coordinate-related functionality (zoom, pan, rotation, etc.)\n * for an {@link OpenSeadragon.Viewer}.\n * @param {Object} options - Options for this Viewport.\n * @param {Object} [options.margins] - See viewportMargins in {@link OpenSeadragon.Options}.\n * @param {Number} [options.springStiffness] - See springStiffness in {@link OpenSeadragon.Options}.\n * @param {Number} [options.animationTime] - See animationTime in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See minZoomImageRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomPixelRatio] - See maxZoomPixelRatio in {@link OpenSeadragon.Options}.\n * @param {Number} [options.visibilityRatio] - See visibilityRatio in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See wrapHorizontal in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See wrapVertical in {@link OpenSeadragon.Options}.\n * @param {Number} [options.defaultZoomLevel] - See defaultZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomLevel] - See minZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.maxZoomLevel] - See maxZoomLevel in {@link OpenSeadragon.Options}.\n * @param {Number} [options.degrees] - See degrees in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.homeFillsViewer] - See homeFillsViewer in {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.silenceMultiImageWarnings] - See silenceMultiImageWarnings in {@link OpenSeadragon.Options}.\n */\n$.Viewport = function( options ) {\n\n    //backward compatibility for positional args while preferring more\n    //idiomatic javascript options object as the only argument\n    var args = arguments;\n    if (args.length && args[0] instanceof $.Point) {\n        options = {\n            containerSize:  args[0],\n            contentSize:    args[1],\n            config:         args[2]\n        };\n    }\n\n    //options.config and the general config argument are deprecated\n    //in favor of the more direct specification of optional settings\n    //being passed directly on the options object\n    if ( options.config ){\n        $.extend( true, options, options.config );\n        delete options.config;\n    }\n\n    this._margins = $.extend({\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n    }, options.margins || {});\n\n    delete options.margins;\n\n    $.extend( true, this, {\n\n        //required settings\n        containerSize:      null,\n        contentSize:        null,\n\n        //internal state properties\n        zoomPoint:          null,\n        viewer:           null,\n\n        //configurable options\n        springStiffness:            $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:              $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:          $.DEFAULT_SETTINGS.minZoomImageRatio,\n        maxZoomPixelRatio:          $.DEFAULT_SETTINGS.maxZoomPixelRatio,\n        visibilityRatio:            $.DEFAULT_SETTINGS.visibilityRatio,\n        wrapHorizontal:             $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:               $.DEFAULT_SETTINGS.wrapVertical,\n        defaultZoomLevel:           $.DEFAULT_SETTINGS.defaultZoomLevel,\n        minZoomLevel:               $.DEFAULT_SETTINGS.minZoomLevel,\n        maxZoomLevel:               $.DEFAULT_SETTINGS.maxZoomLevel,\n        degrees:                    $.DEFAULT_SETTINGS.degrees,\n        flipped:                    $.DEFAULT_SETTINGS.flipped,\n        homeFillsViewer:            $.DEFAULT_SETTINGS.homeFillsViewer,\n        silenceMultiImageWarnings:  $.DEFAULT_SETTINGS.silenceMultiImageWarnings\n\n    }, options );\n\n    this._updateContainerInnerSize();\n\n    this.centerSpringX = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.centerSpringY = new $.Spring({\n        initial: 0,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n    this.zoomSpring    = new $.Spring({\n        exponential: true,\n        initial: 1,\n        springStiffness: this.springStiffness,\n        animationTime:   this.animationTime\n    });\n\n    this._oldCenterX = this.centerSpringX.current.value;\n    this._oldCenterY = this.centerSpringY.current.value;\n    this._oldZoom    = this.zoomSpring.current.value;\n\n    this._setContentBounds(new $.Rect(0, 0, 1, 1), 1);\n\n    this.goHome(true);\n    this.update();\n};\n\n/** @lends OpenSeadragon.Viewport.prototype */\n$.Viewport.prototype = {\n    /**\n     * Updates the viewport's home bounds and constraints for the given content size.\n     * @function\n     * @param {OpenSeadragon.Point} contentSize - size of the content in content units\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:reset-size\n     */\n    resetContentSize: function(contentSize) {\n        $.console.assert(contentSize, \"[Viewport.resetContentSize] contentSize is required\");\n        $.console.assert(contentSize instanceof $.Point, \"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point\");\n        $.console.assert(contentSize.x > 0, \"[Viewport.resetContentSize] contentSize.x must be greater than 0\");\n        $.console.assert(contentSize.y > 0, \"[Viewport.resetContentSize] contentSize.y must be greater than 0\");\n\n        this._setContentBounds(new $.Rect(0, 0, 1, contentSize.y / contentSize.x), contentSize.x);\n        return this;\n    },\n\n    // deprecated\n    setHomeBounds: function(bounds, contentFactor) {\n        $.console.error(\"[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.\");\n        this._setContentBounds(bounds, contentFactor);\n    },\n\n    // Set the viewport's content bounds\n    // @param {OpenSeadragon.Rect} bounds - the new bounds in viewport coordinates\n    // without rotation\n    // @param {Number} contentFactor - how many content units per viewport unit\n    // @fires OpenSeadragon.Viewer.event:reset-size\n    // @private\n    _setContentBounds: function(bounds, contentFactor) {\n        $.console.assert(bounds, \"[Viewport._setContentBounds] bounds is required\");\n        $.console.assert(bounds instanceof $.Rect, \"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect\");\n        $.console.assert(bounds.width > 0, \"[Viewport._setContentBounds] bounds.width must be greater than 0\");\n        $.console.assert(bounds.height > 0, \"[Viewport._setContentBounds] bounds.height must be greater than 0\");\n\n        this._contentBoundsNoRotate = bounds.clone();\n        this._contentSizeNoRotate = this._contentBoundsNoRotate.getSize().times(\n            contentFactor);\n\n        this._contentBounds = bounds.rotate(this.degrees).getBoundingBox();\n        this._contentSize = this._contentBounds.getSize().times(contentFactor);\n        this._contentAspectRatio = this._contentSize.x / this._contentSize.y;\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewer's content size or home bounds are reset\n             * (see {@link OpenSeadragon.Viewport#resetContentSize}).\n             *\n             * @event reset-size\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} contentSize\n             * @property {OpenSeadragon.Rect} contentBounds - Content bounds.\n             * @property {OpenSeadragon.Rect} homeBounds - Content bounds.\n             * Deprecated use contentBounds instead.\n             * @property {Number} contentFactor\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('reset-size', {\n                contentSize: this._contentSizeNoRotate.clone(),\n                contentFactor: contentFactor,\n                homeBounds: this._contentBoundsNoRotate.clone(),\n                contentBounds: this._contentBounds.clone()\n            });\n        }\n    },\n\n    /**\n     * Returns the home zoom in \"viewport zoom\" value.\n     * @function\n     * @returns {Number} The home zoom in \"viewport zoom\".\n     */\n    getHomeZoom: function() {\n        if (this.defaultZoomLevel) {\n            return this.defaultZoomLevel;\n        }\n\n        var aspectFactor = this._contentAspectRatio / this.getAspectRatio();\n        var output;\n        if (this.homeFillsViewer) { // fill the viewer and clip the image\n            output = aspectFactor >= 1 ? aspectFactor : 1;\n        } else {\n            output = aspectFactor >= 1 ? 1 : aspectFactor;\n        }\n\n        return output / this._contentBounds.width;\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this.getHomeBoundsNoRotate().rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the home bounds in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getHomeBounds} to take it into account.\n     * @function\n     * @returns {OpenSeadragon.Rect} The home bounds in vewport coordinates.\n     */\n    getHomeBoundsNoRotate: function() {\n        var center = this._contentBounds.getCenter();\n        var width  = 1.0 / this.getHomeZoom();\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} immediately\n     * @fires OpenSeadragon.Viewer.event:home\n     */\n    goHome: function(immediately) {\n        if (this.viewer) {\n            /**\n             * Raised when the \"home\" operation occurs (see {@link OpenSeadragon.Viewport#goHome}).\n             *\n             * @event home\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('home', {\n                immediately: immediately\n            });\n        }\n        return this.fitBounds(this.getHomeBounds(), immediately);\n    },\n\n    /**\n     * @function\n     */\n    getMinZoom: function() {\n        var homeZoom = this.getHomeZoom(),\n            zoom = this.minZoomLevel ?\n            this.minZoomLevel :\n                this.minZoomImageRatio * homeZoom;\n\n        return zoom;\n    },\n\n    /**\n     * @function\n     */\n    getMaxZoom: function() {\n        var zoom = this.maxZoomLevel;\n        if (!zoom) {\n            zoom = this._contentSize.x * this.maxZoomPixelRatio / this._containerInnerSize.x;\n            zoom /= this._contentBounds.width;\n        }\n\n        return Math.max( zoom, this.getHomeZoom() );\n    },\n\n    /**\n     * @function\n     */\n    getAspectRatio: function() {\n        return this._containerInnerSize.x / this._containerInnerSize.y;\n    },\n\n    /**\n     * @function\n     * @returns {OpenSeadragon.Point} The size of the container, in screen coordinates.\n     */\n    getContainerSize: function() {\n        return new $.Point(\n            this.containerSize.x,\n            this.containerSize.y\n        );\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @returns {Object} Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    getMargins: function() {\n        return $.extend({}, this._margins); // Make a copy so we are not returning our original\n    },\n\n    /**\n     * The margins push the \"home\" region in from the sides by the specified amounts.\n     * @function\n     * @param {Object} margins - Properties (Numbers, in screen coordinates): left, top, right, bottom.\n     */\n    setMargins: function(margins) {\n        $.console.assert($.type(margins) === 'object', '[Viewport.setMargins] margins must be an object');\n\n        this._margins = $.extend({\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        }, margins);\n\n        this._updateContainerInnerSize();\n        if (this.viewer) {\n            this.viewer.forceRedraw();\n        }\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBounds: function(current) {\n        return this.getBoundsNoRotate(current).rotate(-this.getRotation());\n    },\n\n    /**\n     * Returns the bounds of the visible area in viewport coordinates.\n     * This method ignores the viewport rotation. Use\n     * {@link OpenSeadragon.Viewport#getBounds} to take it into account.\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to, in viewport coordinates.\n     */\n    getBoundsNoRotate: function(current) {\n        var center = this.getCenter(current);\n        var width  = 1.0 / this.getZoom(current);\n        var height = width / this.getAspectRatio();\n\n        return new $.Rect(\n            center.x - (width / 2.0),\n            center.y - (height / 2.0),\n            width,\n            height\n        );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsWithMargins: function(current) {\n        return this.getBoundsNoRotateWithMargins(current).rotate(\n            -this.getRotation(), this.getCenter(current));\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @returns {OpenSeadragon.Rect} The location you are zoomed/panned to,\n     * including the space taken by margins, in viewport coordinates.\n     */\n    getBoundsNoRotateWithMargins: function(current) {\n        var bounds = this.getBoundsNoRotate(current);\n        var factor = this._containerInnerSize.x * this.getZoom(current);\n        bounds.x -= this._margins.left / factor;\n        bounds.y -= this._margins.top / factor;\n        bounds.width += (this._margins.left + this._margins.right) / factor;\n        bounds.height += (this._margins.top + this._margins.bottom) / factor;\n        return bounds;\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getCenter: function( current ) {\n        var centerCurrent = new $.Point(\n                this.centerSpringX.current.value,\n                this.centerSpringY.current.value\n            ),\n            centerTarget = new $.Point(\n                this.centerSpringX.target.value,\n                this.centerSpringY.target.value\n            ),\n            oldZoomPixel,\n            zoom,\n            width,\n            height,\n            bounds,\n            newZoomPixel,\n            deltaZoomPixels,\n            deltaZoomPoints;\n\n        if ( current ) {\n            return centerCurrent;\n        } else if ( !this.zoomPoint ) {\n            return centerTarget;\n        }\n\n        oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n        zoom    = this.getZoom();\n        width   = 1.0 / zoom;\n        height  = width / this.getAspectRatio();\n        bounds  = new $.Rect(\n            centerCurrent.x - width / 2.0,\n            centerCurrent.y - height / 2.0,\n            width,\n            height\n        );\n\n        newZoomPixel = this._pixelFromPoint(this.zoomPoint, bounds);\n        deltaZoomPixels = newZoomPixel.minus( oldZoomPixel );\n        deltaZoomPoints = deltaZoomPixels.divide( this._containerInnerSize.x * zoom );\n\n        return centerTarget.plus( deltaZoomPoints );\n    },\n\n    /**\n     * @function\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     */\n    getZoom: function( current ) {\n        if ( current ) {\n            return this.zoomSpring.current.value;\n        } else {\n            return this.zoomSpring.target.value;\n        }\n    },\n\n    // private\n    _applyZoomConstraints: function(zoom) {\n        return Math.max(\n            Math.min(zoom, this.getMaxZoom()),\n            this.getMinZoom());\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @return {OpenSeadragon.Rect} constrained bounds.\n     */\n    _applyBoundaryConstraints: function(bounds) {\n        var newBounds = new $.Rect(\n                bounds.x,\n                bounds.y,\n                bounds.width,\n                bounds.height);\n\n        if (this.wrapHorizontal) {\n            //do nothing\n        } else {\n            var horizontalThreshold = this.visibilityRatio * newBounds.width;\n            var boundsRight = newBounds.x + newBounds.width;\n            var contentRight = this._contentBoundsNoRotate.x + this._contentBoundsNoRotate.width;\n            var leftDx = this._contentBoundsNoRotate.x - boundsRight + horizontalThreshold;\n            var rightDx = contentRight - newBounds.x - horizontalThreshold;\n\n            if (horizontalThreshold > this._contentBoundsNoRotate.width) {\n                newBounds.x += (leftDx + rightDx) / 2;\n            } else if (rightDx < 0) {\n                newBounds.x += rightDx;\n            } else if (leftDx > 0) {\n                newBounds.x += leftDx;\n            }\n        }\n\n        if (this.wrapVertical) {\n            //do nothing\n        } else {\n            var verticalThreshold   = this.visibilityRatio * newBounds.height;\n            var boundsBottom = newBounds.y + newBounds.height;\n            var contentBottom = this._contentBoundsNoRotate.y + this._contentBoundsNoRotate.height;\n            var topDy = this._contentBoundsNoRotate.y - boundsBottom + verticalThreshold;\n            var bottomDy = contentBottom - newBounds.y - verticalThreshold;\n\n            if (verticalThreshold > this._contentBoundsNoRotate.height) {\n                newBounds.y += (topDy + bottomDy) / 2;\n            } else if (bottomDy < 0) {\n                newBounds.y += bottomDy;\n            } else if (topDy > 0) {\n                newBounds.y += topDy;\n            }\n        }\n\n        return newBounds;\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {Boolean} [immediately=false] - whether the function that triggered this event was\n     * called with the \"immediately\" flag\n     */\n    _raiseConstraintsEvent: function(immediately) {\n        if (this.viewer) {\n            /**\n             * Raised when the viewport constraints are applied (see {@link OpenSeadragon.Viewport#applyConstraints}).\n             *\n             * @event constrain\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Boolean} immediately - whether the function that triggered this event was\n             * called with the \"immediately\" flag\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'constrain', {\n                immediately: immediately\n            });\n        }\n    },\n\n    /**\n     * Enforces the minZoom, maxZoom and visibilityRatio constraints by\n     * zooming and panning to the closest acceptable zoom and location.\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    applyConstraints: function(immediately) {\n        var actualZoom = this.getZoom();\n        var constrainedZoom = this._applyZoomConstraints(actualZoom);\n\n        if (actualZoom !== constrainedZoom) {\n            this.zoomTo(constrainedZoom, this.zoomPoint, immediately);\n        }\n\n        var bounds = this.getBoundsNoRotate();\n        var constrainedBounds = this._applyBoundaryConstraints(bounds);\n        this._raiseConstraintsEvent(immediately);\n\n        if (bounds.x !== constrainedBounds.x ||\n            bounds.y !== constrainedBounds.y ||\n            immediately) {\n            this.fitBounds(\n                constrainedBounds.rotate(-this.getRotation()),\n                immediately);\n        }\n        return this;\n    },\n\n    /**\n     * Equivalent to {@link OpenSeadragon.Viewport#applyConstraints}\n     * @function\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:constrain\n     */\n    ensureVisible: function(immediately) {\n        return this.applyConstraints(immediately);\n    },\n\n    /**\n     * @function\n     * @private\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Object} options (immediately=false, constraints=false)\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    _fitBounds: function(bounds, options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var constraints = options.constraints || false;\n\n        var aspect = this.getAspectRatio();\n        var center = bounds.getCenter();\n\n        // Compute width and height of bounding box.\n        var newBounds = new $.Rect(\n            bounds.x,\n            bounds.y,\n            bounds.width,\n            bounds.height,\n            bounds.degrees + this.getRotation())\n            .getBoundingBox();\n\n        if (newBounds.getAspectRatio() >= aspect) {\n            newBounds.height = newBounds.width / aspect;\n        } else {\n            newBounds.width = newBounds.height * aspect;\n        }\n\n        // Compute x and y from width, height and center position\n        newBounds.x = center.x - newBounds.width / 2;\n        newBounds.y = center.y - newBounds.height / 2;\n        var newZoom = 1.0 / newBounds.width;\n\n        if (constraints) {\n            var newBoundsAspectRatio = newBounds.getAspectRatio();\n            var newConstrainedZoom = this._applyZoomConstraints(newZoom);\n\n            if (newZoom !== newConstrainedZoom) {\n                newZoom = newConstrainedZoom;\n                newBounds.width = 1.0 / newZoom;\n                newBounds.x = center.x - newBounds.width / 2;\n                newBounds.height = newBounds.width / newBoundsAspectRatio;\n                newBounds.y = center.y - newBounds.height / 2;\n            }\n\n            newBounds = this._applyBoundaryConstraints(newBounds);\n            center = newBounds.getCenter();\n            this._raiseConstraintsEvent(immediately);\n        }\n\n        if (immediately) {\n            this.panTo(center, true);\n            return this.zoomTo(newZoom, null, true);\n        }\n\n        this.panTo(this.getCenter(true), true);\n        this.zoomTo(this.getZoom(true), null, true);\n\n        var oldBounds = this.getBounds();\n        var oldZoom   = this.getZoom();\n\n        if (oldZoom === 0 || Math.abs(newZoom / oldZoom - 1) < 0.00000001) {\n            this.zoomTo(newZoom, true);\n            return this.panTo(center, immediately);\n        }\n\n        newBounds = newBounds.rotate(-this.getRotation());\n        var referencePoint = newBounds.getTopLeft().times(newZoom)\n            .minus(oldBounds.getTopLeft().times(oldZoom))\n            .divide(newZoom - oldZoom);\n\n        return this.zoomTo(newZoom, referencePoint, immediately);\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport.\n     * Note: this method ignores the constraints (minZoom, maxZoom and\n     * visibilityRatio).\n     * Use {@link OpenSeadragon.Viewport#fitBoundsWithConstraints} to enforce\n     * them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBounds: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: false\n        });\n    },\n\n    /**\n     * Makes the viewport zoom and pan so that the specified bounds take\n     * as much space as possible in the viewport while enforcing the constraints\n     * (minZoom, maxZoom and visibilityRatio).\n     * Note: because this method enforces the constraints, part of the\n     * provided bounds may end up outside of the viewport.\n     * Use {@link OpenSeadragon.Viewport#fitBounds} to ignore them.\n     * @function\n     * @param {OpenSeadragon.Rect} bounds\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitBoundsWithConstraints: function(bounds, immediately) {\n        return this._fitBounds(bounds, {\n            immediately: immediately,\n            constraints: true\n        });\n    },\n\n    /**\n     * Zooms so the image just fills the viewer vertically.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitVertically: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x + (this._contentBounds.width / 2),\n            this._contentBounds.y,\n            0,\n            this._contentBounds.height);\n        return this.fitBounds(box, immediately);\n    },\n\n    /**\n     * Zooms so the image just fills the viewer horizontally.\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    fitHorizontally: function(immediately) {\n        var box = new $.Rect(\n            this._contentBounds.x,\n            this._contentBounds.y + (this._contentBounds.height / 2),\n            this._contentBounds.width,\n            0);\n        return this.fitBounds(box, immediately);\n    },\n\n\n    /**\n     * Returns bounds taking constraints into account\n     * Added to improve constrained panning\n     * @param {Boolean} current - Pass true for the current location; defaults to false (target location).\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    getConstrainedBounds: function(current) {\n        var bounds,\n            constrainedBounds;\n\n        bounds = this.getBounds(current);\n\n        constrainedBounds = this._applyBoundaryConstraints(bounds);\n\n        return constrainedBounds;\n    },\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} delta\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panBy: function( delta, immediately ) {\n        var center = new $.Point(\n            this.centerSpringX.target.value,\n            this.centerSpringY.target.value\n        );\n        return this.panTo( center.plus( delta ), immediately );\n    },\n\n    /**\n     * @function\n     * @param {OpenSeadragon.Point} center\n     * @param {Boolean} immediately\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:pan\n     */\n    panTo: function( center, immediately ) {\n        if ( immediately ) {\n            this.centerSpringX.resetTo( center.x );\n            this.centerSpringY.resetTo( center.y );\n        } else {\n            this.centerSpringX.springTo( center.x );\n            this.centerSpringY.springTo( center.y );\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewport is panned (see {@link OpenSeadragon.Viewport#panBy} and {@link OpenSeadragon.Viewport#panTo}).\n             *\n             * @event pan\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} center\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'pan', {\n                center: center,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomBy: function(factor, refPoint, immediately) {\n        return this.zoomTo(\n            this.zoomSpring.target.value * factor, refPoint, immediately);\n    },\n\n    /**\n     * Zooms to the specified zoom level\n     * @function\n     * @param {Number} zoom The zoom level to zoom to.\n     * @param {OpenSeadragon.Point} [refPoint] The point which will stay at\n     * the same screen location. Defaults to the viewport center.\n     * @param {Boolean} [immediately=false]\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:zoom\n     */\n    zoomTo: function(zoom, refPoint, immediately) {\n        var _this = this;\n\n        this.zoomPoint = refPoint instanceof $.Point &&\n            !isNaN(refPoint.x) &&\n            !isNaN(refPoint.y) ?\n            refPoint :\n            null;\n\n        if (immediately) {\n            this._adjustCenterSpringsForZoomPoint(function() {\n                _this.zoomSpring.resetTo(zoom);\n            });\n        } else {\n            this.zoomSpring.springTo(zoom);\n        }\n\n        if (this.viewer) {\n            /**\n             * Raised when the viewport zoom level changes (see {@link OpenSeadragon.Viewport#zoomBy} and {@link OpenSeadragon.Viewport#zoomTo}).\n             *\n             * @event zoom\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {Number} zoom\n             * @property {OpenSeadragon.Point} refPoint\n             * @property {Boolean} immediately\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('zoom', {\n                zoom: zoom,\n                refPoint: refPoint,\n                immediately: immediately\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Rotates this viewport to the angle specified.\n     * @function\n     * @param {Number} degrees The degrees to set the rotation to.\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    setRotation: function(degrees) {\n        if (!this.viewer || !this.viewer.drawer.canRotate()) {\n            return this;\n        }\n        this.degrees = $.positiveModulo(degrees, 360);\n        this._setContentBounds(\n            this.viewer.world.getHomeBounds(),\n            this.viewer.world.getContentFactor());\n        this.viewer.forceRedraw();\n\n        /**\n         * Raised when rotation has been changed.\n         *\n         * @event rotate\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {Number} degrees - The number of degrees the rotation was set to.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.viewer.raiseEvent('rotate', {degrees: degrees});\n        return this;\n    },\n\n    /**\n     * Gets the current rotation in degrees.\n     * @function\n     * @return {Number} The current rotation in degrees.\n     */\n    getRotation: function() {\n        return this.degrees;\n    },\n\n    /**\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     * @fires OpenSeadragon.Viewer.event:resize\n     */\n    resize: function( newContainerSize, maintain ) {\n        var oldBounds = this.getBoundsNoRotate(),\n            newBounds = oldBounds,\n            widthDeltaFactor;\n\n        this.containerSize.x = newContainerSize.x;\n        this.containerSize.y = newContainerSize.y;\n\n        this._updateContainerInnerSize();\n\n        if ( maintain ) {\n            // TODO: widthDeltaFactor will always be 1; probably not what's intended\n            widthDeltaFactor = newContainerSize.x / this.containerSize.x;\n            newBounds.width  = oldBounds.width * widthDeltaFactor;\n            newBounds.height = newBounds.width / this.getAspectRatio();\n        }\n\n        if( this.viewer ){\n            /**\n             * Raised when the viewer is resized (see {@link OpenSeadragon.Viewport#resize}).\n             *\n             * @event resize\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised this event.\n             * @property {OpenSeadragon.Point} newContainerSize\n             * @property {Boolean} maintain\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'resize', {\n                newContainerSize: newContainerSize,\n                maintain: maintain\n            });\n        }\n\n        return this.fitBounds( newBounds, true );\n    },\n\n    // private\n    _updateContainerInnerSize: function() {\n        this._containerInnerSize = new $.Point(\n            Math.max(1, this.containerSize.x - (this._margins.left + this._margins.right)),\n            Math.max(1, this.containerSize.y - (this._margins.top + this._margins.bottom))\n        );\n    },\n\n    /**\n     * Update the zoom and center (X and Y) springs.\n     * @function\n     * @returns {Boolean} True if any change has been made, false otherwise.\n     */\n    update: function() {\n        var _this = this;\n        this._adjustCenterSpringsForZoomPoint(function() {\n            _this.zoomSpring.update();\n        });\n\n        this.centerSpringX.update();\n        this.centerSpringY.update();\n\n        var changed = this.centerSpringX.current.value !== this._oldCenterX ||\n            this.centerSpringY.current.value !== this._oldCenterY ||\n            this.zoomSpring.current.value !== this._oldZoom;\n\n        this._oldCenterX = this.centerSpringX.current.value;\n        this._oldCenterY = this.centerSpringY.current.value;\n        this._oldZoom    = this.zoomSpring.current.value;\n\n        return changed;\n    },\n\n    _adjustCenterSpringsForZoomPoint: function(zoomSpringHandler) {\n        if (this.zoomPoint) {\n            var oldZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n            zoomSpringHandler();\n            var newZoomPixel = this.pixelFromPoint(this.zoomPoint, true);\n\n            var deltaZoomPixels = newZoomPixel.minus(oldZoomPixel);\n            var deltaZoomPoints = this.deltaPointsFromPixels(\n                deltaZoomPixels, true);\n\n            this.centerSpringX.shiftBy(deltaZoomPoints.x);\n            this.centerSpringY.shiftBy(deltaZoomPoints.y);\n\n            if (this.zoomSpring.isAtTargetValue()) {\n                this.zoomPoint = null;\n            }\n        } else {\n            zoomSpringHandler();\n        }\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPixelsFromPoints if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPointsNoRotate: function(deltaPoints, current) {\n        return deltaPoints.times(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from viewport coordinates to pixels\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPoints - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPixelsFromPoints: function(deltaPoints, current) {\n        return this.deltaPixelsFromPointsNoRotate(\n            deltaPoints.rotate(this.getRotation()),\n            current);\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates. This method does not take rotation into account.\n     * Consider using deltaPointsFromPixels if you need to account for rotation.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixelsNoRotate: function(deltaPixels, current) {\n        return deltaPixels.divide(\n            this._containerInnerSize.x * this.getZoom(current)\n        );\n    },\n\n    /**\n     * Convert a delta (translation vector) from pixels coordinates to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} deltaPixels - The translation vector to convert.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    deltaPointsFromPixels: function(deltaPixels, current) {\n        return this.deltaPointsFromPixelsNoRotate(deltaPixels, current)\n            .rotate(-this.getRotation());\n    },\n\n    /**\n     * Convert viewport coordinates to pixels coordinates.\n     * This method does not take rotation into account.\n     * Consider using pixelFromPoint if you need to account for rotation.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPointNoRotate: function(point, current) {\n        return this._pixelFromPointNoRotate(\n            point, this.getBoundsNoRotate(current));\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates.\n     * @param {OpenSeadragon.Point} point the viewport coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pixelFromPoint: function(point, current) {\n        return this._pixelFromPoint(point, this.getBoundsNoRotate(current));\n    },\n\n    // private\n    _pixelFromPointNoRotate: function(point, bounds) {\n        return point.minus(\n            bounds.getTopLeft()\n        ).times(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            new $.Point(this._margins.left, this._margins.top)\n        );\n    },\n\n    // private\n    _pixelFromPoint: function(point, bounds) {\n        return this._pixelFromPointNoRotate(\n            point.rotate(this.getRotation(), this.getCenter(true)),\n            bounds);\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * This method does not take rotation into account.\n     * Consider using pointFromPixel if you need to account for rotation.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixelNoRotate: function(pixel, current) {\n        var bounds = this.getBoundsNoRotate(current);\n        return pixel.minus(\n            new $.Point(this._margins.left, this._margins.top)\n        ).divide(\n            this._containerInnerSize.x / bounds.width\n        ).plus(\n            bounds.getTopLeft()\n        );\n    },\n\n    /**\n     * Convert pixel coordinates to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel Pixel coordinates\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * defaults to false (target location).\n     * @returns {OpenSeadragon.Point}\n     */\n    pointFromPixel: function(pixel, current) {\n        return this.pointFromPixelNoRotate(pixel, current).rotate(\n            -this.getRotation(),\n            this.getCenter(true)\n        );\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            viewerX * this._contentSizeNoRotate.x / scale,\n            viewerY * this._contentSizeNoRotate.x / scale);\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point|Number)} viewerX either a point or the X\n     * coordinate in viewport coordinate system.\n     * @param {Number} [viewerY] Y coordinate in viewport coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function(viewerX, viewerY) {\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.viewportToImageCoordinates(viewerX.x, viewerX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.viewportToImageCoordinates] is not accurate ' +\n                        'with multi-image; use TiledImage.viewportToImageCoordinates instead.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageCoordinates(viewerX, viewerY, true);\n            }\n        }\n\n        return this._viewportToImageDelta(\n            viewerX - this._contentBoundsNoRotate.x,\n            viewerY - this._contentBoundsNoRotate.y);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY ) {\n        var scale = this._contentBoundsNoRotate.width;\n        return new $.Point(\n            imageX / this._contentSizeNoRotate.x * scale,\n            imageY / this._contentSizeNoRotate.x * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an\n     * OpenSeadragon.Point\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportCoordinates instead.\n     * @function\n     * @param {(OpenSeadragon.Point | Number)} imageX the point or the\n     * X coordinate in image coordinate system.\n     * @param {Number} [imageY] Y coordinate in image coordinate system.\n     * @return {OpenSeadragon.Point} a point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function(imageX, imageY) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            return this.imageToViewportCoordinates(imageX.x, imageX.y);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.imageToViewportCoordinates] is not accurate ' +\n                        'with multi-image; use TiledImage.imageToViewportCoordinates instead.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportCoordinates(imageX, imageY, true);\n            }\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        point.x += this._contentBoundsNoRotate.x;\n        point.y += this._contentBoundsNoRotate.y;\n        return point;\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.imageToViewportRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} imageX the rectangle or the X\n     * coordinate of the top left corner of the rectangle in image coordinate system.\n     * @param {Number} [imageY] the Y coordinate of the top left corner of the rectangle\n     * in image coordinate system.\n     * @param {Number} [pixelWidth] the width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] the height in pixel of the rectangle.\n     * @returns {OpenSeadragon.Rect} This image's bounds in viewport coordinates\n     */\n    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight) {\n        var rect = imageX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.imageToViewportRectangle] is not accurate ' +\n                       'with multi-image; use TiledImage.imageToViewportRectangle instead.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportRectangle\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportRectangle(\n                    imageX, imageY, pixelWidth, pixelHeight, true);\n            }\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.x, rect.y);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an\n     * OpenSeadragon.Rect\n     * Note: not accurate with multi-image; use TiledImage.viewportToImageRectangle instead.\n     * @function\n     * @param {(OpenSeadragon.Rect | Number)} viewerX either a rectangle or\n     * the X coordinate of the top left corner of the rectangle in viewport\n     * coordinate system.\n     * @param {Number} [viewerY] the Y coordinate of the top left corner of the rectangle\n     * in viewport coordinate system.\n     * @param {Number} [pointWidth] the width of the rectangle in viewport coordinate system.\n     * @param {Number} [pointHeight] the height of the rectangle in viewport coordinate system.\n     */\n    viewportToImageRectangle: function(viewerX, viewerY, pointWidth, pointHeight) {\n        var rect = viewerX;\n        if (!(rect instanceof $.Rect)) {\n            //they passed individual components instead of a rectangle\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.viewportToImageRectangle] is not accurate ' +\n                        'with multi-image; use TiledImage.viewportToImageRectangle instead.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageCoordinates\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageRectangle(\n                    viewerX, viewerY, pointWidth, pointHeight, true);\n            }\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.x, rect.y);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height);\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToImageCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToImageCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * Note: not accurate with multi-image.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.imageToViewerElementCoordinates(pixel);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to viewport\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToViewportCoordinates: function( pixel ) {\n        return this.pointFromPixel( pixel, true );\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the\n     * viewer element.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToViewerElementCoordinates: function( point ) {\n        return this.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert a rectangle in pixel coordinates relative to the viewer element\n     * to viewport coordinates.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewerElementToViewportRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pointFromPixel(rectangle.getTopLeft(), true),\n            this.pointFromPixel(rectangle.getTopRight(), true),\n            this.pointFromPixel(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert a rectangle in viewport coordinates to pixel coordinates relative\n     * to the viewer element.\n     * @param {OpenSeadragon.Rect} rectangle the rectangle to convert\n     * @returns {OpenSeadragon.Rect} the converted rectangle\n     */\n    viewportToViewerElementRectangle: function(rectangle) {\n        return $.Rect.fromSummits(\n            this.pixelFromPoint(rectangle.getTopLeft(), true),\n            this.pixelFromPoint(rectangle.getTopRight(), true),\n            this.pixelFromPoint(rectangle.getBottomLeft(), true)\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to viewport coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToViewportCoordinates: function(pixel) {\n        $.console.assert(this.viewer,\n            \"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = pixel.minus(\n                $.getElementPosition(this.viewer.element));\n        return this.viewerElementToViewportCoordinates(viewerCoordinates);\n    },\n\n    /**\n     * Convert viewport coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} point\n     * @returns {OpenSeadragon.Point}\n     */\n    viewportToWindowCoordinates: function(point) {\n        $.console.assert(this.viewer,\n            \"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.\");\n        var viewerCoordinates = this.viewportToViewerElementCoordinates(point);\n        return viewerCoordinates.plus(\n                $.getElementPosition(this.viewer.element));\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * target zoom.\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function(viewportZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.viewportToImageZoom] is not ' +\n                        'accurate with multi-image.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.viewportToImageZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.viewportToImageZoom(viewportZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (containerWidth / imageWidth) * scale;\n        return viewportZoom * viewportToImageZoomRatio;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * target zoom.\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function(imageZoom) {\n        if (this.viewer) {\n            var count = this.viewer.world.getItemCount();\n            if (count > 1) {\n                if (!this.silenceMultiImageWarnings) {\n                    $.console.error('[Viewport.imageToViewportZoom] is not accurate ' +\n                        'with multi-image.');\n                }\n            } else if (count === 1) {\n                // It is better to use TiledImage.imageToViewportZoom\n                // because this._contentBoundsNoRotate can not be relied on\n                // with clipping.\n                var item = this.viewer.world.getItemAt(0);\n                return item.imageToViewportZoom(imageZoom);\n            }\n        }\n\n        var imageWidth = this._contentSizeNoRotate.x;\n        var containerWidth = this._containerInnerSize.x;\n        var scale = this._contentBoundsNoRotate.width;\n        var viewportToImageZoomRatio = (imageWidth / containerWidth) / scale;\n        return imageZoom * viewportToImageZoomRatio;\n    },\n\n    /**\n     * Toggles flip state and demands a new drawing on navigator and viewer objects.\n     * @function\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    toggleFlip: function() {\n      this.setFlip(!this.getFlip());\n      return this;\n    },\n\n    /**\n     * Get flip state stored on viewport.\n     * @function\n     * @return {Boolean} Flip state.\n     */\n    getFlip: function() {\n      return this.flipped;\n    },\n\n    /**\n     * Sets flip state according to the state input argument.\n     * @function\n     * @param {Boolean} state - Flip state to set.\n     * @return {OpenSeadragon.Viewport} Chainable.\n     */\n    setFlip: function( state ) {\n      if ( this.flipped === state ) {\n        return this;\n      }\n\n      this.flipped = state;\n      if(this.viewer.navigator){\n        this.viewer.navigator.setFlip(this.getFlip());\n      }\n      this.viewer.forceRedraw();\n\n      /**\n       * Raised when flip state has been changed.\n       *\n       * @event flip\n       * @memberof OpenSeadragon.Viewer\n       * @type {object}\n       * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n       * @property {Number} flipped - The flip state after this change.\n       * @property {?Object} userData - Arbitrary subscriber-defined object.\n       */\n      this.viewer.raiseEvent('flip', {flipped: state});\n      return this;\n    }\n\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TiledImage\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * You shouldn't have to create a TiledImage instance directly; get it asynchronously by\n * using {@link OpenSeadragon.Viewer#open} or {@link OpenSeadragon.Viewer#addTiledImage} instead.\n * @class TiledImage\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Handles rendering of tiles for an {@link OpenSeadragon.Viewer}.\n * A new instance is created for each TileSource opened.\n * @param {Object} options - Configuration for this TiledImage.\n * @param {OpenSeadragon.TileSource} options.source - The TileSource that defines this TiledImage.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this TiledImage.\n * @param {OpenSeadragon.TileCache} options.tileCache - The TileCache for this TiledImage to use.\n * @param {OpenSeadragon.Drawer} options.drawer - The Drawer for this TiledImage to draw onto.\n * @param {OpenSeadragon.ImageLoader} options.imageLoader - The ImageLoader for this TiledImage to use.\n * @param {Number} [options.x=0] - Left position, in viewport coordinates.\n * @param {Number} [options.y=0] - Top position, in viewport coordinates.\n * @param {Number} [options.width=1] - Width, in viewport coordinates.\n * @param {Number} [options.height] - Height, in viewport coordinates.\n * @param {OpenSeadragon.Rect} [options.fitBounds] The bounds in viewport coordinates\n * to fit the image into. If specified, x, y, width and height get ignored.\n * @param {OpenSeadragon.Placement} [options.fitBoundsPlacement=OpenSeadragon.Placement.CENTER]\n * How to anchor the image in the bounds if options.fitBounds is set.\n * @param {OpenSeadragon.Rect} [options.clip] - An area, in image pixels, to clip to\n * (portions of the image outside of this area will not be visible). Only works on\n * browsers that support the HTML5 canvas.\n * @param {Number} [options.springStiffness] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.animationTime] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minZoomImageRatio] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapHorizontal] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.wrapVertical] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.immediateRender] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.blendTime] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.alwaysBlend] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.minPixelRatio] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.smoothTileEdgesMinZoom] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.iOSDevice] - See {@link OpenSeadragon.Options}.\n * @param {Number} [options.opacity=1] - Set to draw at proportional opacity. If zero, images will not draw.\n * @param {Boolean} [options.preload=false] - Set true to load even when the image is hidden by zero opacity.\n * @param {String} [options.compositeOperation] - How the image is composited onto other images; see compositeOperation in {@link OpenSeadragon.Options} for possible\n values.\n * @param {Boolean} [options.debugMode] - See {@link OpenSeadragon.Options}.\n * @param {String|CanvasGradient|CanvasPattern|Function} [options.placeholderFillStyle] - See {@link OpenSeadragon.Options}.\n * @param {String|Boolean} [options.crossOriginPolicy] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.ajaxWithCredentials] - See {@link OpenSeadragon.Options}.\n * @param {Boolean} [options.loadTilesWithAjax]\n *      Whether to load tile data using AJAX requests.\n *      Defaults to the setting in {@link OpenSeadragon.Options}.\n * @param {Object} [options.ajaxHeaders={}]\n *      A set of headers to include when making tile AJAX requests.\n */\n$.TiledImage = function( options ) {\n    var _this = this;\n    /**\n     * The {@link OpenSeadragon.TileSource} that defines this TiledImage.\n     * @member {OpenSeadragon.TileSource} source\n     * @memberof OpenSeadragon.TiledImage#\n     */\n    $.console.assert( options.tileCache, \"[TiledImage] options.tileCache is required\" );\n    $.console.assert( options.drawer, \"[TiledImage] options.drawer is required\" );\n    $.console.assert( options.viewer, \"[TiledImage] options.viewer is required\" );\n    $.console.assert( options.imageLoader, \"[TiledImage] options.imageLoader is required\" );\n    $.console.assert( options.source, \"[TiledImage] options.source is required\" );\n    $.console.assert(!options.clip || options.clip instanceof $.Rect,\n        \"[TiledImage] options.clip must be an OpenSeadragon.Rect if present\");\n\n    $.EventSource.call( this );\n\n    this._tileCache = options.tileCache;\n    delete options.tileCache;\n\n    this._drawer = options.drawer;\n    delete options.drawer;\n\n    this._imageLoader = options.imageLoader;\n    delete options.imageLoader;\n\n    if (options.clip instanceof $.Rect) {\n        this._clip = options.clip.clone();\n    }\n\n    delete options.clip;\n\n    var x = options.x || 0;\n    delete options.x;\n    var y = options.y || 0;\n    delete options.y;\n\n    // Ratio of zoomable image height to width.\n    this.normHeight = options.source.dimensions.y / options.source.dimensions.x;\n    this.contentAspectX = options.source.dimensions.x / options.source.dimensions.y;\n\n    var scale = 1;\n    if ( options.width ) {\n        scale = options.width;\n        delete options.width;\n\n        if ( options.height ) {\n            $.console.error( \"specifying both width and height to a tiledImage is not supported\" );\n            delete options.height;\n        }\n    } else if ( options.height ) {\n        scale = options.height / this.normHeight;\n        delete options.height;\n    }\n\n    var fitBounds = options.fitBounds;\n    delete options.fitBounds;\n    var fitBoundsPlacement = options.fitBoundsPlacement || OpenSeadragon.Placement.CENTER;\n    delete options.fitBoundsPlacement;\n\n    var degrees = options.degrees || 0;\n    delete options.degrees;\n\n    $.extend( true, this, {\n\n        //internal state properties\n        viewer:         null,\n        tilesMatrix:    {},    // A '3d' dictionary [level][x][y] --> Tile.\n        coverage:       {},    // A '3d' dictionary [level][x][y] --> Boolean; shows what areas have been drawn.\n        loadingCoverage: {},   // A '3d' dictionary [level][x][y] --> Boolean; shows what areas are loaded or are being loaded/blended.\n        lastDrawn:      [],    // An unordered list of Tiles drawn last frame.\n        lastResetTime:  0,     // Last time for which the tiledImage was reset.\n        _midDraw:       false, // Is the tiledImage currently updating the viewport?\n        _needsDraw:     true,  // Does the tiledImage need to update the viewport again?\n        _hasOpaqueTile: false,  // Do we have even one fully opaque tile?\n        _tilesLoading:  0,     // The number of pending tile requests.\n        //configurable settings\n        springStiffness:                   $.DEFAULT_SETTINGS.springStiffness,\n        animationTime:                     $.DEFAULT_SETTINGS.animationTime,\n        minZoomImageRatio:                 $.DEFAULT_SETTINGS.minZoomImageRatio,\n        wrapHorizontal:                    $.DEFAULT_SETTINGS.wrapHorizontal,\n        wrapVertical:                      $.DEFAULT_SETTINGS.wrapVertical,\n        immediateRender:                   $.DEFAULT_SETTINGS.immediateRender,\n        blendTime:                         $.DEFAULT_SETTINGS.blendTime,\n        alwaysBlend:                       $.DEFAULT_SETTINGS.alwaysBlend,\n        minPixelRatio:                     $.DEFAULT_SETTINGS.minPixelRatio,\n        smoothTileEdgesMinZoom:            $.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,\n        iOSDevice:                         $.DEFAULT_SETTINGS.iOSDevice,\n        debugMode:                         $.DEFAULT_SETTINGS.debugMode,\n        crossOriginPolicy:                 $.DEFAULT_SETTINGS.crossOriginPolicy,\n        ajaxWithCredentials:               $.DEFAULT_SETTINGS.ajaxWithCredentials,\n        placeholderFillStyle:              $.DEFAULT_SETTINGS.placeholderFillStyle,\n        opacity:                           $.DEFAULT_SETTINGS.opacity,\n        preload:                           $.DEFAULT_SETTINGS.preload,\n        compositeOperation:                $.DEFAULT_SETTINGS.compositeOperation,\n        subPixelRoundingForTransparency:   $.DEFAULT_SETTINGS.subPixelRoundingForTransparency\n    }, options );\n\n    this._preload = this.preload;\n    delete this.preload;\n\n    this._fullyLoaded = false;\n\n    this._xSpring = new $.Spring({\n        initial: x,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._ySpring = new $.Spring({\n        initial: y,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._scaleSpring = new $.Spring({\n        initial: scale,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._degreesSpring = new $.Spring({\n        initial: degrees,\n        springStiffness: this.springStiffness,\n        animationTime: this.animationTime\n    });\n\n    this._updateForScale();\n\n    if (fitBounds) {\n        this.fitBounds(fitBounds, fitBoundsPlacement, true);\n    }\n\n    // We need a callback to give image manipulation a chance to happen\n    this._drawingHandler = function(args) {\n        /**\n         * This event is fired just before the tile is drawn giving the application a chance to alter the image.\n         *\n         * NOTE: This event is only fired when the drawer is using a &lt;canvas&gt;.\n         *\n         * @event tile-drawing\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n         * @property {OpenSeadragon.Tile} tile - The Tile being drawn.\n         * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n         * @property {OpenSeadragon.Tile} context - The HTML canvas context being drawn into.\n         * @property {OpenSeadragon.Tile} rendered - The HTML canvas context containing the tile imagery.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        _this.viewer.raiseEvent('tile-drawing', $.extend({\n            tiledImage: _this\n        }, args));\n    };\n};\n\n$.extend($.TiledImage.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.TiledImage.prototype */{\n    /**\n     * @returns {Boolean} Whether the TiledImage needs to be drawn.\n     */\n    needsDraw: function() {\n        return this._needsDraw;\n    },\n\n    /**\n     * @returns {Boolean} Whether all tiles necessary for this TiledImage to draw at the current view have been loaded.\n     */\n    getFullyLoaded: function() {\n        return this._fullyLoaded;\n    },\n\n    // private\n    _setFullyLoaded: function(flag) {\n        if (flag === this._fullyLoaded) {\n            return;\n        }\n\n        this._fullyLoaded = flag;\n\n        /**\n         * Fired when the TiledImage's \"fully loaded\" flag (whether all tiles necessary for this TiledImage\n         * to draw at the current view have been loaded) changes.\n         *\n         * @event fully-loaded-change\n         * @memberof OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {Boolean} fullyLoaded - The new \"fully loaded\" value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('fully-loaded-change', {\n            fullyLoaded: this._fullyLoaded\n        });\n    },\n\n    /**\n     * Clears all tiles and triggers an update on the next call to\n     * {@link OpenSeadragon.TiledImage#update}.\n     */\n    reset: function() {\n        this._tileCache.clearTilesFor(this);\n        this.lastResetTime = $.now();\n        this._needsDraw = true;\n    },\n\n    /**\n     * Updates the TiledImage's bounds, animating if needed.\n     * @returns {Boolean} Whether the TiledImage animated.\n     */\n    update: function() {\n        var xUpdated = this._xSpring.update();\n        var yUpdated = this._ySpring.update();\n        var scaleUpdated = this._scaleSpring.update();\n        var degreesUpdated = this._degreesSpring.update();\n\n        if (xUpdated || yUpdated || scaleUpdated || degreesUpdated) {\n            this._updateForScale();\n            this._needsDraw = true;\n            return true;\n        }\n\n        return false;\n    },\n\n    /**\n     * Draws the TiledImage to its Drawer.\n     */\n    draw: function() {\n        if (this.opacity !== 0 || this._preload) {\n            this._midDraw = true;\n            this._updateViewport();\n            this._midDraw = false;\n        }\n        // Images with opacity 0 should not need to be drawn in future. this._needsDraw = false is set in this._updateViewport() for other images.\n        else {\n            this._needsDraw = false;\n        }\n    },\n\n    /**\n     * Destroy the TiledImage (unload current loaded tiles).\n     */\n    destroy: function() {\n        this.reset();\n\n        if (this.source.destroy) {\n            this.source.destroy();\n        }\n    },\n\n    /**\n     * Get this TiledImage's bounds in viewport coordinates.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * false for target location.\n     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n     */\n    getBounds: function(current) {\n        return this.getBoundsNoRotate(current)\n            .rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * Get this TiledImage's bounds in viewport coordinates without taking\n     * rotation into account.\n     * @param {Boolean} [current=false] - Pass true for the current location;\n     * false for target location.\n     * @returns {OpenSeadragon.Rect} This TiledImage's bounds in viewport coordinates.\n     */\n    getBoundsNoRotate: function(current) {\n        return current ?\n            new $.Rect(\n                this._xSpring.current.value,\n                this._ySpring.current.value,\n                this._worldWidthCurrent,\n                this._worldHeightCurrent) :\n            new $.Rect(\n                this._xSpring.target.value,\n                this._ySpring.target.value,\n                this._worldWidthTarget,\n                this._worldHeightTarget);\n    },\n\n    // deprecated\n    getWorldBounds: function() {\n        $.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');\n        return this.getBounds();\n    },\n\n    /**\n     * Get the bounds of the displayed part of the tiled image.\n     * @param {Boolean} [current=false] Pass true for the current location,\n     * false for the target location.\n     * @returns {$.Rect} The clipped bounds in viewport coordinates.\n     */\n    getClippedBounds: function(current) {\n        var bounds = this.getBoundsNoRotate(current);\n        if (this._clip) {\n            var worldWidth = current ?\n                this._worldWidthCurrent : this._worldWidthTarget;\n            var ratio = worldWidth / this.source.dimensions.x;\n            var clip = this._clip.times(ratio);\n            bounds = new $.Rect(\n                bounds.x + clip.x,\n                bounds.y + clip.y,\n                clip.width,\n                clip.height);\n        }\n        return bounds.rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * @function\n     * @param {Number} level\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {OpenSeadragon.Rect} Where this tile fits (in normalized coordinates).\n     */\n    getTileBounds: function( level, x, y ) {\n        var numTiles = this.source.getNumTiles(level);\n        var xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n        var yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n        var bounds = this.source.getTileBounds(level, xMod, yMod);\n        if (this.getFlip()) {\n            bounds.x = 1 - bounds.x - bounds.width;\n        }\n        bounds.x += (x - xMod) / numTiles.x;\n        bounds.y += (this._worldHeightCurrent / this._worldWidthCurrent) * ((y - yMod) / numTiles.y);\n        return bounds;\n    },\n\n    /**\n     * @returns {OpenSeadragon.Point} This TiledImage's content size, in original pixels.\n     */\n    getContentSize: function() {\n        return new $.Point(this.source.dimensions.x, this.source.dimensions.y);\n    },\n\n    /**\n     * @returns {OpenSeadragon.Point} The TiledImage's content size, in window coordinates.\n     */\n    getSizeInWindowCoordinates: function() {\n        var topLeft = this.imageToWindowCoordinates(new $.Point(0, 0));\n        var bottomRight = this.imageToWindowCoordinates(this.getContentSize());\n        return new $.Point(bottomRight.x - topLeft.x, bottomRight.y - topLeft.y);\n    },\n\n    // private\n    _viewportToImageDelta: function( viewerX, viewerY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point(viewerX * (this.source.dimensions.x / scale),\n            viewerY * ((this.source.dimensions.y * this.contentAspectX) / scale));\n    },\n\n    /**\n     * Translates from OpenSeadragon viewer coordinate system to image coordinate system.\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} viewerX - The X coordinate or point in viewport coordinate system.\n     * @param {Number} [viewerY] - The Y coordinate in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the image.\n     */\n    viewportToImageCoordinates: function(viewerX, viewerY, current) {\n        var point;\n        if (viewerX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = viewerY;\n            point = viewerX;\n        } else {\n            point = new $.Point(viewerX, viewerY);\n        }\n\n        point = point.rotate(-this.getRotation(current), this._getRotationPoint(current));\n        return current ?\n            this._viewportToImageDelta(\n                point.x - this._xSpring.current.value,\n                point.y - this._ySpring.current.value) :\n            this._viewportToImageDelta(\n                point.x - this._xSpring.target.value,\n                point.y - this._ySpring.target.value);\n    },\n\n    // private\n    _imageToViewportDelta: function( imageX, imageY, current ) {\n        var scale = (current ? this._scaleSpring.current.value : this._scaleSpring.target.value);\n        return new $.Point((imageX / this.source.dimensions.x) * scale,\n            (imageY / this.source.dimensions.y / this.contentAspectX) * scale);\n    },\n\n    /**\n     * Translates from image coordinate system to OpenSeadragon viewer coordinate system\n     * This method can be called either by passing X,Y coordinates or an {@link OpenSeadragon.Point}.\n     * @param {Number|OpenSeadragon.Point} imageX - The X coordinate or point in image coordinate system.\n     * @param {Number} [imageY] - The Y coordinate in image coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Point} A point representing the coordinates in the viewport.\n     */\n    imageToViewportCoordinates: function(imageX, imageY, current) {\n        if (imageX instanceof $.Point) {\n            //they passed a point instead of individual components\n            current = imageY;\n            imageY = imageX.y;\n            imageX = imageX.x;\n        }\n\n        var point = this._imageToViewportDelta(imageX, imageY);\n        if (current) {\n            point.x += this._xSpring.current.value;\n            point.y += this._ySpring.current.value;\n        } else {\n            point.x += this._xSpring.target.value;\n            point.y += this._ySpring.target.value;\n        }\n\n        return point.rotate(this.getRotation(current), this._getRotationPoint(current));\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of the image in\n     * pixel coordinates to OpenSeadragon viewport rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} imageX - The left coordinate or rectangle in image coordinate system.\n     * @param {Number} [imageY] - The top coordinate in image coordinate system.\n     * @param {Number} [pixelWidth] - The width in pixel of the rectangle.\n     * @param {Number} [pixelHeight] - The height in pixel of the rectangle.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the viewport.\n     */\n    imageToViewportRectangle: function(imageX, imageY, pixelWidth, pixelHeight, current) {\n        var rect = imageX;\n        if (rect instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = imageY;\n        } else {\n            rect = new $.Rect(imageX, imageY, pixelWidth, pixelHeight);\n        }\n\n        var coordA = this.imageToViewportCoordinates(rect.getTopLeft(), current);\n        var coordB = this._imageToViewportDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees + this.getRotation(current)\n        );\n    },\n\n    /**\n     * Translates from a rectangle which describes a portion of\n     * the viewport in point coordinates to image rectangle coordinates.\n     * This method can be called either by passing X,Y,width,height or an {@link OpenSeadragon.Rect}.\n     * @param {Number|OpenSeadragon.Rect} viewerX - The left coordinate or rectangle in viewport coordinate system.\n     * @param {Number} [viewerY] - The top coordinate in viewport coordinate system.\n     * @param {Number} [pointWidth] - The width in viewport coordinate system.\n     * @param {Number} [pointHeight] - The height in viewport coordinate system.\n     * @param {Boolean} [current=false] - Pass true to use the current location; false for target location.\n     * @return {OpenSeadragon.Rect} A rect representing the coordinates in the image.\n     */\n    viewportToImageRectangle: function( viewerX, viewerY, pointWidth, pointHeight, current ) {\n        var rect = viewerX;\n        if (viewerX instanceof $.Rect) {\n            //they passed a rect instead of individual components\n            current = viewerY;\n        } else {\n            rect = new $.Rect(viewerX, viewerY, pointWidth, pointHeight);\n        }\n\n        var coordA = this.viewportToImageCoordinates(rect.getTopLeft(), current);\n        var coordB = this._viewportToImageDelta(rect.width, rect.height, current);\n\n        return new $.Rect(\n            coordA.x,\n            coordA.y,\n            coordB.x,\n            coordB.y,\n            rect.degrees - this.getRotation(current)\n        );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the viewer element to image\n     * coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    viewerElementToImageCoordinates: function( pixel ) {\n        var point = this.viewport.pointFromPixel( pixel, true );\n        return this.viewportToImageCoordinates( point );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the image to\n     * viewer element coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToViewerElementCoordinates: function( pixel ) {\n        var point = this.imageToViewportCoordinates( pixel );\n        return this.viewport.pixelFromPoint( point, true );\n    },\n\n    /**\n     * Convert pixel coordinates relative to the window to image coordinates.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    windowToImageCoordinates: function( pixel ) {\n        var viewerCoordinates = pixel.minus(\n            OpenSeadragon.getElementPosition( this.viewer.element ));\n        return this.viewerElementToImageCoordinates( viewerCoordinates );\n    },\n\n    /**\n     * Convert image coordinates to pixel coordinates relative to the window.\n     * @param {OpenSeadragon.Point} pixel\n     * @returns {OpenSeadragon.Point}\n     */\n    imageToWindowCoordinates: function( pixel ) {\n        var viewerCoordinates = this.imageToViewerElementCoordinates( pixel );\n        return viewerCoordinates.plus(\n            OpenSeadragon.getElementPosition( this.viewer.element ));\n    },\n\n    // private\n    // Convert rectangle in viewport coordinates to this tiled image point\n    // coordinates (x in [0, 1] and y in [0, aspectRatio])\n    _viewportToTiledImageRectangle: function(rect) {\n        var scale = this._scaleSpring.current.value;\n        rect = rect.rotate(-this.getRotation(true), this._getRotationPoint(true));\n        return new $.Rect(\n            (rect.x - this._xSpring.current.value) / scale,\n            (rect.y - this._ySpring.current.value) / scale,\n            rect.width / scale,\n            rect.height / scale,\n            rect.degrees);\n    },\n\n    /**\n     * Convert a viewport zoom to an image zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * @function\n     * @param {Number} viewportZoom The viewport zoom\n     * @returns {Number} imageZoom The image zoom\n     */\n    viewportToImageZoom: function( viewportZoom ) {\n        var ratio = this._scaleSpring.current.value *\n            this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return ratio * viewportZoom;\n    },\n\n    /**\n     * Convert an image zoom to a viewport zoom.\n     * Image zoom: ratio of the original image size to displayed image size.\n     * 1 means original image size, 0.5 half size...\n     * Viewport zoom: ratio of the displayed image's width to viewport's width.\n     * 1 means identical width, 2 means image's width is twice the viewport's width...\n     * Note: not accurate with multi-image.\n     * @function\n     * @param {Number} imageZoom The image zoom\n     * @returns {Number} viewportZoom The viewport zoom\n     */\n    imageToViewportZoom: function( imageZoom ) {\n        var ratio = this._scaleSpring.current.value *\n            this.viewport._containerInnerSize.x / this.source.dimensions.x;\n        return imageZoom / ratio;\n    },\n\n    /**\n     * Sets the TiledImage's position in the world.\n     * @param {OpenSeadragon.Point} position - The new position, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new position or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setPosition: function(position, immediately) {\n        var sameTarget = (this._xSpring.target.value === position.x &&\n            this._ySpring.target.value === position.y);\n\n        if (immediately) {\n            if (sameTarget && this._xSpring.current.value === position.x &&\n                this._ySpring.current.value === position.y) {\n                return;\n            }\n\n            this._xSpring.resetTo(position.x);\n            this._ySpring.resetTo(position.y);\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._xSpring.springTo(position.x);\n            this._ySpring.springTo(position.y);\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    /**\n     * Sets the TiledImage's width in the world, adjusting the height to match based on aspect ratio.\n     * @param {Number} width - The new width, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setWidth: function(width, immediately) {\n        this._setScale(width, immediately);\n    },\n\n    /**\n     * Sets the TiledImage's height in the world, adjusting the width to match based on aspect ratio.\n     * @param {Number} height - The new height, in viewport coordinates.\n     * @param {Boolean} [immediately=false] - Whether to animate to the new size or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setHeight: function(height, immediately) {\n        this._setScale(height / this.normHeight, immediately);\n    },\n\n    /**\n     * Sets an array of polygons to crop the TiledImage during draw tiles.\n     * The render function will use the default non-zero winding rule.\n     * @param {OpenSeadragon.Point[][]} polygons - represented in an array of point object in image coordinates.\n     * Example format: [\n     *  [{x: 197, y:172}, {x: 226, y:172}, {x: 226, y:198}, {x: 197, y:198}], // First polygon\n     *  [{x: 328, y:200}, {x: 330, y:199}, {x: 332, y:201}, {x: 329, y:202}]  // Second polygon\n     *  [{x: 321, y:201}, {x: 356, y:205}, {x: 341, y:250}] // Third polygon\n     * ]\n     */\n    setCroppingPolygons: function( polygons ) {\n\n        var isXYObject = function(obj) {\n            return obj instanceof $.Point || (typeof obj.x === 'number' && typeof obj.y === 'number');\n        };\n\n        var objectToSimpleXYObject = function(objs) {\n            return objs.map(function(obj) {\n                try {\n                    if (isXYObject(obj)) {\n                        return { x: obj.x, y: obj.y };\n                    } else {\n                        throw new Error();\n                    }\n                } catch(e) {\n                    throw new Error('A Provided cropping polygon point is not supported');\n                }\n            });\n        };\n\n        try {\n            if (!$.isArray(polygons)) {\n                throw new Error('Provided cropping polygon is not an array');\n            }\n            this._croppingPolygons = polygons.map(function(polygon){\n                return objectToSimpleXYObject(polygon);\n            });\n        } catch (e) {\n            $.console.error('[TiledImage.setCroppingPolygons] Cropping polygon format not supported');\n            $.console.error(e);\n            this._croppingPolygons = null;\n        }\n    },\n\n    /**\n     * Resets the cropping polygons, thus next render will remove all cropping\n     * polygon effects.\n     */\n    resetCroppingPolygons: function() {\n        this._croppingPolygons = null;\n    },\n\n    /**\n     * Positions and scales the TiledImage to fit in the specified bounds.\n     * Note: this method fires OpenSeadragon.TiledImage.event:bounds-change\n     * twice\n     * @param {OpenSeadragon.Rect} bounds The bounds to fit the image into.\n     * @param {OpenSeadragon.Placement} [anchor=OpenSeadragon.Placement.CENTER]\n     * How to anchor the image in the bounds.\n     * @param {Boolean} [immediately=false] Whether to animate to the new size\n     * or snap immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    fitBounds: function(bounds, anchor, immediately) {\n        anchor = anchor || $.Placement.CENTER;\n        var anchorProperties = $.Placement.properties[anchor];\n        var aspectRatio = this.contentAspectX;\n        var xOffset = 0;\n        var yOffset = 0;\n        var displayedWidthRatio = 1;\n        var displayedHeightRatio = 1;\n        if (this._clip) {\n            aspectRatio = this._clip.getAspectRatio();\n            displayedWidthRatio = this._clip.width / this.source.dimensions.x;\n            displayedHeightRatio = this._clip.height / this.source.dimensions.y;\n            if (bounds.getAspectRatio() > aspectRatio) {\n                xOffset = this._clip.x / this._clip.height * bounds.height;\n                yOffset = this._clip.y / this._clip.height * bounds.height;\n            } else {\n                xOffset = this._clip.x / this._clip.width * bounds.width;\n                yOffset = this._clip.y / this._clip.width * bounds.width;\n            }\n        }\n\n        if (bounds.getAspectRatio() > aspectRatio) {\n            // We will have margins on the X axis\n            var height = bounds.height / displayedHeightRatio;\n            var marginLeft = 0;\n            if (anchorProperties.isHorizontallyCentered) {\n                marginLeft = (bounds.width - bounds.height * aspectRatio) / 2;\n            } else if (anchorProperties.isRight) {\n                marginLeft = bounds.width - bounds.height * aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset + marginLeft, bounds.y - yOffset),\n                immediately);\n            this.setHeight(height, immediately);\n        } else {\n            // We will have margins on the Y axis\n            var width = bounds.width / displayedWidthRatio;\n            var marginTop = 0;\n            if (anchorProperties.isVerticallyCentered) {\n                marginTop = (bounds.height - bounds.width / aspectRatio) / 2;\n            } else if (anchorProperties.isBottom) {\n                marginTop = bounds.height - bounds.width / aspectRatio;\n            }\n            this.setPosition(\n                new $.Point(bounds.x - xOffset, bounds.y - yOffset + marginTop),\n                immediately);\n            this.setWidth(width, immediately);\n        }\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect|null} The TiledImage's current clip rectangle,\n     * in image pixels, or null if none.\n     */\n    getClip: function() {\n        if (this._clip) {\n            return this._clip.clone();\n        }\n\n        return null;\n    },\n\n    /**\n     * @param {OpenSeadragon.Rect|null} newClip - An area, in image pixels, to clip to\n     * (portions of the image outside of this area will not be visible). Only works on\n     * browsers that support the HTML5 canvas.\n     * @fires OpenSeadragon.TiledImage.event:clip-change\n     */\n    setClip: function(newClip) {\n        $.console.assert(!newClip || newClip instanceof $.Rect,\n            \"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null\");\n\n        if (newClip instanceof $.Rect) {\n            this._clip = newClip.clone();\n        } else {\n            this._clip = null;\n        }\n\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's clip is changed.\n         * @event clip-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('clip-change');\n    },\n\n    /**\n     * @returns {Boolean} Whether the TiledImage should be flipped before rendering.\n     */\n    getFlip: function() {\n        return !!this.flipped;\n    },\n\n    /**\n     * @param {Boolean} flip Whether the TiledImage should be flipped before rendering.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setFlip: function(flip) {\n        this.flipped = !!flip;\n        this._needsDraw = true;\n        this._raiseBoundsChange();\n    },\n\n    /**\n     * @returns {Number} The TiledImage's current opacity.\n     */\n    getOpacity: function() {\n        return this.opacity;\n    },\n\n    /**\n     * @param {Number} opacity Opacity the tiled image should be drawn at.\n     * @fires OpenSeadragon.TiledImage.event:opacity-change\n     */\n    setOpacity: function(opacity) {\n        if (opacity === this.opacity) {\n            return;\n        }\n\n        this.opacity = opacity;\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's opacity is changed.\n         * @event opacity-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {Number} opacity - The new opacity value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('opacity-change', {\n            opacity: this.opacity\n        });\n    },\n\n    /**\n     * @returns {Boolean} whether the tiledImage can load its tiles even when it has zero opacity.\n     */\n    getPreload: function() {\n        return this._preload;\n    },\n\n    /**\n     * Set true to load even when hidden. Set false to block loading when hidden.\n     */\n    setPreload: function(preload) {\n        this._preload = !!preload;\n        this._needsDraw = true;\n    },\n\n    /**\n     * Get the rotation of this tiled image in degrees.\n     * @param {Boolean} [current=false] True for current rotation, false for target.\n     * @returns {Number} the rotation of this tiled image in degrees.\n     */\n    getRotation: function(current) {\n        return current ?\n            this._degreesSpring.current.value :\n            this._degreesSpring.target.value;\n    },\n\n    /**\n     * Set the current rotation of this tiled image in degrees.\n     * @param {Number} degrees the rotation in degrees.\n     * @param {Boolean} [immediately=false] Whether to animate to the new angle\n     * or rotate immediately.\n     * @fires OpenSeadragon.TiledImage.event:bounds-change\n     */\n    setRotation: function(degrees, immediately) {\n        if (this._degreesSpring.target.value === degrees &&\n            this._degreesSpring.isAtTargetValue()) {\n            return;\n        }\n        if (immediately) {\n            this._degreesSpring.resetTo(degrees);\n        } else {\n            this._degreesSpring.springTo(degrees);\n        }\n        this._needsDraw = true;\n        this._raiseBoundsChange();\n    },\n\n    /**\n     * Get the point around which this tiled image is rotated\n     * @private\n     * @param {Boolean} current True for current rotation point, false for target.\n     * @returns {OpenSeadragon.Point}\n     */\n    _getRotationPoint: function(current) {\n        return this.getBoundsNoRotate(current).getCenter();\n    },\n\n    /**\n     * @returns {String} The TiledImage's current compositeOperation.\n     */\n    getCompositeOperation: function() {\n        return this.compositeOperation;\n    },\n\n    /**\n     * @param {String} compositeOperation the tiled image should be drawn with this globalCompositeOperation.\n     * @fires OpenSeadragon.TiledImage.event:composite-operation-change\n     */\n    setCompositeOperation: function(compositeOperation) {\n        if (compositeOperation === this.compositeOperation) {\n            return;\n        }\n\n        this.compositeOperation = compositeOperation;\n        this._needsDraw = true;\n        /**\n         * Raised when the TiledImage's opacity is changed.\n         * @event composite-operation-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {String} compositeOperation - The new compositeOperation value.\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('composite-operation-change', {\n            compositeOperation: this.compositeOperation\n        });\n    },\n\n    // private\n    _setScale: function(scale, immediately) {\n        var sameTarget = (this._scaleSpring.target.value === scale);\n        if (immediately) {\n            if (sameTarget && this._scaleSpring.current.value === scale) {\n                return;\n            }\n\n            this._scaleSpring.resetTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        } else {\n            if (sameTarget) {\n                return;\n            }\n\n            this._scaleSpring.springTo(scale);\n            this._updateForScale();\n            this._needsDraw = true;\n        }\n\n        if (!sameTarget) {\n            this._raiseBoundsChange();\n        }\n    },\n\n    // private\n    _updateForScale: function() {\n        this._worldWidthTarget = this._scaleSpring.target.value;\n        this._worldHeightTarget = this.normHeight * this._scaleSpring.target.value;\n        this._worldWidthCurrent = this._scaleSpring.current.value;\n        this._worldHeightCurrent = this.normHeight * this._scaleSpring.current.value;\n    },\n\n    // private\n    _raiseBoundsChange: function() {\n        /**\n         * Raised when the TiledImage's bounds are changed.\n         * Note that this event is triggered only when the animation target is changed;\n         * not for every frame of animation.\n         * @event bounds-change\n         * @memberOf OpenSeadragon.TiledImage\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} eventSource - A reference to the\n         * TiledImage which raised the event.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent('bounds-change');\n    },\n\n    // private\n    _isBottomItem: function() {\n        return this.viewer.world.getItemAt(0) === this;\n    },\n\n    // private\n    _getLevelsInterval: function() {\n        var lowestLevel = Math.max(\n            this.source.minLevel,\n            Math.floor(Math.log(this.minZoomImageRatio) / Math.log(2))\n        );\n        var currentZeroRatio = this.viewport.deltaPixelsFromPointsNoRotate(\n            this.source.getPixelRatio(0), true).x *\n            this._scaleSpring.current.value;\n        var highestLevel = Math.min(\n            Math.abs(this.source.maxLevel),\n            Math.abs(Math.floor(\n                Math.log(currentZeroRatio / this.minPixelRatio) / Math.log(2)\n            ))\n        );\n\n        // Calculations for the interval of levels to draw\n        // can return invalid intervals; fix that here if necessary\n        highestLevel = Math.max(highestLevel, this.source.minLevel || 0);\n        lowestLevel = Math.min(lowestLevel, highestLevel);\n        return {\n            lowestLevel: lowestLevel,\n            highestLevel: highestLevel\n        };\n    },\n\n    /**\n     * @private\n     * @inner\n     * Pretty much every other line in this needs to be documented so it's clear\n     * how each piece of this routine contributes to the drawing process.  That's\n     * why there are so many TODO's inside this function.\n     */\n    _updateViewport: function() {\n        this._needsDraw = false;\n        this._tilesLoading = 0;\n        this.loadingCoverage = {};\n\n        // Reset tile's internal drawn state\n        while (this.lastDrawn.length > 0) {\n            var tile = this.lastDrawn.pop();\n            tile.beingDrawn = false;\n        }\n\n        var viewport = this.viewport;\n        var drawArea = this._viewportToTiledImageRectangle(\n            viewport.getBoundsWithMargins(true));\n\n        if (!this.wrapHorizontal && !this.wrapVertical) {\n            var tiledImageBounds = this._viewportToTiledImageRectangle(\n                this.getClippedBounds(true));\n            drawArea = drawArea.intersection(tiledImageBounds);\n            if (drawArea === null) {\n                return;\n            }\n        }\n\n        var levelsInterval = this._getLevelsInterval();\n        var lowestLevel = levelsInterval.lowestLevel;\n        var highestLevel = levelsInterval.highestLevel;\n        var bestTile = null;\n        var haveDrawn = false;\n        var currentTime = $.now();\n\n        // Update any level that will be drawn\n        for (var level = highestLevel; level >= lowestLevel; level--) {\n            var drawLevel = false;\n\n            //Avoid calculations for draw if we have already drawn this\n            var currentRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(level),\n                true\n            ).x * this._scaleSpring.current.value;\n\n            if (level === lowestLevel ||\n                (!haveDrawn && currentRenderPixelRatio >= this.minPixelRatio)) {\n                drawLevel = true;\n                haveDrawn = true;\n            } else if (!haveDrawn) {\n                continue;\n            }\n\n            //Perform calculations for draw if we haven't drawn this\n            var targetRenderPixelRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(level),\n                false\n            ).x * this._scaleSpring.current.value;\n\n            var targetZeroRatio = viewport.deltaPixelsFromPointsNoRotate(\n                this.source.getPixelRatio(\n                    Math.max(\n                        this.source.getClosestLevel(),\n                        0\n                    )\n                ),\n                false\n            ).x * this._scaleSpring.current.value;\n\n            var optimalRatio = this.immediateRender ? 1 : targetZeroRatio;\n            var levelOpacity = Math.min(1, (currentRenderPixelRatio - 0.5) / 0.5);\n            var levelVisibility = optimalRatio / Math.abs(\n                optimalRatio - targetRenderPixelRatio\n            );\n\n            // Update the level and keep track of 'best' tile to load\n            bestTile = this._updateLevel(\n                haveDrawn,\n                drawLevel,\n                level,\n                levelOpacity,\n                levelVisibility,\n                drawArea,\n                currentTime,\n                bestTile\n            );\n\n            // Stop the loop if lower-res tiles would all be covered by\n            // already drawn tiles\n            if (this._providesCoverage(this.coverage, level)) {\n                break;\n            }\n        }\n\n        // Perform the actual drawing\n        this._drawTiles(this.lastDrawn);\n\n        // Load the new 'best' tile\n        if (bestTile && !bestTile.context2D) {\n            this._loadTile(bestTile, currentTime);\n            this._needsDraw = true;\n            this._setFullyLoaded(false);\n        } else {\n            this._setFullyLoaded(this._tilesLoading === 0);\n        }\n    },\n\n    // private\n    _getCornerTiles: function(level, topLeftBound, bottomRightBound) {\n        var leftX;\n        var rightX;\n        if (this.wrapHorizontal) {\n            leftX = $.positiveModulo(topLeftBound.x, 1);\n            rightX = $.positiveModulo(bottomRightBound.x, 1);\n        } else {\n            leftX = Math.max(0, topLeftBound.x);\n            rightX = Math.min(1, bottomRightBound.x);\n        }\n        var topY;\n        var bottomY;\n        var aspectRatio = 1 / this.source.aspectRatio;\n        if (this.wrapVertical) {\n            topY = $.positiveModulo(topLeftBound.y, aspectRatio);\n            bottomY = $.positiveModulo(bottomRightBound.y, aspectRatio);\n        } else {\n            topY = Math.max(0, topLeftBound.y);\n            bottomY = Math.min(aspectRatio, bottomRightBound.y);\n        }\n\n        var topLeftTile = this.source.getTileAtPoint(level, new $.Point(leftX, topY));\n        var bottomRightTile = this.source.getTileAtPoint(level, new $.Point(rightX, bottomY));\n        var numTiles  = this.source.getNumTiles(level);\n\n        if (this.wrapHorizontal) {\n            topLeftTile.x += numTiles.x * Math.floor(topLeftBound.x);\n            bottomRightTile.x += numTiles.x * Math.floor(bottomRightBound.x);\n        }\n        if (this.wrapVertical) {\n            topLeftTile.y += numTiles.y * Math.floor(topLeftBound.y / aspectRatio);\n            bottomRightTile.y += numTiles.y * Math.floor(bottomRightBound.y / aspectRatio);\n        }\n\n        return {\n            topLeft: topLeftTile,\n            bottomRight: bottomRightTile,\n        };\n    },\n\n    /**\n     * Updates all tiles at a given resolution level.\n     * @private\n     * @param {Boolean} haveDrawn\n     * @param {Boolean} drawLevel\n     * @param {Number} level\n     * @param {Number} levelOpacity\n     * @param {Number} levelVisibility\n     * @param {OpenSeadragon.Rect} drawArea\n     * @param {Number} currentTime\n     * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n     */\n    _updateLevel: function(haveDrawn, drawLevel, level, levelOpacity,\n                           levelVisibility, drawArea, currentTime, best) {\n\n        var topLeftBound = drawArea.getBoundingBox().getTopLeft();\n        var bottomRightBound = drawArea.getBoundingBox().getBottomRight();\n\n        if (this.viewer) {\n            /**\n             * <em>- Needs documentation -</em>\n             *\n             * @event update-level\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n             * @property {Object} havedrawn\n             * @property {Object} level\n             * @property {Object} opacity\n             * @property {Object} visibility\n             * @property {OpenSeadragon.Rect} drawArea\n             * @property {Object} topleft deprecated, use drawArea instead\n             * @property {Object} bottomright deprecated, use drawArea instead\n             * @property {Object} currenttime\n             * @property {Object} best\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent('update-level', {\n                tiledImage: this,\n                havedrawn: haveDrawn,\n                level: level,\n                opacity: levelOpacity,\n                visibility: levelVisibility,\n                drawArea: drawArea,\n                topleft: topLeftBound,\n                bottomright: bottomRightBound,\n                currenttime: currentTime,\n                best: best\n            });\n        }\n\n        this._resetCoverage(this.coverage, level);\n        this._resetCoverage(this.loadingCoverage, level);\n\n        //OK, a new drawing so do your calculations\n        var cornerTiles = this._getCornerTiles(level, topLeftBound, bottomRightBound);\n        var topLeftTile = cornerTiles.topLeft;\n        var bottomRightTile = cornerTiles.bottomRight;\n        var numberOfTiles  = this.source.getNumTiles(level);\n\n        var viewportCenter = this.viewport.pixelFromPoint(this.viewport.getCenter());\n\n        if (this.getFlip()) {\n            // The right-most tile can be narrower than the others. When flipped,\n            // this tile is now on the left. Because it is narrower than the normal\n            // left-most tile, the subsequent tiles may not be wide enough to completely\n            // fill the viewport. Fix this by rendering an extra column of tiles. If we\n            // are not wrapping, make sure we never render more than the number of tiles\n            // in the image.\n            bottomRightTile.x += 1;\n            if (!this.wrapHorizontal) {\n                bottomRightTile.x  = Math.min(bottomRightTile.x, numberOfTiles.x - 1);\n            }\n        }\n\n        for (var x = topLeftTile.x; x <= bottomRightTile.x; x++) {\n            for (var y = topLeftTile.y; y <= bottomRightTile.y; y++) {\n\n                var flippedX;\n                if (this.getFlip()) {\n                    var xMod = ( numberOfTiles.x + ( x % numberOfTiles.x ) ) % numberOfTiles.x;\n                    flippedX = x + numberOfTiles.x - xMod - xMod - 1;\n                } else {\n                    flippedX = x;\n                }\n\n                if (drawArea.intersection(this.getTileBounds(level, flippedX, y)) === null) {\n                    // This tile is outside of the viewport, no need to draw it\n                    continue;\n                }\n\n                best = this._updateTile(\n                    drawLevel,\n                    haveDrawn,\n                    flippedX, y,\n                    level,\n                    levelOpacity,\n                    levelVisibility,\n                    viewportCenter,\n                    numberOfTiles,\n                    currentTime,\n                    best\n                );\n            }\n        }\n\n        return best;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Update a single tile at a particular resolution level.\n     * @param {Boolean} haveDrawn\n     * @param {Boolean} drawLevel\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} level\n     * @param {Number} levelOpacity\n     * @param {Number} levelVisibility\n     * @param {OpenSeadragon.Point} viewportCenter\n     * @param {Number} numberOfTiles\n     * @param {Number} currentTime\n     * @param {OpenSeadragon.Tile} best - The current \"best\" tile to draw.\n     */\n    _updateTile: function( haveDrawn, drawLevel, x, y, level, levelOpacity,\n                           levelVisibility, viewportCenter, numberOfTiles, currentTime, best){\n\n        var tile = this._getTile(\n            x, y,\n            level,\n            currentTime,\n            numberOfTiles,\n            this._worldWidthCurrent,\n            this._worldHeightCurrent\n            ),\n            drawTile = drawLevel;\n\n        if( this.viewer ){\n            /**\n             * <em>- Needs documentation -</em>\n             *\n             * @event update-tile\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n             * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n             * @property {OpenSeadragon.Tile} tile\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.viewer.raiseEvent( 'update-tile', {\n                tiledImage: this,\n                tile: tile\n            });\n        }\n\n        this._setCoverage( this.coverage, level, x, y, false );\n\n        var loadingCoverage = tile.loaded || tile.loading || this._isCovered(this.loadingCoverage, level, x, y);\n        this._setCoverage(this.loadingCoverage, level, x, y, loadingCoverage);\n\n        if ( !tile.exists ) {\n            return best;\n        }\n\n        if ( haveDrawn && !drawTile ) {\n            if ( this._isCovered( this.coverage, level, x, y ) ) {\n                this._setCoverage( this.coverage, level, x, y, true );\n            } else {\n                drawTile = true;\n            }\n        }\n\n        if ( !drawTile ) {\n            return best;\n        }\n\n        this._positionTile(\n            tile,\n            this.source.tileOverlap,\n            this.viewport,\n            viewportCenter,\n            levelVisibility\n        );\n\n        if (!tile.loaded) {\n            if (tile.context2D) {\n                this._setTileLoaded(tile);\n            } else {\n                var imageRecord = this._tileCache.getImageRecord(tile.cacheKey);\n                if (imageRecord) {\n                    var image = imageRecord.getImage();\n                    this._setTileLoaded(tile, image);\n                }\n            }\n        }\n\n        if ( tile.loaded ) {\n            var needsDraw = this._blendTile(\n                tile,\n                x, y,\n                level,\n                levelOpacity,\n                currentTime\n            );\n\n            if ( needsDraw ) {\n                this._needsDraw = true;\n            }\n        } else if ( tile.loading ) {\n            // the tile is already in the download queue\n            this._tilesLoading++;\n        } else if (!loadingCoverage) {\n            best = this._compareTiles( best, tile );\n        }\n\n        return best;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Obtains a tile at the given location.\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} level\n     * @param {Number} time\n     * @param {Number} numTiles\n     * @param {Number} worldWidth\n     * @param {Number} worldHeight\n     * @returns {OpenSeadragon.Tile}\n     */\n    _getTile: function(\n        x, y,\n        level,\n        time,\n        numTiles,\n        worldWidth,\n        worldHeight\n    ) {\n        var xMod,\n            yMod,\n            bounds,\n            sourceBounds,\n            exists,\n            url,\n            post,\n            ajaxHeaders,\n            context2D,\n            tile,\n            tilesMatrix = this.tilesMatrix,\n            tileSource = this.source;\n\n        if ( !tilesMatrix[ level ] ) {\n            tilesMatrix[ level ] = {};\n        }\n        if ( !tilesMatrix[ level ][ x ] ) {\n            tilesMatrix[ level ][ x ] = {};\n        }\n\n        if ( !tilesMatrix[ level ][ x ][ y ] || !tilesMatrix[ level ][ x ][ y ].flipped !== !this.flipped ) {\n            xMod    = ( numTiles.x + ( x % numTiles.x ) ) % numTiles.x;\n            yMod    = ( numTiles.y + ( y % numTiles.y ) ) % numTiles.y;\n            bounds  = this.getTileBounds( level, x, y );\n            sourceBounds = tileSource.getTileBounds( level, xMod, yMod, true );\n            exists  = tileSource.tileExists( level, xMod, yMod );\n            url     = tileSource.getTileUrl( level, xMod, yMod );\n            post    = tileSource.getTilePostData( level, xMod, yMod );\n\n            // Headers are only applicable if loadTilesWithAjax is set\n            if (this.loadTilesWithAjax) {\n                ajaxHeaders = tileSource.getTileAjaxHeaders( level, xMod, yMod );\n                // Combine tile AJAX headers with tiled image AJAX headers (if applicable)\n                if ($.isPlainObject(this.ajaxHeaders)) {\n                    ajaxHeaders = $.extend({}, this.ajaxHeaders, ajaxHeaders);\n                }\n            } else {\n                ajaxHeaders = null;\n            }\n\n            context2D = tileSource.getContext2D ?\n                tileSource.getContext2D(level, xMod, yMod) : undefined;\n\n            tile = new $.Tile(\n                level,\n                x,\n                y,\n                bounds,\n                exists,\n                url,\n                context2D,\n                this.loadTilesWithAjax,\n                ajaxHeaders,\n                sourceBounds,\n                post,\n                tileSource.getTileHashKey(level, xMod, yMod, url, ajaxHeaders, post)\n            );\n\n            if (this.getFlip()) {\n                if (xMod === 0) {\n                    tile.isRightMost = true;\n                }\n            } else {\n                if (xMod === numTiles.x - 1) {\n                    tile.isRightMost = true;\n                }\n            }\n\n            if (yMod === numTiles.y - 1) {\n                tile.isBottomMost = true;\n            }\n\n            tile.flipped = this.flipped;\n\n            tilesMatrix[ level ][ x ][ y ] = tile;\n        }\n\n        tile = tilesMatrix[ level ][ x ][ y ];\n        tile.lastTouchTime = time;\n\n        return tile;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Dispatch a job to the ImageLoader to load the Image for a Tile.\n     * @param {OpenSeadragon.Tile} tile\n     * @param {Number} time\n     */\n    _loadTile: function(tile, time ) {\n        var _this = this;\n        tile.loading = true;\n        this._imageLoader.addJob({\n            src: tile.url,\n            postData: tile.postData,\n            loadWithAjax: tile.loadWithAjax,\n            ajaxHeaders: tile.ajaxHeaders,\n            crossOriginPolicy: this.crossOriginPolicy,\n            ajaxWithCredentials: this.ajaxWithCredentials,\n            callback: function( image, errorMsg, tileRequest ){\n                _this._onTileLoad( tile, time, image, errorMsg, tileRequest );\n            },\n            abort: function() {\n                tile.loading = false;\n            }\n        });\n    },\n\n    /**\n     * @private\n     * @inner\n     * Callback fired when a Tile's Image finished downloading.\n     * @param {OpenSeadragon.Tile} tile\n     * @param {Number} time\n     * @param {Image} image\n     * @param {String} errorMsg\n     * @param {XMLHttpRequest} tileRequest\n     */\n    _onTileLoad: function( tile, time, image, errorMsg, tileRequest ) {\n        if ( !image ) {\n            $.console.error( \"Tile %s failed to load: %s - error: %s\", tile, tile.url, errorMsg );\n            /**\n             * Triggered when a tile fails to load.\n             *\n             * @event tile-load-failed\n             * @memberof OpenSeadragon.Viewer\n             * @type {object}\n             * @property {OpenSeadragon.Tile} tile - The tile that failed to load.\n             * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image the tile belongs to.\n             * @property {number} time - The time in milliseconds when the tile load began.\n             * @property {string} message - The error message.\n             * @property {XMLHttpRequest} tileRequest - The XMLHttpRequest used to load the tile if available.\n             */\n            this.viewer.raiseEvent(\"tile-load-failed\", {\n                tile: tile,\n                tiledImage: this,\n                time: time,\n                message: errorMsg,\n                tileRequest: tileRequest\n            });\n            tile.loading = false;\n            tile.exists = false;\n            return;\n        }\n\n        if ( time < this.lastResetTime ) {\n            $.console.warn( \"Ignoring tile %s loaded before reset: %s\", tile, tile.url );\n            tile.loading = false;\n            return;\n        }\n\n        var _this = this,\n            finish = function() {\n                var ccc = _this.source;\n                var cutoff = ccc.getClosestLevel();\n                _this._setTileLoaded(tile, image, cutoff, tileRequest);\n        };\n\n        // Check if we're mid-update; this can happen on IE8 because image load events for\n        // cached images happen immediately there\n        if ( !this._midDraw ) {\n            finish();\n        } else {\n            // Wait until after the update, in case caching unloads any tiles\n            window.setTimeout( finish, 1);\n        }\n    },\n\n    /**\n     * @private\n     * @inner\n     * @param {OpenSeadragon.Tile} tile\n     * @param {Image|undefined} image\n     * @param {Number|undefined} cutoff\n     * @param {XMLHttpRequest|undefined} tileRequest\n     */\n    _setTileLoaded: function(tile, image, cutoff, tileRequest) {\n        var increment = 0,\n            _this = this;\n\n        function getCompletionCallback() {\n            increment++;\n            return completionCallback;\n        }\n\n        function completionCallback() {\n            increment--;\n            if (increment === 0) {\n                tile.loading = false;\n                tile.loaded = true;\n                if (!tile.context2D) {\n                    _this._tileCache.cacheTile({\n                        image: image,\n                        tile: tile,\n                        cutoff: cutoff,\n                        tiledImage: _this\n                    });\n                }\n                _this._needsDraw = true;\n            }\n        }\n\n        /**\n         * Triggered when a tile has just been loaded in memory. That means that the\n         * image has been downloaded and can be modified before being drawn to the canvas.\n         *\n         * @event tile-loaded\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {Image} image - The image of the tile.\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the loaded tile.\n         * @property {OpenSeadragon.Tile} tile - The tile which has been loaded.\n         * @property {XMLHttpRequest} tileRequest - The AJAX request that loaded this tile (if applicable).\n         * @property {function} getCompletionCallback - A function giving a callback to call\n         * when the asynchronous processing of the image is done. The image will be\n         * marked as entirely loaded when the callback has been called once for each\n         * call to getCompletionCallback.\n         */\n        this.viewer.raiseEvent(\"tile-loaded\", {\n            tile: tile,\n            tiledImage: this,\n            tileRequest: tileRequest,\n            image: image,\n            getCompletionCallback: getCompletionCallback\n        });\n        // In case the completion callback is never called, we at least force it once.\n        getCompletionCallback()();\n    },\n\n    /**\n     * @private\n     * @inner\n     * @param {OpenSeadragon.Tile} tile\n     * @param {Boolean} overlap\n     * @param {OpenSeadragon.Viewport} viewport\n     * @param {OpenSeadragon.Point} viewportCenter\n     * @param {Number} levelVisibility\n     */\n    _positionTile: function( tile, overlap, viewport, viewportCenter, levelVisibility ){\n        var boundsTL = tile.bounds.getTopLeft();\n\n        boundsTL.x *= this._scaleSpring.current.value;\n        boundsTL.y *= this._scaleSpring.current.value;\n        boundsTL.x += this._xSpring.current.value;\n        boundsTL.y += this._ySpring.current.value;\n\n        var boundsSize   = tile.bounds.getSize();\n\n        boundsSize.x *= this._scaleSpring.current.value;\n        boundsSize.y *= this._scaleSpring.current.value;\n\n        var positionC = viewport.pixelFromPointNoRotate(boundsTL, true),\n            positionT = viewport.pixelFromPointNoRotate(boundsTL, false),\n            sizeC = viewport.deltaPixelsFromPointsNoRotate(boundsSize, true),\n            sizeT = viewport.deltaPixelsFromPointsNoRotate(boundsSize, false),\n            tileCenter = positionT.plus( sizeT.divide( 2 ) ),\n            tileSquaredDistance = viewportCenter.squaredDistanceTo( tileCenter );\n\n        if ( !overlap ) {\n            sizeC = sizeC.plus( new $.Point( 1, 1 ) );\n        }\n\n        if (tile.isRightMost && this.wrapHorizontal) {\n            sizeC.x += 0.75; // Otherwise Firefox and Safari show seams\n        }\n\n        if (tile.isBottomMost && this.wrapVertical) {\n            sizeC.y += 0.75; // Otherwise Firefox and Safari show seams\n        }\n\n        tile.position   = positionC;\n        tile.size       = sizeC;\n        tile.squaredDistance   = tileSquaredDistance;\n        tile.visibility = levelVisibility;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Updates the opacity of a tile according to the time it has been on screen\n     * to perform a fade-in.\n     * Updates coverage once a tile is fully opaque.\n     * Returns whether the fade-in has completed.\n     *\n     * @param {OpenSeadragon.Tile} tile\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} level\n     * @param {Number} levelOpacity\n     * @param {Number} currentTime\n     * @returns {Boolean}\n     */\n    _blendTile: function( tile, x, y, level, levelOpacity, currentTime ){\n        var blendTimeMillis = 1000 * this.blendTime,\n            deltaTime,\n            opacity;\n\n        if ( !tile.blendStart ) {\n            tile.blendStart = currentTime;\n        }\n\n        deltaTime   = currentTime - tile.blendStart;\n        opacity     = blendTimeMillis ? Math.min( 1, deltaTime / ( blendTimeMillis ) ) : 1;\n\n        if ( this.alwaysBlend ) {\n            opacity *= levelOpacity;\n        }\n\n        tile.opacity = opacity;\n\n        this.lastDrawn.push( tile );\n\n        if ( opacity === 1 ) {\n            this._setCoverage( this.coverage, level, x, y, true );\n            this._hasOpaqueTile = true;\n        } else if ( deltaTime < blendTimeMillis ) {\n            return true;\n        }\n\n        return false;\n    },\n\n\n    /**\n     * @private\n     * @inner\n     * Determines whether the 'last best' tile for the area is better than the\n     * tile in question.\n     *\n     * @param {OpenSeadragon.Tile} previousBest\n     * @param {OpenSeadragon.Tile} tile\n     * @returns {OpenSeadragon.Tile} The new best tile.\n     */\n    _compareTiles: function( previousBest, tile ) {\n        if ( !previousBest ) {\n            return tile;\n        }\n\n        if ( tile.visibility > previousBest.visibility ) {\n            return tile;\n        } else if ( tile.visibility === previousBest.visibility ) {\n            if ( tile.squaredDistance < previousBest.squaredDistance ) {\n                return tile;\n            }\n        }\n        return previousBest;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Draws a TiledImage.\n     * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n     */\n    _drawTiles: function( lastDrawn ) {\n        if (this.opacity === 0 || (lastDrawn.length === 0 && !this.placeholderFillStyle)) {\n            return;\n        }\n\n        var tile = lastDrawn[0];\n        var useSketch;\n\n        if (tile) {\n            useSketch = this.opacity < 1 ||\n                (this.compositeOperation && this.compositeOperation !== 'source-over') ||\n                (!this._isBottomItem() && tile._hasTransparencyChannel());\n        }\n\n        var sketchScale;\n        var sketchTranslate;\n\n        var zoom = this.viewport.getZoom(true);\n        var imageZoom = this.viewportToImageZoom(zoom);\n\n        if (lastDrawn.length > 1 &&\n            imageZoom > this.smoothTileEdgesMinZoom &&\n            !this.iOSDevice &&\n            this.getRotation(true) % 360 === 0 && // TODO: support tile edge smoothing with tiled image rotation.\n            $.supportsCanvas && this.viewer.useCanvas) {\n            // When zoomed in a lot (>100%) the tile edges are visible.\n            // So we have to composite them at ~100% and scale them up together.\n            // Note: Disabled on iOS devices per default as it causes a native crash\n            useSketch = true;\n            sketchScale = tile.getScaleForEdgeSmoothing();\n            sketchTranslate = tile.getTranslationForEdgeSmoothing(sketchScale,\n                this._drawer.getCanvasSize(false),\n                this._drawer.getCanvasSize(true));\n        }\n\n        var bounds;\n        if (useSketch) {\n            if (!sketchScale) {\n                // Except when edge smoothing, we only clean the part of the\n                // sketch canvas we are going to use for performance reasons.\n                bounds = this.viewport.viewportToViewerElementRectangle(\n                    this.getClippedBounds(true))\n                    .getIntegerBoundingBox();\n\n                if(this._drawer.viewer.viewport.getFlip()) {\n                    if (this.viewport.degrees !== 0 || this.getRotation(true) % 360 !== 0) {\n                        bounds.x = this._drawer.viewer.container.clientWidth - (bounds.x + bounds.width);\n                    }\n                }\n\n                bounds = bounds.times($.pixelDensityRatio);\n            }\n            this._drawer._clear(true, bounds);\n        }\n\n        // When scaling, we must rotate only when blending the sketch canvas to\n        // avoid interpolation\n        if (!sketchScale) {\n            if (this.viewport.degrees !== 0) {\n                this._drawer._offsetForRotation({\n                    degrees: this.viewport.degrees,\n                    useSketch: useSketch\n                });\n            }\n            if (this.getRotation(true) % 360 !== 0) {\n                this._drawer._offsetForRotation({\n                    degrees: this.getRotation(true),\n                    point: this.viewport.pixelFromPointNoRotate(\n                        this._getRotationPoint(true), true),\n                    useSketch: useSketch\n                });\n            }\n\n            if (this.viewport.degrees === 0 && this.getRotation(true) % 360 === 0){\n                if(this._drawer.viewer.viewport.getFlip()) {\n                    this._drawer._flip();\n                }\n            }\n        }\n\n        var usedClip = false;\n        if ( this._clip ) {\n            this._drawer.saveContext(useSketch);\n\n            var box = this.imageToViewportRectangle(this._clip, true);\n            box = box.rotate(-this.getRotation(true), this._getRotationPoint(true));\n            var clipRect = this._drawer.viewportToDrawerRectangle(box);\n            if (sketchScale) {\n                clipRect = clipRect.times(sketchScale);\n            }\n            if (sketchTranslate) {\n                clipRect = clipRect.translate(sketchTranslate);\n            }\n            this._drawer.setClip(clipRect, useSketch);\n\n            usedClip = true;\n        }\n\n        if (this._croppingPolygons) {\n            this._drawer.saveContext(useSketch);\n            try {\n                var polygons = this._croppingPolygons.map(function (polygon) {\n                    return polygon.map(function (coord) {\n                        var point = this\n                            .imageToViewportCoordinates(coord.x, coord.y, true)\n                            .rotate(-this.getRotation(true), this._getRotationPoint(true));\n                        var clipPoint = this._drawer.viewportCoordToDrawerCoord(point);\n                        if (sketchScale) {\n                            clipPoint = clipPoint.times(sketchScale);\n                        }\n                        return clipPoint;\n                    });\n                });\n                this._drawer.clipWithPolygons(polygons, useSketch);\n            } catch (e) {\n                $.console.error(e);\n            }\n            usedClip = true;\n        }\n\n        if ( this.placeholderFillStyle && this._hasOpaqueTile === false ) {\n            var placeholderRect = this._drawer.viewportToDrawerRectangle(this.getBounds(true));\n            if (sketchScale) {\n                placeholderRect = placeholderRect.times(sketchScale);\n            }\n            if (sketchTranslate) {\n                placeholderRect = placeholderRect.translate(sketchTranslate);\n            }\n\n            var fillStyle = null;\n            if ( typeof this.placeholderFillStyle === \"function\" ) {\n                fillStyle = this.placeholderFillStyle(this, this._drawer.context);\n            }\n            else {\n                fillStyle = this.placeholderFillStyle;\n            }\n\n            this._drawer.drawRectangle(placeholderRect, fillStyle, useSketch);\n        }\n\n        var subPixelRoundingRule = determineSubPixelRoundingRule(this.subPixelRoundingForTransparency);\n\n        var shouldRoundPositionAndSize = false;\n\n        if (subPixelRoundingRule === $.SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS) {\n            shouldRoundPositionAndSize = true;\n        } else if (subPixelRoundingRule === $.SUBPIXEL_ROUNDING_OCCURRENCES.ONLY_AT_REST) {\n            var isAnimating = this.viewer && this.viewer.isAnimating();\n            shouldRoundPositionAndSize = !isAnimating;\n        }\n\n        for (var i = lastDrawn.length - 1; i >= 0; i--) {\n            tile = lastDrawn[ i ];\n            this._drawer.drawTile( tile, this._drawingHandler, useSketch, sketchScale, sketchTranslate, shouldRoundPositionAndSize );\n            tile.beingDrawn = true;\n\n            if( this.viewer ){\n                /**\n                 * <em>- Needs documentation -</em>\n                 *\n                 * @event tile-drawn\n                 * @memberof OpenSeadragon.Viewer\n                 * @type {object}\n                 * @property {OpenSeadragon.Viewer} eventSource - A reference to the Viewer which raised the event.\n                 * @property {OpenSeadragon.TiledImage} tiledImage - Which TiledImage is being drawn.\n                 * @property {OpenSeadragon.Tile} tile\n                 * @property {?Object} userData - Arbitrary subscriber-defined object.\n                 */\n                this.viewer.raiseEvent( 'tile-drawn', {\n                    tiledImage: this,\n                    tile: tile\n                });\n            }\n        }\n\n        if ( usedClip ) {\n            this._drawer.restoreContext( useSketch );\n        }\n\n        if (!sketchScale) {\n            if (this.getRotation(true) % 360 !== 0) {\n                this._drawer._restoreRotationChanges(useSketch);\n            }\n            if (this.viewport.degrees !== 0) {\n                this._drawer._restoreRotationChanges(useSketch);\n            }\n        }\n\n        if (useSketch) {\n            if (sketchScale) {\n                if (this.viewport.degrees !== 0) {\n                    this._drawer._offsetForRotation({\n                        degrees: this.viewport.degrees,\n                        useSketch: false\n                    });\n                }\n                if (this.getRotation(true) % 360 !== 0) {\n                    this._drawer._offsetForRotation({\n                        degrees: this.getRotation(true),\n                        point: this.viewport.pixelFromPointNoRotate(\n                            this._getRotationPoint(true), true),\n                        useSketch: false\n                    });\n                }\n            }\n            this._drawer.blendSketch({\n                opacity: this.opacity,\n                scale: sketchScale,\n                translate: sketchTranslate,\n                compositeOperation: this.compositeOperation,\n                bounds: bounds\n            });\n            if (sketchScale) {\n                if (this.getRotation(true) % 360 !== 0) {\n                    this._drawer._restoreRotationChanges(false);\n                }\n                if (this.viewport.degrees !== 0) {\n                    this._drawer._restoreRotationChanges(false);\n                }\n            }\n        }\n\n        if (!sketchScale) {\n            if (this.viewport.degrees === 0 && this.getRotation(true) % 360 === 0){\n                if(this._drawer.viewer.viewport.getFlip()) {\n                    this._drawer._flip();\n                }\n            }\n        }\n\n        this._drawDebugInfo( lastDrawn );\n    },\n\n    /**\n     * @private\n     * @inner\n     * Draws special debug information for a TiledImage if in debug mode.\n     * @param {OpenSeadragon.Tile[]} lastDrawn - An unordered list of Tiles drawn last frame.\n     */\n    _drawDebugInfo: function( lastDrawn ) {\n        if( this.debugMode ) {\n            for ( var i = lastDrawn.length - 1; i >= 0; i-- ) {\n                var tile = lastDrawn[ i ];\n                try {\n                    this._drawer.drawDebugInfo(tile, lastDrawn.length, i, this);\n                } catch(e) {\n                    $.console.error(e);\n                }\n            }\n        }\n    },\n\n    /**\n     * @private\n     * @inner\n     * Returns true if the given tile provides coverage to lower-level tiles of\n     * lower resolution representing the same content. If neither x nor y is\n     * given, returns true if the entire visible level provides coverage.\n     *\n     * Note that out-of-bounds tiles provide coverage in this sense, since\n     * there's no content that they would need to cover. Tiles at non-existent\n     * levels that are within the image bounds, however, do not.\n     *\n     * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n     * @param {Number} level - The resolution level of the tile.\n     * @param {Number} x - The X position of the tile.\n     * @param {Number} y - The Y position of the tile.\n     * @returns {Boolean}\n     */\n    _providesCoverage: function( coverage, level, x, y ) {\n        var rows,\n            cols,\n            i, j;\n\n        if ( !coverage[ level ] ) {\n            return false;\n        }\n\n        if ( x === undefined || y === undefined ) {\n            rows = coverage[ level ];\n            for ( i in rows ) {\n                if ( Object.prototype.hasOwnProperty.call( rows, i ) ) {\n                    cols = rows[ i ];\n                    for ( j in cols ) {\n                        if ( Object.prototype.hasOwnProperty.call( cols, j ) && !cols[ j ] ) {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        return (\n            coverage[ level ][ x] === undefined ||\n            coverage[ level ][ x ][ y ] === undefined ||\n            coverage[ level ][ x ][ y ] === true\n        );\n    },\n\n    /**\n     * @private\n     * @inner\n     * Returns true if the given tile is completely covered by higher-level\n     * tiles of higher resolution representing the same content. If neither x\n     * nor y is given, returns true if the entire visible level is covered.\n     *\n     * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n     * @param {Number} level - The resolution level of the tile.\n     * @param {Number} x - The X position of the tile.\n     * @param {Number} y - The Y position of the tile.\n     * @returns {Boolean}\n     */\n    _isCovered: function( coverage, level, x, y ) {\n        if ( x === undefined || y === undefined ) {\n            return this._providesCoverage( coverage, level + 1 );\n        } else {\n            return (\n                this._providesCoverage( coverage, level + 1, 2 * x, 2 * y ) &&\n                this._providesCoverage( coverage, level + 1, 2 * x, 2 * y + 1 ) &&\n                this._providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y ) &&\n                this._providesCoverage( coverage, level + 1, 2 * x + 1, 2 * y + 1 )\n            );\n        }\n    },\n\n    /**\n     * @private\n     * @inner\n     * Sets whether the given tile provides coverage or not.\n     *\n     * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n     * @param {Number} level - The resolution level of the tile.\n     * @param {Number} x - The X position of the tile.\n     * @param {Number} y - The Y position of the tile.\n     * @param {Boolean} covers - Whether the tile provides coverage.\n     */\n    _setCoverage: function( coverage, level, x, y, covers ) {\n        if ( !coverage[ level ] ) {\n            $.console.warn(\n                \"Setting coverage for a tile before its level's coverage has been reset: %s\",\n                level\n            );\n            return;\n        }\n\n        if ( !coverage[ level ][ x ] ) {\n            coverage[ level ][ x ] = {};\n        }\n\n        coverage[ level ][ x ][ y ] = covers;\n    },\n\n    /**\n     * @private\n     * @inner\n     * Resets coverage information for the given level. This should be called\n     * after every draw routine. Note that at the beginning of the next draw\n     * routine, coverage for every visible tile should be explicitly set.\n     *\n     * @param {Object} coverage - A '3d' dictionary [level][x][y] --> Boolean.\n     * @param {Number} level - The resolution level of tiles to completely reset.\n     */\n    _resetCoverage: function( coverage, level ) {\n        coverage[ level ] = {};\n    }\n});\n\n\n/**\n * @private\n * @inner\n * Defines the value for subpixel rounding to fallback to in case of missing or\n * invalid value.\n */\nvar DEFAULT_SUBPIXEL_ROUNDING_RULE = $.SUBPIXEL_ROUNDING_OCCURRENCES.NEVER;\n\n/**\n * @private\n * @inner\n * Checks whether the input value is an invalid subpixel rounding enum value.\n *\n * @param {SUBPIXEL_ROUNDING_OCCURRENCES} value - The subpixel rounding enum value to check.\n * @returns {Boolean} Returns true if the input value is none of the expected\n * {@link SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS}, {@link SUBPIXEL_ROUNDING_OCCURRENCES.ONLY_AT_REST} or {@link SUBPIXEL_ROUNDING_OCCURRENCES.NEVER} value.\n */\nfunction isSubPixelRoundingRuleUnknown(value) {\n    return value !== $.SUBPIXEL_ROUNDING_OCCURRENCES.ALWAYS &&\n        value !== $.SUBPIXEL_ROUNDING_OCCURRENCES.ONLY_AT_REST &&\n        value !== $.SUBPIXEL_ROUNDING_OCCURRENCES.NEVER;\n}\n\n/**\n * @private\n * @inner\n * Ensures the returned value is always a valid subpixel rounding enum value,\n * defaulting to {@link SUBPIXEL_ROUNDING_OCCURRENCES.NEVER} if input is missing or invalid.\n *\n * @param {SUBPIXEL_ROUNDING_OCCURRENCES} value - The subpixel rounding enum value to normalize.\n * @returns {SUBPIXEL_ROUNDING_OCCURRENCES} Returns a valid subpixel rounding enum value.\n */\nfunction normalizeSubPixelRoundingRule(value) {\n    if (isSubPixelRoundingRuleUnknown(value)) {\n        return DEFAULT_SUBPIXEL_ROUNDING_RULE;\n    }\n    return value;\n}\n\n/**\n * @private\n * @inner\n * Ensures the returned value is always a valid subpixel rounding enum value,\n * defaulting to 'NEVER' if input is missing or invalid.\n *\n * @param {Object} subPixelRoundingRules - A subpixel rounding enum values dictionary [{@link BROWSERS}] --> {@link SUBPIXEL_ROUNDING_OCCURRENCES}.\n * @returns {SUBPIXEL_ROUNDING_OCCURRENCES} Returns the determined subpixel rounding enum value for the\n * current browser.\n */\nfunction determineSubPixelRoundingRule(subPixelRoundingRules) {\n    if (typeof subPixelRoundingRules === 'number') {\n        return normalizeSubPixelRoundingRule(subPixelRoundingRules);\n    }\n\n    if (!subPixelRoundingRules || !$.Browser) {\n        return DEFAULT_SUBPIXEL_ROUNDING_RULE;\n    }\n\n    var subPixelRoundingRule = subPixelRoundingRules[$.Browser.vendor];\n\n    if (isSubPixelRoundingRuleUnknown(subPixelRoundingRule)) {\n        subPixelRoundingRule = subPixelRoundingRules['*'];\n    }\n\n    return normalizeSubPixelRoundingRule(subPixelRoundingRule);\n}\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - TileCache\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n// private class\nvar TileRecord = function( options ) {\n    $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n    $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n    $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n    this.tile = options.tile;\n    this.tiledImage = options.tiledImage;\n};\n\n// private class\nvar ImageRecord = function(options) {\n    $.console.assert( options, \"[ImageRecord] options is required\" );\n    $.console.assert( options.image, \"[ImageRecord] options.image is required\" );\n    this._image = options.image;\n    this._tiles = [];\n};\n\nImageRecord.prototype = {\n    destroy: function() {\n        this._image = null;\n        this._renderedContext = null;\n        this._tiles = null;\n    },\n\n    getImage: function() {\n        return this._image;\n    },\n\n    getRenderedContext: function() {\n        if (!this._renderedContext) {\n            var canvas = document.createElement( 'canvas' );\n            canvas.width = this._image.width;\n            canvas.height = this._image.height;\n            this._renderedContext = canvas.getContext('2d');\n            this._renderedContext.drawImage( this._image, 0, 0 );\n            //since we are caching the prerendered image on a canvas\n            //allow the image to not be held in memory\n            this._image = null;\n        }\n        return this._renderedContext;\n    },\n\n    setRenderedContext: function(renderedContext) {\n        $.console.error(\"ImageRecord.setRenderedContext is deprecated. \" +\n                \"The rendered context should be created by the ImageRecord \" +\n                \"itself when calling ImageRecord.getRenderedContext.\");\n        this._renderedContext = renderedContext;\n    },\n\n    addTile: function(tile) {\n        $.console.assert(tile, '[ImageRecord.addTile] tile is required');\n        this._tiles.push(tile);\n    },\n\n    removeTile: function(tile) {\n        for (var i = 0; i < this._tiles.length; i++) {\n            if (this._tiles[i] === tile) {\n                this._tiles.splice(i, 1);\n                return;\n            }\n        }\n\n        $.console.warn('[ImageRecord.removeTile] trying to remove unknown tile', tile);\n    },\n\n    getTileCount: function() {\n        return this._tiles.length;\n    }\n};\n\n/**\n * @class TileCache\n * @memberof OpenSeadragon\n * @classdesc Stores all the tiles displayed in a {@link OpenSeadragon.Viewer}.\n * You generally won't have to interact with the TileCache directly.\n * @param {Object} options - Configuration for this TileCache.\n * @param {Number} [options.maxImageCacheCount] - See maxImageCacheCount in\n * {@link OpenSeadragon.Options} for details.\n */\n$.TileCache = function( options ) {\n    options = options || {};\n\n    this._maxImageCacheCount = options.maxImageCacheCount || $.DEFAULT_SETTINGS.maxImageCacheCount;\n    this._tilesLoaded = [];\n    this._imagesLoaded = [];\n    this._imagesLoadedCount = 0;\n};\n\n/** @lends OpenSeadragon.TileCache.prototype */\n$.TileCache.prototype = {\n    /**\n     * @returns {Number} The total number of tiles that have been loaded by\n     * this TileCache.\n     */\n    numTilesLoaded: function() {\n        return this._tilesLoaded.length;\n    },\n\n    /**\n     * Caches the specified tile, removing an old tile if necessary to stay under the\n     * maxImageCacheCount specified on construction. Note that if multiple tiles reference\n     * the same image, there may be more tiles than maxImageCacheCount; the goal is to keep\n     * the number of images below that number. Note, as well, that even the number of images\n     * may temporarily surpass that number, but should eventually come back down to the max specified.\n     * @param {Object} options - Tile info.\n     * @param {OpenSeadragon.Tile} options.tile - The tile to cache.\n     * @param {String} options.tile.cacheKey - The unique key used to identify this tile in the cache.\n     * @param {Image} options.image - The image of the tile to cache.\n     * @param {OpenSeadragon.TiledImage} options.tiledImage - The TiledImage that owns that tile.\n     * @param {Number} [options.cutoff=0] - If adding this tile goes over the cache max count, this\n     * function will release an old tile. The cutoff option specifies a tile level at or below which\n     * tiles will not be released.\n     */\n    cacheTile: function( options ) {\n        $.console.assert( options, \"[TileCache.cacheTile] options is required\" );\n        $.console.assert( options.tile, \"[TileCache.cacheTile] options.tile is required\" );\n        $.console.assert( options.tile.cacheKey, \"[TileCache.cacheTile] options.tile.cacheKey is required\" );\n        $.console.assert( options.tiledImage, \"[TileCache.cacheTile] options.tiledImage is required\" );\n\n        var cutoff = options.cutoff || 0;\n        var insertionIndex = this._tilesLoaded.length;\n\n        var imageRecord = this._imagesLoaded[options.tile.cacheKey];\n        if (!imageRecord) {\n            $.console.assert( options.image, \"[TileCache.cacheTile] options.image is required to create an ImageRecord\" );\n            imageRecord = this._imagesLoaded[options.tile.cacheKey] = new ImageRecord({\n                image: options.image\n            });\n\n            this._imagesLoadedCount++;\n        }\n\n        imageRecord.addTile(options.tile);\n        options.tile.cacheImageRecord = imageRecord;\n\n        // Note that just because we're unloading a tile doesn't necessarily mean\n        // we're unloading an image. With repeated calls it should sort itself out, though.\n        if ( this._imagesLoadedCount > this._maxImageCacheCount ) {\n            var worstTile       = null;\n            var worstTileIndex  = -1;\n            var worstTileRecord = null;\n            var prevTile, worstTime, worstLevel, prevTime, prevLevel, prevTileRecord;\n\n            for ( var i = this._tilesLoaded.length - 1; i >= 0; i-- ) {\n                prevTileRecord = this._tilesLoaded[ i ];\n                prevTile = prevTileRecord.tile;\n\n                if ( prevTile.level <= cutoff || prevTile.beingDrawn ) {\n                    continue;\n                } else if ( !worstTile ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                    continue;\n                }\n\n                prevTime    = prevTile.lastTouchTime;\n                worstTime   = worstTile.lastTouchTime;\n                prevLevel   = prevTile.level;\n                worstLevel  = worstTile.level;\n\n                if ( prevTime < worstTime ||\n                   ( prevTime === worstTime && prevLevel > worstLevel ) ) {\n                    worstTile       = prevTile;\n                    worstTileIndex  = i;\n                    worstTileRecord = prevTileRecord;\n                }\n            }\n\n            if ( worstTile && worstTileIndex >= 0 ) {\n                this._unloadTile(worstTileRecord);\n                insertionIndex = worstTileIndex;\n            }\n        }\n\n        this._tilesLoaded[ insertionIndex ] = new TileRecord({\n            tile: options.tile,\n            tiledImage: options.tiledImage\n        });\n    },\n\n    /**\n     * Clears all tiles associated with the specified tiledImage.\n     * @param {OpenSeadragon.TiledImage} tiledImage\n     */\n    clearTilesFor: function( tiledImage ) {\n        $.console.assert(tiledImage, '[TileCache.clearTilesFor] tiledImage is required');\n        var tileRecord;\n        for ( var i = 0; i < this._tilesLoaded.length; ++i ) {\n            tileRecord = this._tilesLoaded[ i ];\n            if ( tileRecord.tiledImage === tiledImage ) {\n                this._unloadTile(tileRecord);\n                this._tilesLoaded.splice( i, 1 );\n                i--;\n            }\n        }\n    },\n\n    // private\n    getImageRecord: function(cacheKey) {\n        $.console.assert(cacheKey, '[TileCache.getImageRecord] cacheKey is required');\n        return this._imagesLoaded[cacheKey];\n    },\n\n    // private\n    _unloadTile: function(tileRecord) {\n        $.console.assert(tileRecord, '[TileCache._unloadTile] tileRecord is required');\n        var tile = tileRecord.tile;\n        var tiledImage = tileRecord.tiledImage;\n\n        tile.unload();\n        tile.cacheImageRecord = null;\n\n        var imageRecord = this._imagesLoaded[tile.cacheKey];\n        imageRecord.removeTile(tile);\n        if (!imageRecord.getTileCount()) {\n            imageRecord.destroy();\n            delete this._imagesLoaded[tile.cacheKey];\n            this._imagesLoadedCount--;\n        }\n\n        /**\n         * Triggered when a tile has just been unloaded from memory.\n         *\n         * @event tile-unloaded\n         * @memberof OpenSeadragon.Viewer\n         * @type {object}\n         * @property {OpenSeadragon.TiledImage} tiledImage - The tiled image of the unloaded tile.\n         * @property {OpenSeadragon.Tile} tile - The tile which has been unloaded.\n         */\n        tiledImage.viewer.raiseEvent(\"tile-unloaded\", {\n            tile: tile,\n            tiledImage: tiledImage\n        });\n    }\n};\n\n}( OpenSeadragon ));\n\n/*\n * OpenSeadragon - World\n *\n * Copyright (C) 2009 CodePlex Foundation\n * Copyright (C) 2010-2013 OpenSeadragon contributors\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * - Neither the name of CodePlex Foundation nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function( $ ){\n\n/**\n * @class World\n * @memberof OpenSeadragon\n * @extends OpenSeadragon.EventSource\n * @classdesc Keeps track of all of the tiled images in the scene.\n * @param {Object} options - World options.\n * @param {OpenSeadragon.Viewer} options.viewer - The Viewer that owns this World.\n **/\n$.World = function( options ) {\n    var _this = this;\n\n    $.console.assert( options.viewer, \"[World] options.viewer is required\" );\n\n    $.EventSource.call( this );\n\n    this.viewer = options.viewer;\n    this._items = [];\n    this._needsDraw = false;\n    this._autoRefigureSizes = true;\n    this._needsSizesFigured = false;\n    this._delegatedFigureSizes = function(event) {\n        if (_this._autoRefigureSizes) {\n            _this._figureSizes();\n        } else {\n            _this._needsSizesFigured = true;\n        }\n    };\n\n    this._figureSizes();\n};\n\n$.extend( $.World.prototype, $.EventSource.prototype, /** @lends OpenSeadragon.World.prototype */{\n    /**\n     * Add the specified item.\n     * @param {OpenSeadragon.TiledImage} item - The item to add.\n     * @param {Number} [options.index] - Index for the item. If not specified, goes at the top.\n     * @fires OpenSeadragon.World.event:add-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    addItem: function( item, options ) {\n        $.console.assert(item, \"[World.addItem] item is required\");\n        $.console.assert(item instanceof $.TiledImage, \"[World.addItem] only TiledImages supported at this time\");\n\n        options = options || {};\n        if (options.index !== undefined) {\n            var index = Math.max(0, Math.min(this._items.length, options.index));\n            this._items.splice(index, 0, item);\n        } else {\n            this._items.push( item );\n        }\n\n        if (this._autoRefigureSizes) {\n            this._figureSizes();\n        } else {\n            this._needsSizesFigured = true;\n        }\n\n        this._needsDraw = true;\n\n        item.addHandler('bounds-change', this._delegatedFigureSizes);\n        item.addHandler('clip-change', this._delegatedFigureSizes);\n\n        /**\n         * Raised when an item is added to the World.\n         * @event add-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.Viewer} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item that has been added.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'add-item', {\n            item: item\n        } );\n    },\n\n    /**\n     * Get the item at the specified index.\n     * @param {Number} index - The item's index.\n     * @returns {OpenSeadragon.TiledImage} The item at the specified index.\n     */\n    getItemAt: function( index ) {\n        $.console.assert(index !== undefined, \"[World.getItemAt] index is required\");\n        return this._items[ index ];\n    },\n\n    /**\n     * Get the index of the given item or -1 if not present.\n     * @param {OpenSeadragon.TiledImage} item - The item.\n     * @returns {Number} The index of the item or -1 if not present.\n     */\n    getIndexOfItem: function( item ) {\n        $.console.assert(item, \"[World.getIndexOfItem] item is required\");\n        return $.indexOf( this._items, item );\n    },\n\n    /**\n     * @returns {Number} The number of items used.\n     */\n    getItemCount: function() {\n        return this._items.length;\n    },\n\n    /**\n     * Change the index of a item so that it appears over or under others.\n     * @param {OpenSeadragon.TiledImage} item - The item to move.\n     * @param {Number} index - The new index.\n     * @fires OpenSeadragon.World.event:item-index-change\n     */\n    setItemIndex: function( item, index ) {\n        $.console.assert(item, \"[World.setItemIndex] item is required\");\n        $.console.assert(index !== undefined, \"[World.setItemIndex] index is required\");\n\n        var oldIndex = this.getIndexOfItem( item );\n\n        if ( index >= this._items.length ) {\n            throw new Error( \"Index bigger than number of layers.\" );\n        }\n\n        if ( index === oldIndex || oldIndex === -1 ) {\n            return;\n        }\n\n        this._items.splice( oldIndex, 1 );\n        this._items.splice( index, 0, item );\n        this._needsDraw = true;\n\n        /**\n         * Raised when the order of the indexes has been changed.\n         * @event item-index-change\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item whose index has\n         * been changed\n         * @property {Number} previousIndex - The previous index of the item\n         * @property {Number} newIndex - The new index of the item\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'item-index-change', {\n            item: item,\n            previousIndex: oldIndex,\n            newIndex: index\n        } );\n    },\n\n    /**\n     * Remove an item.\n     * @param {OpenSeadragon.TiledImage} item - The item to remove.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeItem: function( item ) {\n        $.console.assert(item, \"[World.removeItem] item is required\");\n\n        var index = $.indexOf(this._items, item );\n        if ( index === -1 ) {\n            return;\n        }\n\n        item.removeHandler('bounds-change', this._delegatedFigureSizes);\n        item.removeHandler('clip-change', this._delegatedFigureSizes);\n        item.destroy();\n        this._items.splice( index, 1 );\n        this._figureSizes();\n        this._needsDraw = true;\n        this._raiseRemoveItem(item);\n    },\n\n    /**\n     * Remove all items.\n     * @fires OpenSeadragon.World.event:remove-item\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    removeAll: function() {\n        // We need to make sure any pending images are canceled so the world items don't get messed up\n        this.viewer._cancelPendingImages();\n        var item;\n        var i;\n        for (i = 0; i < this._items.length; i++) {\n            item = this._items[i];\n            item.removeHandler('bounds-change', this._delegatedFigureSizes);\n            item.removeHandler('clip-change', this._delegatedFigureSizes);\n            item.destroy();\n        }\n\n        var removedItems = this._items;\n        this._items = [];\n        this._figureSizes();\n        this._needsDraw = true;\n\n        for (i = 0; i < removedItems.length; i++) {\n            item = removedItems[i];\n            this._raiseRemoveItem(item);\n        }\n    },\n\n    /**\n     * Clears all tiles and triggers updates for all items.\n     */\n    resetItems: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].reset();\n        }\n    },\n\n    /**\n     * Updates (i.e. animates bounds of) all items.\n     */\n    update: function() {\n        var animated = false;\n        for ( var i = 0; i < this._items.length; i++ ) {\n            animated = this._items[i].update() || animated;\n        }\n\n        return animated;\n    },\n\n    /**\n     * Draws all items.\n     */\n    draw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            this._items[i].draw();\n        }\n\n        this._needsDraw = false;\n    },\n\n    /**\n     * @returns {Boolean} true if any items need updating.\n     */\n    needsDraw: function() {\n        for ( var i = 0; i < this._items.length; i++ ) {\n            if ( this._items[i].needsDraw() ) {\n                return true;\n            }\n        }\n        return this._needsDraw;\n    },\n\n    /**\n     * @returns {OpenSeadragon.Rect} The smallest rectangle that encloses all items, in viewport coordinates.\n     */\n    getHomeBounds: function() {\n        return this._homeBounds.clone();\n    },\n\n    /**\n     * To facilitate zoom constraints, we keep track of the pixel density of the\n     * densest item in the World (i.e. the item whose content size to viewport size\n     * ratio is the highest) and save it as this \"content factor\".\n     * @returns {Number} the number of content units per viewport unit.\n     */\n    getContentFactor: function() {\n        return this._contentFactor;\n    },\n\n    /**\n     * As a performance optimization, setting this flag to false allows the bounds-change event handler\n     * on tiledImages to skip calculations on the world bounds. If a lot of images are going to be positioned in\n     * rapid succession, this is a good idea. When finished, setAutoRefigureSizes should be called with true\n     * or the system may behave oddly.\n     * @param {Boolean} [value] The value to which to set the flag.\n     */\n    setAutoRefigureSizes: function(value) {\n        this._autoRefigureSizes = value;\n        if (value & this._needsSizesFigured) {\n            this._figureSizes();\n            this._needsSizesFigured = false;\n        }\n    },\n\n    /**\n     * Arranges all of the TiledImages with the specified settings.\n     * @param {Object} options - Specifies how to arrange.\n     * @param {Boolean} [options.immediately=false] - Whether to animate to the new arrangement.\n     * @param {String} [options.layout] - See collectionLayout in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.rows] - See collectionRows in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.columns] - See collectionColumns in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileSize] - See collectionTileSize in {@link OpenSeadragon.Options}.\n     * @param {Number} [options.tileMargin] - See collectionTileMargin in {@link OpenSeadragon.Options}.\n     * @fires OpenSeadragon.World.event:metrics-change\n     */\n    arrange: function(options) {\n        options = options || {};\n        var immediately = options.immediately || false;\n        var layout = options.layout || $.DEFAULT_SETTINGS.collectionLayout;\n        var rows = options.rows || $.DEFAULT_SETTINGS.collectionRows;\n        var columns = options.columns || $.DEFAULT_SETTINGS.collectionColumns;\n        var tileSize = options.tileSize || $.DEFAULT_SETTINGS.collectionTileSize;\n        var tileMargin = options.tileMargin || $.DEFAULT_SETTINGS.collectionTileMargin;\n        var increment = tileSize + tileMargin;\n        var wrap;\n        if (!options.rows && columns) {\n            wrap = columns;\n        } else {\n            wrap = Math.ceil(this._items.length / rows);\n        }\n        var x = 0;\n        var y = 0;\n        var item, box, width, height, position;\n\n        this.setAutoRefigureSizes(false);\n        for (var i = 0; i < this._items.length; i++) {\n            if (i && (i % wrap) === 0) {\n                if (layout === 'horizontal') {\n                    y += increment;\n                    x = 0;\n                } else {\n                    x += increment;\n                    y = 0;\n                }\n            }\n\n            item = this._items[i];\n            box = item.getBounds();\n            if (box.width > box.height) {\n                width = tileSize;\n            } else {\n                width = tileSize * (box.width / box.height);\n            }\n\n            height = width * (box.height / box.width);\n            position = new $.Point(x + ((tileSize - width) / 2),\n                y + ((tileSize - height) / 2));\n\n            item.setPosition(position, immediately);\n            item.setWidth(width, immediately);\n\n            if (layout === 'horizontal') {\n                x += increment;\n            } else {\n                y += increment;\n            }\n        }\n        this.setAutoRefigureSizes(true);\n    },\n\n    // private\n    _figureSizes: function() {\n        var oldHomeBounds = this._homeBounds ? this._homeBounds.clone() : null;\n        var oldContentSize = this._contentSize ? this._contentSize.clone() : null;\n        var oldContentFactor = this._contentFactor || 0;\n\n        if (!this._items.length) {\n            this._homeBounds = new $.Rect(0, 0, 1, 1);\n            this._contentSize = new $.Point(1, 1);\n            this._contentFactor = 1;\n        } else {\n            var item = this._items[0];\n            var bounds = item.getBounds();\n            this._contentFactor = item.getContentSize().x / bounds.width;\n            var clippedBounds = item.getClippedBounds().getBoundingBox();\n            var left = clippedBounds.x;\n            var top = clippedBounds.y;\n            var right = clippedBounds.x + clippedBounds.width;\n            var bottom = clippedBounds.y + clippedBounds.height;\n            for (var i = 1; i < this._items.length; i++) {\n                item = this._items[i];\n                bounds = item.getBounds();\n                this._contentFactor = Math.max(this._contentFactor,\n                    item.getContentSize().x / bounds.width);\n                clippedBounds = item.getClippedBounds().getBoundingBox();\n                left = Math.min(left, clippedBounds.x);\n                top = Math.min(top, clippedBounds.y);\n                right = Math.max(right, clippedBounds.x + clippedBounds.width);\n                bottom = Math.max(bottom, clippedBounds.y + clippedBounds.height);\n            }\n\n            this._homeBounds = new $.Rect(left, top, right - left, bottom - top);\n            this._contentSize = new $.Point(\n                this._homeBounds.width * this._contentFactor,\n                this._homeBounds.height * this._contentFactor);\n        }\n\n        if (this._contentFactor !== oldContentFactor ||\n            !this._homeBounds.equals(oldHomeBounds) ||\n            !this._contentSize.equals(oldContentSize)) {\n            /**\n             * Raised when the home bounds or content factor change.\n             * @event metrics-change\n             * @memberOf OpenSeadragon.World\n             * @type {object}\n             * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n             * @property {?Object} userData - Arbitrary subscriber-defined object.\n             */\n            this.raiseEvent('metrics-change', {});\n        }\n    },\n\n    // private\n    _raiseRemoveItem: function(item) {\n        /**\n         * Raised when an item is removed.\n         * @event remove-item\n         * @memberOf OpenSeadragon.World\n         * @type {object}\n         * @property {OpenSeadragon.World} eventSource - A reference to the World which raised the event.\n         * @property {OpenSeadragon.TiledImage} item - The item's underlying item.\n         * @property {?Object} userData - Arbitrary subscriber-defined object.\n         */\n        this.raiseEvent( 'remove-item', { item: item } );\n    }\n});\n\n}( OpenSeadragon ));\n\n//# sourceMappingURL=openseadragon.js.map","const { AnnotationSlider } = require(\"./src/components/annotation_slider/main\");\nconst { FullSize }  = require(\"./src/components/full_screen/main\");\nconst { FontSize } = require(\"./src/components/font_size/main\");\nconst { FontFamily } = require(\"./src/components/font_family/main\");\nconst { ImageSwitch } = require(\"./src/components/image_switch/main\");\nconst { ImageLoader } = require(\"./src/components/image_loader/main\");\nconst { EditionPagination } = require(\"./src/components/image_loader/pagination\");\nconst { WindowResize } = require(\"./src/components/image_loader/resize\");\nconst { UrlSearchParamUpdate } = require(\"./src/components/search_params/main\");\nconst { SetDataCookie } = require(\"./src/utils/setCookie\");\n\n\"use strict\";\n\nclass LoadEditor {\n\n    constructor(options) {\n\n        /*\n        define configuration options\n        verify if option object is available and has specific key\n        if options are not available all key hold default values\n        if one or several keys are not available, only these keys will hold default values\n        */\n        if (options && \"aot\" in options) {\n            if (typeof options.aot == \"object\") {\n                this.conf_aot = options.aot;\n            } else {\n                this.conf_aot = false\n            }\n        } else {\n            this.conf_aot = {\n                title: \"Text Annotations\",\n                variants: [\n                    {\n                        opt: \"text-aot-1\",\n                        opt_slider: \"text-aot-1-slider\",\n                        title: \"Text Annotation 1\",\n                        color: \"red\",\n                        html_class: \"aot-1\",\n                        css_class: \"aot-1-update\",\n                        hide: false,\n                        chg_citation: \"citation-url\",\n                        features: {\n                            all: false,\n                            class: \"single-feature\"\n                        }\n                    }\n                ],\n                span_element: {\n                    css_class: \"badge-item\"\n                },\n                active_class: \"activated\",\n                rendered_element: {\n                    label_class: \"switch\",\n                    slider_class: \"i-slider round\"\n                }\n            }\n        }\n        if (options && \"fs\" in options) {\n            if (typeof options.fs == \"object\") {\n                this.conf_fs = options.fs;\n            } else {\n                this.conf_fs = false\n            }\n        } else {\n            this.conf_fs = {\n                name: \"Change to fullscreen\",\n                variants:  [\n                    {\n                        opt: \"edition-fullsize\",\n                        title: \"Full screen on/off\",\n                        urlparam: \"fullscreen\",\n                        chg_citation: \"citation-url\",\n                        hide: {\n                            hidden: true,\n                            class_to_hide: \"hide-reading\"\n        \n                        }\n                    }\n                ],\n                active_class: \"active\",\n                rendered_element: {\n                    a_class: \"nav-link btn btn-round\",\n                    svg: \"<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-fullscreen' viewBox='0 0 16 16'><path d='M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z'/></svg>\"\n                }\n            }\n        }\n        if (options && \"fos\" in options) {\n            if (typeof options.fos == \"object\") {\n                this.conf_fos = options.fos;\n            } else {\n                this.conf_fos = false\n            }\n        } else {\n            this.conf_fos = {\n                name: \"Change font size\",\n                variants:  [\n                    {\n                        opt: \"select-fontsize\",\n                        title: \"Font size\",\n                        urlparam: \"fontsize\",\n                        chg_citation: \"citation-url\",\n                        sizes: {\n                            default: \"default\",\n                            font_size_14: \"14\",\n                            font_size_18: \"18\",\n                            font_size_22: \"22\",\n                            font_size_26: \"26\"\n                        },\n                        paragraph: \"p\",\n                        p_class: \"yes-index\",\n                        css_class: \"font-size-\"\n                    }\n                ],\n                active_class: \"active\",\n                html_class: \"custom-select\"\n            }\n        }\n        if (options && \"ff\" in options) {\n            if (typeof options.ff == \"object\") {\n                this.conf_ff = options.ff;\n            } else {\n                this.conf_ff = false\n            }\n        } else {\n            this.conf_ff = {\n                name: \"Change font family\",\n                variants:  [\n                    {\n                        opt: \"select-font\",\n                        title: \"Font family\",\n                        urlparam: \"font\",\n                        chg_citation: \"citation-url\",\n                        fonts: {\n                            default: \"default\",\n                            font1: \"Times-New-Roman\",\n                            font2: \"Courier-New\",\n                            font3: \"Arial-serif\"\n                        },\n                        paragraph: \"p\",\n                        p_class: \"yes-index\",\n                        css_class: \"\"\n                    }\n                ],\n                active_class: \"active\",\n                html_class: \"custom-select\"\n            }\n        }\n        if (options && \"is\" in options) {\n            if (typeof options.is == \"object\") {\n                this.conf_is = options.is;\n            } else {\n                this.conf_is = false\n            }\n        } else {\n            this.conf_is = {\n                name: \"enable/disable image viewer\",\n                variants:  [\n                    {\n                        opt: \"edition-switch\",\n                        title: \"Facsimile on/off\",\n                        urlparam: \"image\",\n                        chg_citation: \"citation-url\",\n                        fade: \"fade\",\n                        column_small: {\n                            \"class\": \"col-md-6\",\n                            \"percent\": \"50%\"\n                        },\n                        column_full: {\n                            \"class\": \"col-md-12\",\n                            \"percent\": \"100%\"\n                        },\n                        hide: {\n                            hidden: true,\n                            class_to_hide: \"osd-viewer\",\n                            class_to_show: \"text-re\",\n                            class_parent: \"pagination-tab\",\n                            resize: \"resize-hide\"\n                        },\n                        image_size: \"1000px\"\n                    }\n                ],\n                active_class: \"active\",\n                rendered_element: {\n                    a_class: \"nav-link btn btn-round\",\n                    svg: \"<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-image' viewBox='0 0 16 16'><path d='M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z'/><path d='M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z'/></svg>\"\n                }\n            }\n        }\n        if (options && \"il\" in options) {\n            if (typeof options.il == \"object\") {\n                this.conf_il = options.il;\n            } else {\n                this.conf_il = false\n            }\n        } else {\n            this.conf_il = {\n                name: \"load images in OSD viewer\",\n                opt: \"image-loader\",\n                title: \"Faksimiles\",\n                urlparam: \"page\",\n                chg_citation: \"citation-url\",\n                pag_link: \".pagination .nav-tabs .nav-item .nav-link\",\n                pag_tab: \".pagination-tab.tab-pane\",\n                img_size: \"1000px\",\n                url: \"https://id.acdh.oeaw.ac.at/auden-musulin-papers/\",\n                url_param: \".jpg?format=iiif\",\n                osd_target: \"container\",\n                img_source: \"container2\",\n                img_types: [\"envelope\", \"sheet\"],\n                active_class: \"active\",\n                inactive_class: \"fade\",\n                bootstrap_class: \"show\",\n            }\n        }\n        if (options && \"ep\" in options) {\n            if (typeof options.ep == \"object\") {\n                this.conf_ep = options.ep;\n            } else {\n                this.conf_ep = false\n            }\n        } else {\n            this.conf_ep = {\n                name: \"Page Pagination\",\n                opt: \"edition-pagination\",\n                title: \"Page Pagination\",\n                urlparam: \"page\",\n                chg_citation: \"citation-url\",\n                pag_link: \".pagination-link\",\n                pag_tab: \".pagination-tab.tab-pane\",\n                img_size: \"1000px\",\n                active_class: \"active\",\n                inactive_class: \"fade\",\n                bootstrap_class: \"show\",\n                url: \"https://id.acdh.oeaw.ac.at/auden-musulin-papers/\",\n                url_param: \".jpg?format=iiif\",\n                osd_target: \"container\",\n                img_source: \"container2\"\n            }\n        }\n        if (options && \"wr\" in options) {\n            this.conf_wr = options.wr;\n        } else {\n            this.conf_wr = false;\n        }\n        if (options && \"up\" in options) {\n            this.conf_up = options.up;\n        } else {\n            this.conf_up = false;\n        }\n\n        // initialize imported functions\n        this.up = new UrlSearchParamUpdate();\n\n        // set cookies if config options is available\n        if (this.conf_aot) {\n            try {\n                this.set_cookie_aot = new SetDataCookie(\"conf_annotation_slider\", this.conf_aot).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_fs) {\n            try {\n                this.set_cookie_fs = new SetDataCookie(\"conf_fullsize\", this.conf_fs).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_fos) {\n            try {\n                this.set_cookie_fos = new SetDataCookie(\"conf_fontsize\", this.conf_fos).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_ff) {\n            try {\n                this.set_cookie_ff = new SetDataCookie(\"conf_font_family\", this.conf_ff).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_is) {\n            try {\n                this.set_cookie_is = new SetDataCookie(\"conf_image_switch\", this.conf_is).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_il) {\n            try {\n                this.set_cookie_il = new SetDataCookie(\"conf_image_loader\", this.conf_il).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_ep) {\n            try {\n                this.set_cookie_ep = new SetDataCookie(\"conf_ed_pagination\", this.conf_ep).build();\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        // defines custom elements and assigns a class\n        // renders html node and adds function\n        // window onload triggers paramUrl functions\n        if (this.conf_ep) {\n            try {\n                window.customElements.define('edition-pagination', EditionPagination);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_il) {\n            try {\n                window.customElements.define('image-loader', ImageLoader);\n                if (this.conf_up) {\n                    window.onload = this.up.pageUrl();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_aot) {\n            try {\n                window.customElements.define('annotation-slider', AnnotationSlider);\n                if (this.conf_up) {\n                    window.onload = this.up.textFeatures();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_fs) {\n            try {\n                window.customElements.define('full-size', FullSize);\n                if (this.conf_up) {\n                    window.onload = this.up.fullSreen();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_fos) {\n            try {\n                window.customElements.define('font-size', FontSize);\n                if (this.conf_up) {\n                    window.onload = this.up.fontSize();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_ff) {\n            try {\n                window.customElements.define('font-family', FontFamily);\n                if (this.conf_up) {\n                    window.onload = this.up.fontFamily();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_is) {\n            try {\n                window.customElements.define('image-switch', ImageSwitch);\n                if (this.conf_up) {\n                    window.onload = this.up.viewerSwitch();\n                }\n                \n            } catch (e) {\n                console.log(e);\n            }\n        }\n        if (this.conf_wr) {\n            try {\n                window.customElements.define('window-resize', WindowResize);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        // onpopstate = browser back and forward button to recognize classes\n        window.onpopstate = () => {\n            if (this.conf_aot && this.conf_up) {\n                try {\n                    this.up.textFeatures();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            if (this.conf_fs && this.conf_up) {\n                try {\n                    this.up.fullSreen();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            if (this.conf_fos && this.conf_up) {\n                try {\n                    this.up.fontSize();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            if (this.conf_ff && this.conf_up) {\n                try {\n                    this.up.fontFamily();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            if (this.conf_is && this.conf_up) {\n                try {\n                    this.up.viewerSwitch();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            if (this.conf_il && this.conf_up) {\n                try {\n                    this.up.pageUrl();\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n\n        window.onload = () => {\n                    \n            if (window.location.hash == '') {\n                return false;\n            }\n            \n            let el = document.querySelector(window.location.hash);\n            \n            if (el !== null) {\n            \n                el.scrollIntoView({ behavior: 'smooth' });\n                el.style.backgroundColor = \"#FFFCA1\";\n            \n            }\n        \n        }\n\n    }\n\n};\n\nmodule.exports = LoadEditor;\n","const { addMarkup, removeMarkup, uptState } = require(\"../../utils/utils\");\n\nexport class AnnotationSlider extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        this.childNodes[3].childNodes[1].addEventListener(\"click\", this.textFeatures);\n        // console.log(this.childNodes[3].childNodes[1]);\n    }\n\n    // function to triggers on click of the rendered element\n    textFeatures() {\n\n        // get session cookie with configartion json\n        let data = \"conf_annotation_slider\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n\n        // get current url parameters\n        let url = new URL(window.location.href);\n        let hash = url.hash;\n        let urlParam = new URLSearchParams(url.search);\n\n        // get id of rendered html element. opt value of custom element is used as ID.\n        let id = this.getAttribute(\"id\");\n        if (!id) {\n            console.log(\"ID of annotation slider custom child element not found. \\\n            Make sure the annotation-slider element holds the attribute 'opt' with \\\n            a defined string value.\");\n        }\n\n        // configuration holds an array with variants with at least one variant object.\n        // to match the custom element with the configuration the opt value must match.\n        let variant = options.variants.find((v) => v.opt === id);\n        if (!variant) {\n            console.log(\"No variant found! Please define a variant object that contains \\\n            and 'opt' key holding a string value that matches the 'opt' value of custom \\\n            element 'annotation#slider'.\");\n        }\n\n        let style = options.span_element;\n        let active = options.active_class;\n\n        // variants are either single-feature or all-features\n        // single-features manipulate the DOM based on a given class\n        // all-features control all other single-feature variants\n        // one to control them all (well could be several to control them all)\n\n        // in control all other sliders the following defines seperates\n        // the all-features variant from others. If one is found it triggers\n        // all sliders by clicking on the all-features slider variant\n        let all = variant.features.all;\n        let variants = options.variants.filter((v) => v.features.all === false);\n        let none_variant = options.variants.find((v) => v.features.all === true);\n        if (all === true) {\n\n            // the current state of the annoation slider is set bei adding or\n            // removing a class e.g. 'active'\n            if ( this.classList.contains(active) ) {\n                this.classList.remove(active);\n\n                // if current state is active remove class/state\n                // find all element classes in DOM and remove CSS class\n                variants.forEach((el) => {\n                    if (document.getElementById(el.opt).checked === true) {\n\n                        // for all found DOM elements remove color class and css_class\n                        // if hide is true hide elements with display:none\n                        let color = el.color;\n                        let html_class = el.html_class;\n                        let css_class = el.css_class;\n                        let hide = el.hide;\n\n                        // besides removing marktup the function 'removemarkup()' returns\n                        // the number of elements nodes found as string\n                        let selected = removeMarkup(html_class, css_class, color, hide, style);\n\n                        // the color class is also removed from the slider element\n                        let slider = document.getElementById(el.opt_slider);\n                        slider.classList.remove(color);\n\n                        // the data attrib and class is removed from slider element\n                        slider.removeAttribute(\"data\");\n                        slider.classList.remove(\"slider-number\");\n\n                        // disables the checked value from input element\n                        // as well as the class to define the state\n                        document.getElementById(el.opt).checked = false;\n                        document.getElementById(el.opt).classList.remove(active);\n\n                        // accasses the url params and sets the key to off\n                        urlParam.set(el.opt, \"off\");\n                    }\n                });\n\n                // the node count also works on the all-features variant\n                this.removeAttribute(\"data\");\n                this.classList.remove(\"slider-number\");\n\n            } else {\n\n                // same functionality as above but with reversed effect\n                // adds markup, count and changes state to active\n                let count = 0;\n                this.classList.add(active);\n                variants.forEach((el) => {\n                    if (document.getElementById(el.opt).checked === false) {\n                        let color = el.color;\n                        let html_class = el.html_class;\n                        let css_class = el.css_class;\n                        let hide = el.hide;\n                        let selected = addMarkup(html_class, css_class, color, hide, style);\n                        let slider = document.getElementById(el.opt_slider);\n                        slider.classList.add(color);\n                        slider.setAttribute(\"data\", selected);\n                        slider.classList.add(\"slider-number\");\n                        document.getElementById(el.opt).checked = true;\n                        document.getElementById(el.opt).classList.add(active);\n                        urlParam.set(el.opt, \"on\");\n                        count += parseInt(selected);\n                    }\n                });\n                this.setAttribute(\"data\", count);\n                this.classList.add(\"slider-number\");\n            }\n\n        } else if (typeof all !== \"boolean\") {\n\n            // if the all-features key is not a boolean it displays a waring in the console.\n            console.log(`Type of variant config. \"features.all\" must be Boolean (true or false)`);\n\n        } else {\n\n            // if variant is a single-feature this part triggers\n            // either adds or removes markup (classes) depending on the state of the slider\n            let color = variant.color;\n            let html_class = variant.html_class;\n            let css_class = variant.css_class;\n            let hide = variant.hide;\n\n            if ( this.classList.contains(active) ) {\n\n                // state == active (remove state and markup)\n                this.classList.remove(active);\n                let selected = removeMarkup(html_class, css_class, color, hide, style);\n                let slider = document.getElementById(variant.opt_slider);\n                slider.classList.remove(color);\n                slider.removeAttribute(\"data\");\n                slider.classList.remove(\"slider-number\");\n                this.classList.remove(color);\n                urlParam.set(variant.opt, \"off\");\n\n            } else {\n\n                // state == not active (add state and markup)\n                this.classList.add(active);\n                let selected = addMarkup(html_class, css_class, color, hide, style);\n                let slider = document.getElementById(variant.opt_slider);\n                slider.classList.add(color);\n                slider.setAttribute(\"data\", selected);\n                slider.classList.add(\"slider-number\");\n                this.classList.add(color);\n                urlParam.set(variant.opt, \"on\");\n\n            }\n\n            /*\n                If all or not all annotation-sliders are selected the slider\n                link will automatically be switched on or off.\n            */\n            let variants_checked = document.querySelectorAll(`input.${variant.features.class}:checked`);\n            if (variants_checked.length === variants.length) {\n                document.getElementById(none_variant.opt).checked = true;\n                document.getElementById(none_variant.opt).classList.add(active);\n            } else {\n                document.getElementById(none_variant.opt).checked = false;\n                document.getElementById(none_variant.opt).classList.remove(active);\n            }\n            \n        }\n\n        // current state of the annotation sliders is saved in the url parameters\n        // current state is also saved in window history (back/forward browser button)\n        var stateName = variant.opt;\n        if (stateName !== \"text-features\") {\n            var stateParam = urlParam.get(variant.opt);\n            var state = {};\n            state[stateName] = stateParam;\n        } else {\n            var state = {};\n            for (const [ key, value ] of urlParam) {\n                state[key] = value;\n            } \n        }\n\n        // try to find elment holding an ID matching the 'chg_citation' string value\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": href\n        });\n    }\n\n    // function to render HTML element inside the custom element\n    render() {\n        let data = \"conf_annotation_slider\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        const opt = this.getAttribute(\"opt\");\n        const variant = options.variants.find((v) => v.opt === opt);\n        const title = variant.title;\n        const opt_slider = variant.opt_slider;\n        const rendered_element = options.rendered_element;\n        this.innerHTML = `\n            <label>${title}</label>\n            <label class=\"${rendered_element.label_class}\">\n                <input title=\"${title}\"\n                    type=\"checkbox\"\n                    id=\"${opt}\"\n                    data-target=\"${data}\"\n                    class=\"${variant.features.class}\"/>\n                <span id=\"${opt_slider}\" class=\"${rendered_element.slider_class}\"></span>\n            </label>\n        `;\n    }\n\n    attributeChangedCallback() {\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.childNodes[3].childNodes[1].removeEventListener(\"click\", this.textFeatures);\n    }\n}\n","const { uptState } = require(\"../../utils/utils\");\n\nexport class FullSize extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        // console.log(this.childNodes[3]);\n        this.childNodes[3].addEventListener(\"click\", this.fullScreen);\n    }\n\n    fullScreen() {\n        let data = \"conf_fullsize\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let url = new URL(window.location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let active = options.active_class;\n        let id = this.getAttribute(\"id\");\n        let variant = options.variants.find((v) => v.opt === id);\n        let hide = variant.hide.class_to_hide;\n\n        let urlparam = variant.urlparam;\n        let svg_show = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen\" viewBox=\"0 0 16 16\">\n                <path d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\n            </svg>\n        `;\n        let svg_hide = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen-exit\" viewBox=\"0 0 16 16\">\n                <path d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z\"/>\n            </svg>\n        `;\n        if ( urlParam.get(urlparam) == \"off\" ) {\n            urlParam.set(urlparam, \"on\");\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.add(\"fade\");\n                options.rendered_element.svg = svg_hide;\n            });\n            this.classList.remove(active);\n        } else {                      \n            urlParam.set(urlparam, \"off\");\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.remove(\"fade\");\n                options.rendered_element.svg = svg_show;\n            });\n            this.classList.add(active); \n        }\n        var stateName = variant.opt;\n        var stateParam = urlParam.get(variant.opt);\n        var state = {};\n        state[stateName] = stateParam;\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": href\n        });\n\n    }\n\n    render() {\n        let data = \"conf_fullsize\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let opt = this.getAttribute(\"opt\");\n        let variant = options.variants.find((v) => v.opt === opt);\n        let rendered_element = options.rendered_element;\n        this.innerHTML = `\n            <small><label style=\"padding:.2em;\">${variant.title}:</label></small>\n            <a title=\"${variant.title}\"\n                class=\"${rendered_element.a_class} active\"\n                id=\"${variant.opt}\"\n                data-target=\"${data}\">\n                ${rendered_element.svg}\n            </a>\n        `;\n    }\n\n    attributeChangedCallback() {\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.childNodes[3].removeEventListener(\"click\", this.fullScrean);\n    }\n\n}","const { uptState } = require(\"../../utils/utils\");\n\nexport class FontSize extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        // console.log(this.childNodes[3]);\n        this.childNodes[3].addEventListener(\"change\", this.fontSize);\n    }\n\n    fontSize() {\n        let data = \"conf_fontsize\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let url = new URL(window.location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let id = this.getAttribute(\"id\");\n        let variant = options.variants.find((v) => v.opt === id);\n        let p_change = variant.paragraph;\n        let p_class = variant.p_class;\n        let size = variant.sizes;\n        let urlparam = variant.urlparam;\n        var value = this.value;\n        var css_class = variant.css_class;\n        if ( urlParam.get(urlparam) !== value.replace(css_class, '') ) {\n            urlParam.set(urlparam, value.replace(css_class, ''));\n            let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n            paragraph.forEach((el) => {\n                for (let s in size) {\n                    if (size[s] !== \"default\") {\n                        el.classList.remove(css_class + size[s]);   \n                    }           \n                }\n                if(value !== \"default\") {\n                    el.classList.add(value);\n                }\n            });\n        }\n        var stateName = variant.opt;\n        var stateParam = urlParam.get(variant.opt);\n        var state = {};\n        state[stateName] = stateParam;\n        // window.history.pushState(state, '', `${location.pathname}?${urlParam}${location.hash}`);\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": href\n        });\n\n    }\n\n    render() {\n        let data = \"conf_fontsize\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let opt = this.getAttribute(\"opt\");\n        let variant = options.variants.find((v) => v.opt === opt);\n        let size = variant.sizes;\n        let html_class = options.html_class;\n        var css_class = variant.css_class;\n        let s_html = `\n            <small><label style=\"padding:.2em;\">${variant.title}:</label></small>\n            <select id=\"${variant.opt}\" data-target=\"${data}\" class=\"${html_class}\">\n        `;\n        for (let s in size) {\n            if (size[s] == \"default\") {\n                var option = `<option value=\"default\" selected='selected'>${size[s].split('-').slice(-1)} px`;\n            } else {\n                var option = `<option value='${css_class}${size[s]}'>${size[s].split('-').slice(-1)} px`;\n            }\n            s_html += option;\n            s_html += \"</option>\";\n        }\n        s_html += \"</select>\";\n        this.innerHTML = s_html;\n    }\n\n    attributeChangedCallback() {\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.childNodes[3].removeEventListener(\"change\", this.fontSize);\n    }\n\n}","const { uptState } = require(\"../../utils/utils\");\n\nexport class FontFamily extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        // console.log(this.childNodes[3]);\n        this.childNodes[3].addEventListener(\"change\", this.fontFamily);\n    }\n\n    fontFamily() {\n        let data = \"conf_font_family\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let url = new URL(window.location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let id = this.getAttribute(\"id\");\n        let variant = options.variants.find((v) => v.opt === id);\n        let p_change = variant.paragraph;\n        let p_class = variant.p_class;\n        let family = variant.fonts;\n        let urlparam = variant.urlparam;\n        var value = this.value;\n        if ( urlParam.get(urlparam) !== value ) {\n            urlParam.set(urlparam, value);\n            let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n            paragraph.forEach((el) => {\n                for (let s in family) {\n                    if (family[s] !== \"default\") {\n                        el.classList.remove(family[s].toLowerCase());   \n                    }           \n                }\n                if(value !== \"default\") {\n                    el.classList.add(value.toLowerCase());\n                }\n            });\n        }\n        var stateName = variant.opt;\n        var stateParam = urlParam.get(variant.opt);\n        var state = {};\n        state[stateName] = stateParam;\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": href\n        });\n       \n    }\n\n    render() {\n        let data = \"conf_font_family\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let opt = this.getAttribute(\"opt\");\n        let variant = options.variants.find((v) => v.opt === opt);\n        let family = variant.fonts;\n        let html_class = options.html_class;\n        var css_class = variant.css_class;\n        let s_html = `\n            <small><label style=\"padding:.2em;\">${variant.title}:</label></small>\n            <select id=\"${variant.opt}\" data-target=\"${data}\" class=\"${html_class}\">\n        `;\n        for (let s in family) {\n            if (family[s] == \"default\") {\n                var option = `<option value=\"default\" selected='selected'>${family[s].replace('-', ' ')}`;\n            } else {\n                var option = `<option value='${css_class}${family[s]}'>${family[s].replace('-', ' ')}`;\n            }\n            s_html += option;\n            s_html += \"</option>\";\n        }\n        s_html += \"</select>\";\n        this.innerHTML = s_html;\n    }\n\n    attributeChangedCallback() {\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.childNodes[2].removeEventListener(\"change\", this.fontFamily);\n    }\n\n}","const { uptState } = require(\"../../utils/utils\");\n\nexport class ImageSwitch extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        // console.log(this.childNodes[3]);\n        this.childNodes[3].addEventListener(\"click\", this.viewerSwitch);\n    }\n\n    viewerSwitch() {\n        let data = \"conf_image_switch\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let url = new URL(window.location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let id = this.getAttribute(\"id\");\n        let variant = options.variants.find((v) => v.opt === id);\n        let active = options.active_class;\n        let hide = variant.hide.class_to_hide;\n        let show = variant.hide.class_to_show;\n        let parent = variant.hide.class_parent;\n        let resize = variant.hide.resize;\n        let fade = variant.fade;\n        let column_small = [variant.column_small[\"class\"], variant.column_small[\"percent\"]];\n        let column_full = [variant.column_full[\"class\"], variant.column_full[\"percent\"]];\n        let urlparam = variant.urlparam;\n\n        if ( urlParam.get(urlparam) == \"on\" ) {\n\n            urlParam.set(urlparam, \"off\");\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.add(fade);\n                el.classList.remove(column_small[0]);\n                el.style.maxWidth = column_full[1];\n                el.classList.remove(active);\n            });\n            document.querySelectorAll(`.${show}`).forEach((el) => {\n                el.classList.remove(column_small[0]);\n                el.classList.add(column_full[0]);\n                el.style.maxWidth = column_full[1];\n                el.classList.remove(active);\n            });\n            document.querySelectorAll(`.${resize}`).forEach((el) => {\n                el.style.display = \"none\";\n            });\n            this.classList.remove(active); \n\n        } else {    \n\n            urlParam.set(urlparam, \"on\");\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.remove(fade);\n                el.classList.add(column_small[0]);\n                el.style.maxWidth = column_small[1];\n                el.classList.add(active);\n            });\n            document.querySelectorAll(`.${show}`).forEach((el) => {\n                el.classList.add(column_small[0]);\n                el.classList.remove(column_full[0]);\n                el.style.maxWidth = column_small[1];\n                el.classList.add(active);\n            });\n            document.querySelectorAll(`.${resize}`).forEach((el) => {\n                el.style.display = \"block\";\n            });\n\n            // works only with one image viewer\n            let viewer = document.querySelector(`.${parent}.${active} .${hide}`);\n            let facs = viewer.querySelectorAll(\"*\")[0];\n            // console.log(facs);\n            facs.style.width = `${viewer.offsetWidth}px`;\n            facs.style.height = variant.image_size;\n            this.classList.add(active);\n        }\n\n        var stateName = variant.opt;\n        var stateParam = urlParam.get(variant.opt);\n        var state = {};\n        state[stateName] = stateParam;\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": href\n        });\n\n    }\n\n    render() {\n        let data = \"conf_image_switch\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let opt = this.getAttribute(\"opt\");\n        let variant = options.variants.find((v) => v.opt === opt);\n        let rendered_element = options.rendered_element;\n        let active = options.active_class;\n        this.innerHTML = `\n            <small><label style=\"padding:.2em;\">${variant.title}:</label></small>\n            <a title=\"${variant.title}\"\n                class=\"${rendered_element.a_class} ${active}\"\n                id=\"${variant.opt}\"\n                data-target=\"${data}\">\n                ${rendered_element.svg}\n            </a>\n        `;\n    }\n\n    attributeChangedCallback() {\n        this.render();\n    }\n\n    disconnectedCallback() {\n        this.childNodes[3].removeEventListener(\"click\", this.viewerSwitch);\n    }\n\n}\n","export class ImageLoader extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\", \"data-type\", \"data-source\", \"pos\"];\n    }\n\n    connectedCallback() {\n        this.render();\n    }\n\n    render() {\n        let data = \"conf_image_loader\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        let url = options.url;\n        let url_param = options.url_param;\n        let pos = this.getAttribute(\"pos\");\n        let data_type = this.getAttribute(\"data-type\");\n        let dataSource = this.getAttribute(\"data-source\");\n        this.innerHTML = `\n            <span id=\"${data_type}_img_${pos}\" data-src=\"${url}${dataSource}${url_param}\">Enable JavaScript to load image!</span>\n        `;\n    }\n\n}\n","const OpenSeadragon = require(\"openseadragon\");\nconst { uptState } = require(\"../../utils/utils\");\n\nconst config = [];\n\nexport class EditionPagination extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\", \"pos\", \"facs\", \"data-type\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        this.childNodes[1].addEventListener(\"click\", this.updateImgPage);\n    }\n\n    updateImgPage() {\n        let data = \"conf_ed_pagination\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n\n        // get urlparam\n        const url = new URL(window.location.href);\n        const urlParam = new URLSearchParams(url.search);\n\n        // get selected href\n        var href = this.getAttribute('href');\n        var dataTab = this.getAttribute('data-tab');\n\n        // update urlparam\n        urlParam.set(options.urlparam, href.replace(/[^0-9]+/, ''));\n        var state = {};\n        state[options.urlparam] = href.replace(/[^0-9]+/, '')\n\n        let citation_url = document.getElementById(options.chg_citation);\n        let hrefState = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": false,\n            \"cit\": citation_url,\n            \"state\": state,\n            \"href\": hrefState\n        });\n        \n        // set all nav links to inactive\n        var link = document.querySelectorAll(`${options.pag_link}`);\n        link.forEach(function(el) {\n            el.classList.remove(options.active_class);\n            el.classList.remove(options.bootstrap_class);\n        });\n\n        // get all nav tabs matching the href and set to active\n        var ref = document.querySelectorAll(`${options.pag_link}[href=\"${href}\"]`);\n        ref.forEach(function(el) {\n            el.classList.add(options.active_class);\n        });\n\n        // active tab\n        var tab = document.querySelectorAll(`${options.pag_tab}[data-tab=\"${dataTab}\"]`);\n        tab.forEach(function(el) {\n            el.classList.remove(options.active_class);\n        });\n        var tab_ref = document.querySelectorAll(`${options.pag_tab}${href}`);\n        tab_ref.forEach(function(el) {\n            el.classList.add(options.active_class);\n            el.classList.add('show');\n        });\n\n        // ###############\n        // load OSD Viewer\n        // ###############\n        let id = this.getAttribute(\"id\");\n        let variant = config.find((v) => v.opt === id);\n        let dataSource = `${options.url}${variant[\"dataSource\"]}${options.url_param}`;\n        let targetID0 = `${variant[\"dataType\"]}_${options.osd_target}_${variant[\"pos\"]}`;\n        let targetID1 = `${variant[\"dataType\"]}_${options.img_source}_${variant[\"pos\"]}`;\n\n        // remove static images\n        if (document.getElementById(targetID1)) {\n            document.getElementById(targetID1).remove();\n        }\n        let target = document.getElementById(targetID0);\n        if ( target.childNodes.length === 0 ) {\n            target.style.height = options.img_size;\n            // OpenSeaDragon Image Viewer\n            let imageURL = {type: 'image', url: dataSource};\n            let viewer = OpenSeadragon({\n                id: targetID0,\n                prefixUrl: 'https://cdnjs.cloudflare.com/ajax/libs/openseadragon/3.1.0/images/',\n                tileSources: imageURL\n            });\n\n            // hide loading spinner if image fully loaded status changes\n            // see issue: https://github.com/openseadragon/openseadragon/issues/1262\n            viewer.addHandler('open', function() {\n                let tiledImage = viewer.world.getItemAt(0);\n                if (tiledImage.getFullyLoaded()) {\n                    hideLoading();\n                } else {\n                    tiledImage.addOnceHandler('fully-loaded-change', hideLoading);\n                }\n            });\n            function hideLoading() {\n                // var container = $(osd_container_id).attr(\"id\");  \n                let spinnerID = \"spinner_\" + targetID0;\n                if ( document.getElementById(spinnerID) ) {\n                    // console.log(spinnerID);\n                    document.getElementById(spinnerID).remove();\n                }\n            };\n        }\n    }\n\n    render() {\n        let data_type = this.getAttribute(\"data-type\");\n        let pos = this.getAttribute(\"pos\");\n        let facs = this.getAttribute(\"facs\");\n        config.push({\n            \"opt\": `${data_type}_link_${pos}`,\n            \"dataType\": data_type,\n            \"dataSource\": facs,\n            \"pos\": pos\n        });\n        this.innerHTML = `\n            <a title=\"Tab ${pos}\"\n                class=\"nav-link pagination-link active\"\n                data-toggle=\"tab\"\n                data-tab=\"paginate\"\n                id=\"${data_type}_link_${pos}\"\n                href=\"#paginate-${pos}\"\n                style=\"border-radius:30px;\">\n                ${pos}\n            </a>\n        `;\n    }\n\n}\n","const config = []\n\nexport class WindowResize extends HTMLElement {\n\n    \"use strict\";\n\n    static get observedAttributes() {\n        return [\"opt\", \"pos\"];\n    }\n\n    connectedCallback() {\n        this.render();\n        this.childNodes[1].childNodes[1].addEventListener(\"mousedown\", this.resize);\n    }\n\n    resize() {\n        var isResizing = true;\n\n        let id = this.getAttribute(\"id\");\n        let variant = config.find((v) => `${v.opt}-${v.pos}` === id);\n        let container = document.getElementById(`container-resize-${variant[\"pos\"]}`);\n        let left_container = document.getElementById(`text-resize-${variant[\"pos\"]}`);\n        let right_container = document.getElementById(`img-resize-${variant[\"pos\"]}`);\n        let handle = document.getElementById(`${variant[\"opt\"]}-${variant[\"pos\"]}`);\n        let viewer = document.getElementById(`viewer-${variant[\"pos\"]}`).childNodes[0];\n        let text = left_container.childNodes[0];\n\n        document.addEventListener('mousemove', function (e) {\n            // we don't want to do anything if we aren't resizing.\n            if (!isResizing) \n                return;\n\n            let offsetLeft = container.offsetWidth - (e.clientX);\n            let offsetRight = container.offsetWidth - handle.value;\n            let w = window.innerWidth;\n            if (handle.value < ((w / 2) - 10)) {\n                left_container.style.maxWidth = `${container.offsetWidth - offsetLeft}px`;\n                right_container.style.maxWidth = `${offsetLeft}px`;\n                viewer.style.width = `${offsetLeft}px`;\n                viewer.style.height = `${offsetLeft}px`;\n            } else if (handle.value > ((w / 2) + 10)) {\n                left_container.style.maxWidth = `${handle.value}px`;\n                text.style.width = `${handle.value}px`;\n                right_container.style.maxWidth = `${offsetRight}px`;\n                viewer.style.width = `${offsetRight}px`;\n                viewer.style.height = `${offsetRight}px`;\n            } else if (handle.value === ((w / 2) + 9) || handle.value === ((w / 2) - 9)) {\n                left_container.style.maxWidth = '50%';\n                text.style.width = '50%';\n                right_container.style.maxWidth = '50%';\n                viewer.style.width = `${right_container.offsetWidth}px`;\n                viewer.style.height = `${right_container.offsetHeight}px`;\n            }\n            \n\n        });\n\n        document.addEventListener('mouseup', function () {\n            // stop resizing\n            isResizing = false;\n        });\n    }\n\n    render() {\n        let w = window.innerWidth;\n        let opt = this.getAttribute(\"opt\");\n        let pos = this.getAttribute(\"pos\");\n        config.push({\n            \"opt\": opt,\n            \"pos\": pos\n        });\n        this.innerHTML = `\n            <div class=\"expand-wrapper text-center hide-reading\">\n                <input title=\"change size\" id=\"${opt}-${pos}\" type=\"range\" min=\"0\" max=\"${w}\" value=\"${w / 2}\" class=\"slider\"/>\n            </div>\n        `;\n    }\n\n}\n","const { addMarkup, removeMarkup, uptState, hideLoading } = require(\"../../utils/utils\");\nconst OpenSeadragon = require(\"openseadragon\");\n\nexport class UrlSearchParamUpdate {\n\n    fullSreen() {\n        let el = document.getElementsByTagName('full-size');\n        let data = \"conf_fullsize\";\n        let opt = el[0].getAttribute(\"opt\");\n        let options = JSON.parse(sessionStorage.getItem(data));\n        if (!options) {\n            alert(\"Please turn on cookies to display content!\")\n        }\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let variant = options.variants.find((v) => v.opt === opt);\n        let hide = variant.hide.class_to_hide;\n        let urlparam = variant.urlparam;\n        let svg_show = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen\" viewBox=\"0 0 16 16\">\n                <path d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\n            </svg>\n        `;\n        let svg_hide = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen-exit\" viewBox=\"0 0 16 16\">\n                <path d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z\"/>\n            </svg>\n        `;\n\n        if (urlParam.get(urlparam) == null) {\n            urlParam.set(urlparam, \"off\");\n        }\n        if (![\"on\", \"off\"].includes(urlParam.get(urlparam))) {\n            console.log(`fullscreen=${urlParam.get(urlparam)} is not a selectable option.`);\n            urlParam.set(urlparam, \"off\");\n        }\n        if (urlParam.get(urlparam) == \"off\") {\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.remove(\"fade\");\n                options.rendered_element.svg = svg_show;\n            });\n        }\n        if (urlParam.get(urlparam) == \"on\") {\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.add(\"fade\");\n                options.rendered_element.svg = svg_hide;\n            });\n        }\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n        \n    }\n\n    fontSize() {\n        let el = document.getElementsByTagName('font-size');\n        let data = \"conf_fontsize\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        if (!options) {\n            alert(\"Please turn on cookies to display content!\")\n        }\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let variants = options.variants;\n        for (let v in variants) {\n            let select = document.getElementById(variants[v].opt);\n            let urlparam = variants[v].urlparam;\n            var citation_url = document.getElementById(variants[v].chg_citation);\n            let p_change = variants[v].paragraph;\n            let p_class = variants[v].p_class;\n            let size = variants[v].sizes;\n            var css_class = variants[v].css_class;\n            if (urlParam.get(urlparam) == null) {\n                urlParam.set(urlparam, \"default\");\n            }\n            if (!Object.values(size).includes(urlParam.get(urlparam))) {\n                console.log(`fontsize=${urlParam.get(urlparam)} is not a selectable option.`);\n                urlParam.set(urlparam, \"default\");\n            } else {\n                let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n                if (urlParam.get(urlparam) !== \"default\") {\n                    var new_value = css_class + urlParam.get(urlparam);\n                } else {\n                    var new_value = urlParam.get(urlparam);\n                }\n                select.value = new_value;\n                paragraph.forEach((el) => {\n                    for (let s in size) {\n                        if (size[s] !== \"default\") {\n                            el.classList.remove(css_class + size[s]);   \n                        } \n                    }\n                    if(new_value !== \"default\") {\n                        el.classList.add(new_value);\n                    }\n                });\n                \n            } \n        }\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n        \n    }\n\n    fontFamily() {\n        let el = document.getElementsByTagName('font-family');\n        let data = \"conf_font_family\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        if (!options) {\n            alert(\"Please turn on cookies to display content!\")\n        }\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n        let variants = options.variants;\n        for (let v in variants) {\n            let select = document.getElementById(variants[v].opt);\n            var citation_url = document.getElementById(variants[v].chg_citation);\n            let urlparam = variants[v].urlparam;\n            let p_change = variants[v].paragraph;\n            let p_class = variants[v].p_class;\n            let family = variants[v].fonts;\n            if (urlParam.get(urlparam) == null) {\n                urlParam.set(urlparam, \"default\");\n            }\n            if (!Object.values(family).includes(urlParam.get(urlparam))) {\n                console.log(`font=${urlParam.get(urlparam)} is not a selectable option.`);\n                urlParam.set(urlparam, \"default\");\n            } else {\n                let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n                if (urlParam.get(urlparam) !== \"default\") {\n                    var new_value = urlParam.get(urlparam);\n                } else {\n                    var new_value = urlParam.get(urlparam);\n                }\n                select.value = new_value;\n                paragraph.forEach((el) => {\n                    for (let f in family) {\n                        if (family[f] !== \"default\") {\n                            el.classList.remove(family[f].toLowerCase());   \n                        } \n                    }\n                    if(new_value !== \"default\") {\n                        el.classList.add(new_value.toLowerCase());\n                    }\n                });\n                \n            } \n        }\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n        \n    }\n\n    viewerSwitch() {\n\n        let el = document.getElementsByTagName('image-switch');\n        let data = \"conf_image_switch\";\n        let opt = el[0].getAttribute(\"opt\");\n        let options = JSON.parse(sessionStorage.getItem(data));\n        if (!options) {\n            alert(\"Please turn on cookies to display content!\")\n        }\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n\n        // let opt = options\n        let variant = options.variants.find((v) => v.opt === opt);\n        let active = options.active_class;\n        let hide = variant.hide.class_to_hide;\n        let show = variant.hide.class_to_show;\n        let parent = variant.hide.class_parent;\n        let urlparam = variant.urlparam;\n        let fade = variant.fade;\n        let column_small = [variant.column_small[\"class\"], variant.column_small[\"percent\"]];\n        let column_full = [variant.column_full[\"class\"], variant.column_full[\"percent\"]];\n        if (urlParam.get(urlparam) == null) {\n            urlParam.set(urlparam, \"on\");\n        }\n        if (![\"on\", \"off\"].includes(urlParam.get(urlparam))) {\n            console.log(`image=${urlParam.get(urlparam)} is not a selectable option.`);\n            urlParam.set(urlparam, \"on\");\n        }\n        if (urlParam.get(urlparam) == \"on\") {\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.remove(fade);\n                el.classList.add(column_small[0]);\n                el.style.maxWidth = column_small[1];\n                el.classList.add(active);\n            });\n            document.querySelectorAll(`.${show}`).forEach((el) => {\n                el.classList.add(column_small[0]);\n                el.classList.remove(column_full[0]);\n                el.style.maxWidth = column_small[1];\n                el.classList.add(active);\n            });\n            document.getElementById(opt).classList.add(active); \n        }\n        if (urlParam.get(urlparam) == \"off\") {\n            document.querySelectorAll(`.${hide}`).forEach((el) => {\n                el.classList.add(fade);\n                el.classList.remove(column_small[0]);\n                el.style.maxWidth = column_full[1];\n                el.classList.remove(active);\n            });\n            document.querySelectorAll(`.${show}`).forEach((el) => {\n                el.classList.remove(column_small[0]);\n                el.classList.add(column_full[0]);\n                el.style.maxWidth = column_full[1];\n                el.classList.remove(active);\n            });\n\n            // works only with one image viewer\n            const viewer = document.querySelector(`.${parent}.${active} .${hide}`);\n            const facs = viewer.querySelectorAll(\"*\")[0];\n            facs.style.width = `${viewer.offsetWidth}px`;\n            facs.style.height = variant.image_size;\n            document.getElementById(opt).classList.remove(active); \n        }\n\n        let citation_url = document.getElementById(variant.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n        \n    }\n\n    textFeatures() {\n        let data = \"conf_annotation_slider\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n        if (!options) {\n            alert(`Please turn on cookies to display content.\\n\n                Or check if configuration files path match data-target and data-path property.`)\n        }\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n        var variantAll = options.variants.filter((v) => v.features.all === true);\n        let variants = options.variants.filter((v) => v.features.all === false);\n        let wrg_ft = options.variants.filter((v) => typeof v.features.all !== \"boolean\");\n        if (wrg_ft) {\n            for (let w of wrg_ft) {\n                console.log(`Type of variant ${w.opt} config. \"features.all\" must be boolean (true or false)`);\n            }\n        }\n        let style = options.span_element;\n        let active = options.active_class;\n        let count_active = 0;\n        let count = 0;\n        for (let v in variants) {\n            if (urlParam.get(variants[v].opt) === null) {\n                urlParam.set(variants[v].opt, \"off\");\n            }\n            else if (![\"on\", \"off\"].includes(urlParam.get(variants[v].opt))) {\n                console.log(`${variants[v].opt}=${urlParam.get(variants[v].opt)} is not a selectable option.`);\n                urlParam.set(variants[v].opt, \"off\");\n            }\n            else if (urlParam.get(variants[v].opt) === \"on\") {\n                count_active += 1;\n                let color = variants[v].color;\n                let html_class = variants[v].html_class;\n                let css_class = variants[v].css_class;\n                let hide = variants[v].hide;\n                let selected = addMarkup(html_class, css_class, color, hide, style);\n                let slider = document.getElementById(variants[v].opt_slider);\n                slider.setAttribute(\"data\", selected);\n                count += parseInt(selected);\n                slider.classList.add(\"slider-number\");\n                slider.classList.add(color);\n                if (document.getElementById(variants[v].opt).checked === false) {\n                    document.getElementById(variants[v].opt).checked = true;\n                    document.getElementById(variants[v].opt).classList.add(active);\n                }\n            }\n            else if (urlParam.get(variants[v].opt) === \"off\") {\n                let color = variants[v].color;\n                let html_class = variants[v].html_class;\n                let css_class = variants[v].css_class;\n                let hide = variants[v].hide;\n                let selected = removeMarkup(html_class, css_class, color, hide, style);\n                let slider = document.getElementById(variants[v].opt_slider);\n                slider.classList.remove(color);\n                slider.removeAttribute(\"data\");\n                slider.classList.remove(\"slider-number\");\n                if (document.getElementById(variants[v].opt).checked === true) {\n                    document.getElementById(variants[v].opt).checked = false;\n                    document.getElementById(variants[v].opt).classList.remove(active);\n                }\n            }\n            if (variants[v].chg_citation) {\n                var citation_url = document.getElementById(variants[v].chg_citation);\n            }\n        }\n        if (count_active == variants.length) {\n            if (document.getElementById(variantAll[0].opt).checked === false) {\n                let slider_all = document.getElementById(variantAll[0].opt);\n                slider_all.checked = true;\n                slider_all.classList.add(active);\n                slider_all.classList.add(\"slider-number\");\n                slider_all.setAttribute(\"data\", String(count));\n            }\n        } else {\n            if (document.getElementById(variantAll[0].opt).checked === true) {\n                let slider_all = document.getElementById(variantAll[0].opt);\n                slider_all.checked = false;\n                slider_all.classList.remove(active);\n                slider_all.removeAttribute(\"data\");\n                slider_all.classList.remove(\"slider-number\");\n            }\n        }\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n    }\n\n    pageUrl() {\n\n        // get session cookies as parameters\n        let data = \"conf_image_loader\";\n        let options = JSON.parse(sessionStorage.getItem(data));\n\n        // get url params\n        let url = new URL(location.href);\n        let urlParam = new URLSearchParams(url.search);\n        var _current = urlParam.get(options.urlparam);\n        // const item = document.querySelector('.pagination .nav-tabs .nav-item .nav-link.active');\n        // const href = item.getAttribute('href').replace('#', '');\n        if (_current == null) {\n            urlParam.set(options.urlparam, \"1\");\n            _current = urlParam.get(options.urlparam);\n        }\n\n        // deactivate all tabs\n        let tabs = document.querySelectorAll(`${options.pag_tab}[data-tab=\"paginate\"]`);\n        tabs.forEach(function(el) {\n            el.classList.remove(options.active_class);\n            el.classList.add(options.inactive_class);\n        });\n\n        // deactivate pagination linksshow metadata\n\n        let link = document.querySelectorAll(`${options.pag_link}`);\n        let pgOpt = [];\n        link.forEach(function(el) {\n            el.classList.remove(options.active_class);\n            el.classList.remove(options.bootstrap_class);\n            let el_id = el.getAttribute(\"id\");\n            if (el_id) {\n                let idn = el_id.split('_');\n                let idNo = idn[idn.length - 1];\n                pgOpt.push(idNo);\n            }\n        });\n\n        // check if page url param is valid\n        if (!pgOpt.includes(_current)) {\n            console.log(`${options.urlparam}=${_current} is not a selectable option.`);\n            urlParam.set(options.urlparam, \"1\");\n            _current = urlParam.get(options.urlparam);\n        }\n\n        // activate tab base on urlparams\n        let tab = document.getElementById(`paginate-${_current}`);\n        tab.classList.remove(options.inactive_class);\n        tab.classList.add(options.active_class);\n        tab.classList.add(options.bootstrap_class); \n\n        // get all nav tabs matching href tabs based on urlparams and set to active\n        let linkActive = document.querySelectorAll(`${options.pag_link}[href=\"#paginate-${_current}\"]`);\n        linkActive.forEach(function(el) {\n            el.classList.add(options.active_class);\n            el.classList.add(options.bootstrap_class);\n        });\n\n        // create OSD container\n        let i = 0;\n        while (i < options.img_types.length) {\n            if (document.getElementById(`${options.img_types[i]}_${options.osd_target}_${_current}`)) {\n                var _image_type = options.img_types[i];\n            }\n            i++;\n        }\n        let _osd_container_id = `${_image_type}_${options.osd_target}_${_current}`;\n        let _osd_container_id2 = `${_image_type}_${options.img_source}_${_current}`;\n        let osd_container = document.getElementById(_osd_container_id);\n        let osd_container_2 = document.getElementById(_osd_container_id2);\n        if ( osd_container_2 ) {\n            osd_container.style.height = options.img_size;\n            let image = document.getElementById(`${_image_type}_img_${_current}`);\n            let image_src = image.getAttribute('data-src');\n            let image_url = {type: 'image', url: image_src};\n            let viewer = OpenSeadragon({\n                id: _osd_container_id,\n                prefixUrl: 'https://cdnjs.cloudflare.com/ajax/libs/openseadragon/3.1.0/images/',\n                tileSources: image_url\n            });\n\n            // hides static images\n            osd_container_2.remove();\n    \n            // hide loading spinner if image fully loaded status changes\n            // see issue: https://github.com/openseadragon/openseadragon/issues/1262\n            viewer.addHandler('open', function() {\n                let tiledImage = viewer.world.getItemAt(0);\n                if (tiledImage.getFullyLoaded()) {\n                    hideLoading(_osd_container_id);\n                } else {\n                    tiledImage.addOnceHandler('fully-loaded-change', function() {\n                        let spinnerID2 = \"spinner_\" + _osd_container_id;\n                        if ( document.getElementById(spinnerID2) ) {\n                            document.getElementById(spinnerID2).remove();\n                        }\n                    });\n                }\n            });\n        }\n\n        // update state\n        let citation_url = document.getElementById(options.chg_citation);\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n            \"hist\": true,\n            \"cit\": citation_url,\n            \"state\": false,\n            \"href\": href\n        });\n\n    }\n\n}","export class SetDataCookie {\n\n    constructor(name, config) {\n        this.name = name;\n        this.config = config;\n    }\n\n    build() {\n        sessionStorage.setItem(this.name, JSON.stringify(this.config));\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(2);\n"],"names":["removeMarkup","html_class","css_class","color","hide","style","selected","document","querySelectorAll","forEach","el","css","classList","contains","remove","add","display","String","length","addMarkup","uptState","options","hist","window","history","replaceState","href","state","pushState","cit","innerHTML","location","hostname","pathname","setAttribute","hideLoading","id","spinnerID","getElementById","$","fullScreenApi","OpenSeadragon","Viewer","version","versionStr","major","parseInt","minor","revision","canvasElement","class2type","toString","Object","prototype","hasOwn","hasOwnProperty","isFunction","obj","type","isArray","Array","isWindow","call","isPlainObject","nodeType","constructor","lastKey","key","undefined","isEmptyObject","name","freezeObject","freeze","supportsCanvas","createElement","getContext","isCanvasTainted","canvas","isTainted","getImageData","e","supportsAddEventListener","documentElement","addEventListener","supportsRemoveEventListener","removeEventListener","supportsEventListenerOptions","supported","capture","once","passive","getCurrentPixelDensityRatio","context","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Math","max","pixelDensityRatio","extend","src","copy","copyIsArray","clone","target","arguments","deep","i","this","DEFAULT_SETTINGS","xmlPath","tileSources","tileHost","initialPage","crossOriginPolicy","ajaxWithCredentials","loadTilesWithAjax","ajaxHeaders","splitHashDataForPost","panHorizontal","panVertical","constrainDuringPan","wrapHorizontal","wrapVertical","visibilityRatio","minPixelRatio","defaultZoomLevel","minZoomLevel","maxZoomLevel","homeFillsViewer","clickTimeThreshold","clickDistThreshold","dblClickTimeThreshold","dblClickDistThreshold","springStiffness","animationTime","gestureSettingsMouse","dragToPan","scrollToZoom","clickToZoom","dblClickToZoom","pinchToZoom","zoomToRefPoint","flickEnabled","flickMinSpeed","flickMomentum","pinchRotate","gestureSettingsTouch","gestureSettingsPen","gestureSettingsUnknown","zoomPerClick","zoomPerScroll","zoomPerSecond","blendTime","alwaysBlend","autoHideControls","immediateRender","minZoomImageRatio","maxZoomPixelRatio","smoothTileEdgesMinZoom","iOSDevice","navigator","userAgent","indexOf","isIOSDevice","pixelsPerWheelLine","pixelsPerArrowPress","autoResize","preserveImageSizeOnResize","minScrollDeltaTime","rotationIncrement","showSequenceControl","sequenceControlAnchor","preserveViewport","preserveOverlays","navPrevNextWrap","showNavigationControl","navigationControlAnchor","showZoomControl","showHomeControl","showFullPageControl","showRotationControl","showFlipControl","controlsFadeDelay","controlsFadeLength","mouseNavEnabled","showNavigator","navigatorId","navigatorPosition","navigatorSizeRatio","navigatorMaintainSizeRatio","navigatorTop","navigatorLeft","navigatorHeight","navigatorWidth","navigatorAutoResize","navigatorAutoFade","navigatorRotate","navigatorBackground","navigatorOpacity","navigatorBorderColor","navigatorDisplayRegionColor","degrees","flipped","opacity","preload","compositeOperation","imageSmoothingEnabled","placeholderFillStyle","subPixelRoundingForTransparency","showReferenceStrip","referenceStripScroll","referenceStripElement","referenceStripHeight","referenceStripWidth","referenceStripPosition","referenceStripSizeRatio","collectionRows","collectionColumns","collectionLayout","collectionMode","collectionTileSize","collectionTileMargin","imageLoaderLimit","maxImageCacheCount","timeout","useCanvas","prefixUrl","navImages","zoomIn","REST","GROUP","HOVER","DOWN","zoomOut","home","fullpage","rotateleft","rotateright","flip","previous","next","debugMode","debugGridColor","silenceMultiImageWarnings","SIGNAL","delegate","object","method","args","apply","BROWSERS","UNKNOWN","IE","FIREFOX","SAFARI","CHROME","OPERA","EDGE","CHROMEEDGE","SUBPIXEL_ROUNDING_OCCURRENCES","NEVER","ONLY_AT_REST","ALWAYS","_viewers","Map","getViewer","element","get","getElement","getElementPosition","isFixed","offsetParent","result","Point","getOffsetParent","getElementStyle","position","x","offsetLeft","y","offsetTop","plus","getPageScroll","getElementOffset","docElement","win","doc","ownerDocument","boundingRect","top","left","getBoundingClientRect","defaultView","parentWindow","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","getElementSize","clientWidth","clientHeight","currentStyle","getComputedStyle","getCssPropertyWithVendorPrefix","property","memo","prefixes","suffix","capitalizeFirstLetter","prop","string","charAt","toUpperCase","slice","positiveModulo","number","modulo","pointInElement","point","offset","size","getMousePosition","event","pageX","pageY","Error","clientX","body","clientY","setPageScroll","scroll","scrollTo","originalScroll","currentScroll","getWindowSize","innerWidth","innerHeight","makeCenteredNode","wrappers","makeNeutralElement","height","width","verticalAlign","textAlign","appendChild","tagName","background","border","margin","padding","now","Date","getTime","makeTransparentImage","img","setElementOpacity","usesAlpha","ieFilter","Browser","alpha","round","filter","setElementTouchActionNone","touchAction","msTouchAction","setElementPointerEvents","value","pointerEvents","setElementPointerEventsNone","addClass","className","array","searchElement","fromIndex","pivot","TypeError","abs","removeClass","oldClasses","newClasses","split","push","join","normalizeEventListenerOptions","addEvent","eventName","handler","attachEvent","removeEvent","detachEvent","cancelEvent","preventDefault","eventIsCanceled","defaultPrevented","stopEvent","stopPropagation","createCallback","initialArgs","concat","getUrlParameter","URLPARAMS","getUrlProtocol","url","match","protocol","toLowerCase","createAjaxRequest","local","supportActiveX","ActiveXObject","XMLHttpRequest","makeAjaxRequest","onSuccess","onError","withCredentials","headers","responseType","postData","success","error","request","onreadystatechange","readyState","status","console","open","headerName","setRequestHeader","send","message","jsonp","script","head","getElementsByTagName","jsonpCallback","callbackName","replace","callbackParam","param","callback","test","response","async","scriptCharset","charset","onload","_","isAbort","parentNode","removeChild","insertBefore","firstChild","createFromDZI","parseXml","DOMParser","parseFromString","xmlDoc","loadXML","parseJSON","JSON","parse","imageFormatSupported","extension","FILEFORMATS","setImageFormatsSupported","formats","nullfunction","msg","log","debug","info","warn","assert","vendor","bmp","jpeg","jpg","png","tif","wdp","ver","appVersion","ua","appName","parseFloat","substring","lastIndexOf","RegExp","exec","$1","part","sep","parts","search","decodeURIComponent","w","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","iIntervalId","aAnimQueue","processing","iRequestId","setInterval","time","temp","shift","clearInterval","requestId","j","splice","supportsFullScreen","isFullScreen","getFullScreenElement","requestFullScreen","exitFullScreen","cancelFullScreen","fullScreenEventName","fullScreenErrorEventName","exitFullscreen","fullscreenElement","requestFullscreen","msExitFullscreen","msFullscreenElement","msRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitRequestFullscreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozRequestFullScreen","EventSource","events","addOnceHandler","userData","times","self","count","onceHandler","removeHandler","addHandler","handlers","numberOfHandlers","removeAllHandlers","eventType","getHandler","source","eventSource","raiseEvent","eventArgs","MOUSETRACKERS","THIS","MouseTracker","hash","random","stopDelay","preProcessEventHandler","contextMenuHandler","enterHandler","leaveHandler","exitHandler","overHandler","outHandler","pressHandler","nonPrimaryPressHandler","releaseHandler","nonPrimaryReleaseHandler","moveHandler","scrollHandler","clickHandler","dblClickHandler","dragHandler","dragEndHandler","pinchHandler","stopHandler","keyDownHandler","keyUpHandler","keyHandler","focusHandler","blurHandler","_this","click","onClick","dblclick","onDblClick","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","focus","onFocus","blur","onBlur","contextmenu","onContextMenu","wheel","onWheel","mousewheel","onMouseWheel","DOMMouseScroll","MozMousePixelScroll","losecapture","onLoseCapture","mouseenter","onPointerEnter","mouseleave","onPointerLeave","mouseover","onPointerOver","mouseout","onPointerOut","mousedown","onPointerDown","mouseup","onPointerUp","mousemove","onPointerMove","touchstart","onTouchStart","touchend","onTouchEnd","touchmove","onTouchMove","touchcancel","onTouchCancel","gesturestart","onGestureStart","gesturechange","onGestureChange","gotpointercapture","onGotPointerCapture","lostpointercapture","onLostPointerCapture","pointerenter","pointerleave","pointerover","pointerout","pointerdown","pointerup","pointermove","pointercancel","onPointerCancel","pointerupcaptured","onPointerUpCaptured","pointermovecaptured","onPointerMoveCaptured","tracking","activePointersLists","lastClickPos","dblClickTimeOut","pinchGPoints","lastPinchDist","currentPinchDist","lastPinchCenter","currentPinchCenter","sentDragEvent","hasGestureHandlers","hasScrollHandler","havePointerEvents","startDisabled","setTracking","destroy","stopTracking","isTracking","track","tracker","subscribeEvents","wheelEventName","clearTrackedPointers","startTracking","getActivePointersListByType","list","len","GesturePointList","getActivePointerCount","getLength","trackerPoints","intervalId","lastTime","_generateGuid","_doTracking","divElement","isInIframe","canAccessEvents","pointsList","gPoints","gPointsToRemove","pointerListCount","asArray","stopTrackingPointer","pop","getCaptureEventParams","pointerType","upName","upHandler","moveName","touchendcaptured","touchmovecaptured","releasePointer","gPoint","eventParams","cachedGPoint","havePointerCapture","getById","captured","releasePointerCapture","releaseCapture","captureElement","updatePointerCaptured","getPointerId","pointerId","mousePointerId","getPointerType","getIsPrimary","isPrimary","getMouseAbsolute","getMouseRelative","getPointRelativeToAbsolute","minus","getCenterPoint","point1","point2","eventInfo","originalEvent","isEmulated","preProcessEvent","preventGesture","keyCode","charCode","ctrl","ctrlKey","shiftKey","alt","altKey","meta","metaKey","handleWheelEvent","simulatedEvent","srcElement","deltaMode","deltaX","deltaZ","deltaY","wheelDelta","detail","nDelta","isTouchEvent","touchCount","changedTouches","touches","updatePointerEnter","identifier","currentPos","currentTime","updatePointerDown","updatePointerUp","updatePointerLeave","updatePointerMove","updatePointerCancel","updateGPoint","insideElementPressed","buttons","pointers","buttonDownAny","updatePointerOver","updatePointerOut","implicitlyCaptured","button","shouldCapture","setPointerCapture","setCapture","capturePointer","handlePointerUp","shouldReleaseCapture","handlePointerMove","startTrackingPointer","speed","direction","contactPos","contactTime","lastPos","listLength","trackedGPoint","removeContact","removeById","eventPhase","isStoppable","isCancelable","getEventProcessDefaults","isCaptured","captureCount","insideElement","dispatchEventObj","buttonChanged","originalTarget","addContact","gesturePointVelocityTracker","addPoint","contacts","distanceTo","releasePoint","releaseTime","quick","wasCaptured","removePoint","insideElementReleased","clicks","setTimeout","clearTimeout","gPointArray","delta","stopTimeOut","originalMoveEvent","handlePointerStop","gesturePoints","lastCenter","center","lastDistance","distance","trackPoint","elapsedTime","atan2","guid","onmousewheel","PointerEvent","_gPoints","gp","getByIndex","index","getPrimary","ControlAnchor","NONE","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","ABSOLUTE","Control","container","parent","anchor","attachToViewer","autoFade","wrapper","isVisible","setVisible","visible","setOpacity","getControlIndex","dock","controls","ControlDock","layout","layouts","floor","onsubmit","right","bottom","topleft","topright","bottomright","bottomleft","addControl","controlOptions","div","paddingRight","paddingTop","paddingBottom","paddingLeft","removeControl","clearControls","areControlsEnabled","setControlsEnabled","enabled","Placement","CENTER","TOP","RIGHT","BOTTOM","LEFT","properties","isLeft","isHorizontallyCentered","isRight","isTop","isVerticallyCentered","isBottom","nextHash","_getSafeElemSize","oElement","getOverlayObject","viewer","overlay","Overlay","px","rect","viewport","imageToViewportRectangle","Rect","py","placement","onDraw","checkResize","rotationMode","getOverlayIndex","overlays","scheduleUpdate","updateFunc","scheduleControlsFade","controlsShouldFade","controlsFadeBeginTime","min","updateControlsFade","beginControlsAutoHide","abortControlsAutoHide","onCanvasContextMenu","onCanvasKeyDown","canvasKeyDownEventArgs","preventDefaultAction","preventVerticalPan","preventHorizontalPan","zoomBy","panBy","deltaPointsFromPixels","applyConstraints","onCanvasKeyPress","canvasKeyPressEventArgs","goHome","setRotation","toggleFlip","goToPreviousPage","goToNextPage","onCanvasClick","gestureSettings","activeElement","getContainerSize","canvasClickEventArgs","gestureSettingsByDeviceType","pointFromPixel","onCanvasDblClick","canvasDblClickEventArgs","onCanvasDrag","canvasDragEventArgs","negate","centerSpringX","centerSpringY","bounds","getBounds","constrainedBounds","getConstrainedBounds","onCanvasDragEnd","canvasDragEndEventArgs","amplitudeX","cos","amplitudeY","sin","pixelFromPoint","getCenter","panTo","onCanvasEnter","onCanvasLeave","onCanvasPress","onCanvasRelease","onCanvasNonPrimaryPress","onCanvasNonPrimaryRelease","onCanvasPinch","centerPt","panByPt","canvasPinchEventArgs","preventDefaultPanAction","preventDefaultZoomAction","preventDefaultRotateAction","angle1","angle2","getRotation","PI","onCanvasScroll","canvasScrollEventArgs","factor","thisScrollTime","_lastScrollTime","pow","onContainerEnter","mouseInside","onContainerLeave","animating","updateMulti","_opening","containerSize","prevContainerSize","equals","resizeRatio","zoom","getZoom","resize","zoomTo","oldBounds","fitBoundsWithConstraints","forceRedraw","viewportChange","update","animated","world","referenceStrip","currentAnimating","isAnimationFinished","needsDraw","imageLoader","clear","drawer","draw","drawWorld","_drawOverlays","updateOnce","isOpen","_updateRequestId","resolveUrl","prefix","beginZoomingIn","lastZoomTime","zoomFactor","zooming","scheduleZoom","beginZoomingOut","endZooming","doZoom","deltaTime","adjustedFactor","doSingleZoomIn","doSingleZoomOut","lightUp","buttonGroup","emulateEnter","emulateLeave","onHome","onFullScreen","isFullPage","setFullPage","setFullScreen","fullPageButton","onRotateLeft","currRotation","onRotateRight","onFlip","config","overlaysContainer","previousBody","customControls","collectionViewport","collectionDrawer","profiler","fsBoundsDelta","group","fullPage","onfullscreenchange","_sequenceIndex","_firstOpen","_loadQueue","currentOverlays","_updatePixelDensityRatioBind","getString","_showMessage","overflow","tabIndex","bodyWidth","bodyHeight","bodyOverflow","docOverflow","innerTracker","outerTracker","toolbar","bindStandardControls","World","getItemAt","getItemCount","_setContentBounds","getHomeBounds","getContentFactor","Viewport","margins","viewportMargins","ImageLoader","jobLimit","tileCache","TileCache","Drawer","canRotate","rotateLeft","rotateRight","_addUpdatePixelDensityRatioEvent","Navigator","sizeRatio","maintainSizeRatio","borderColor","displayRegionColor","sequenceMode","bindSequenceControls","setImageSmoothingEnabled","set","openDzi","dzi","openTileSource","tileSource","close","isNaN","addReferenceStrip","_updateSequenceButtons","failEvent","expected","successes","failures","checkCompletion","doOne","collectionImmediately","originalSuccess","addOverlay","originalError","addTiledImage","clearOverlays","removeAll","_removeUpdatePixelDensityRatioEvent","customButtons","paging","delete","isMouseNavEnabled","setMouseNavEnabled","setDebugMode","nodes","bodyStyle","docStyle","fullPageEventArgs","elementSize","pageScroll","elementMargin","elementPadding","bodyMargin","docMargin","bodyPadding","docPadding","docWidth","docHeight","bodyDisplay","prevElementParent","prevNextSibling","nextSibling","prevElementWidth","prevElementHeight","childNodes","restoreScrollCounter","restoreScroll","fullScreen","fullScreeEventArgs","fullPageStyleWidth","fullPageStyleHeight","onFullScreenChange","visibility","replaceItem","_hideMessage","myQueueItem","raiseAddItemFailed","refreshWorld","theItem","arrange","immediately","rows","columns","tileSize","tileMargin","setAutoRefigureSizes","processReadyItems","queueItem","tiledImage","optionsClone","newIndex","getIndexOfItem","removeItem","TiledImage","fitBounds","fitBoundsPlacement","clip","originalTiledImage","addItem","item","imgOptions","successCallback","failCallback","tileSourceJ","waitUntilReady","originalTileSource","ready","TileSource","getTileUrl","customTileSource","$TileSource","determineType","configure","getTileSourceImplementation","addSimpleImage","opts","addLayer","getLayerAtLevel","level","getLevelOfLayer","getLayersCount","setLayerLevel","setItemIndex","removeLayer","onFocusHandler","onBlurHandler","onNextHandler","onPreviousHandler","useGroup","previousButton","nextButton","Button","tooltip","srcRest","srcGroup","srcHover","srcDown","onRelease","disable","ButtonGroup","pagingControl","beginZoomingInHandler","endZoomingHandler","doSingleZoomInHandler","beginZoomingOutHandler","doSingleZoomOutHandler","onHomeHandler","onFullScreenHandler","onRotateLeftHandler","onRotateRightHandler","onFlipHandler","zoomInButton","zoomOutButton","homeButton","rotateLeftButton","rotateRightButton","flipButton","onPress","onEnter","onExit","navControl","currentPage","goToPage","page","setFocus","drawHTML","updateOverlay","removeOverlay","getOverlayById","enable","createTextNode","messageDiv","_cancelPendingImages","removeReferenceStrip","ReferenceStrip","_updatePixelDensityRatio","bind","previusPixelDensityRatio","currentPixelDensityRatio","resetItems","isAnimating","_setTransformRotate","setElementTransform","rule","webkitTransform","mozTransform","msTransform","oTransform","transform","viewerSize","navigatorSize","borderWidth","rotate","displayRegionContainer","displayRegion","fudge","totalBorderWidths","fontSize","cssFloat","styleFloat","zIndex","cursor","_resizeWithViewer","setWidth","setHeight","oldViewerSize","elementArea","oldContainerSize","previousIndex","theirItem","myItem","_getMatchingItem","updateSize","setFlip","setDisplayTransform","getFlip","newWidth","newHeight","sqrt","getBoundsNoRotate","pixelFromPointNoRotate","getTopLeft","getBottomRight","original","matchBounds","_matchBounds","_originalForNavigator","_matchOpacity","_matchCompositeOperation","setPosition","setClip","getClip","setCompositeOperation","I18N","Errors","Dzc","Dzi","Xml","ImageFormat","Security","Status","OpenFailed","Tooltips","FullPage","Home","ZoomIn","ZoomOut","NextPage","PreviousPage","RotateLeft","RotateRight","Flip","props","setString","divide","squaredDistanceTo","func","angle","tileOverlap","minLevel","maxLevel","aspectRatio","dimensions","_tileWidth","_tileHeight","getImageInfo","tileWidth","tileHeight","ceil","getTileSize","getTileWidth","getTileHeight","setMaxLevel","_memoizeLevelScale","getLevelScale","levelScaleCache","_level","getNumTiles","scale","getPixelRatio","imageSizeScaled","rx","ry","getClosestLevel","tiles","getTileAtPoint","validPoint","widthScaled","pixelX","pixelY","getTileBounds","isSource","dimensionsScaled","sx","sy","readySource","urlParts","filename","lastDot","hashIdx","substr","data","xhr","statusText","responseText","responseXML","processResponse","exc","supports","getTilePostData","getTileAjaxHeaders","getTileHashKey","stringify","tileExists","numTiles","configureFromObject","configuration","rectData","imageData","Image","tilesUrl","Url","fileFormat","Format","sizeData","Size","dispRectData","DisplayRect","Width","Height","TileSize","Overlap","displayRects","X","Y","MinLevel","MaxLevel","DziTileSource","_levelRects","ns","xmlns","localName","namespaceURI","dispRectNodes","dispRectNode","rectNode","sizeNode","root","rootName","getElementsByTagNameNS","getAttribute","nodeValue","configureFromXML","queryParams","xMin","yMin","xMax","yMax","rects","canBeTiled","profileLevel","profile","isLevel0","hasCanoncicalSizeFeature","extraFeatures","constructLevels","levels","sizes","tileFormat","sort","a","b","parseXML10","node","trim","Number","nodeName","IIIFTileSource","tileSizePerScaleFactor","tile_width","tile_height","scale_factors","scaleFactors","t","sf","scaleFactor","shortDim","tileOptions","smallerTiles","c","emulateLegacyImagePyramid","maxScaleFactor","LOG2E","preferredFormats","f","configureFromXml10","levelScale","NaN","iiifTileSizeWidth","iiifTileSizeHeight","iiifRegion","iiifTileX","iiifTileY","iiifTileW","iiifTileH","iiifSize","iiifSizeW","iiifSizeH","iiifQuality","levelWidth","levelHeight","__testonly__","OsmTileSource","TmsTileSource","bufferedWidth","bufferedHeight","yTiles","ZoomifyTileSource","currentImageSize","imageSizes","gridSize","_getGridSize","reverse","_calculateAbsoluteTileNumber","num","z","LegacyTileSource","files","file","filtered","filterFiles","dataUrl","conf","ImageTileSource","buildPyramid","image","_image","crossOrigin","useCredentials","naturalWidth","naturalHeight","_buildLevels","getContext2D","context2D","_freeupCanvasMemory","currentWidth","currentHeight","bigCanvas","bigContext","drawImage","smallCanvas","smallContext","TileSourceCollection","scheduleFade","shouldFade","fadeBeginTime","fadeLength","imgGroup","updateFade","inTo","newState","disabled","ButtonState","currentState","stopFading","imgHover","imgDown","outTo","fadeDelay","beginFading","imgRest","title","notifyGroupEnter","notifyGroupExit","labelText","newTopLeft","getTopRight","getBottomLeft","fromSummits","topLeft","topRight","bottomLeft","diff","radians","atan","getAspectRatio","getSize","other","translate","union","thisBoundingBox","getBoundingBox","otherBoundingBox","intersection","EPSILON","intersectionPoints","thisTopLeft","containsPoint","thisTopRight","thisBottomLeft","thisBottomRight","rectTopLeft","rectTopRight","rectBottomLeft","rectBottomRight","thisSegments","_getSegments","rectSegments","thisSegment","rectSegment","intersect","getIntersection","d","abVector","cdVector","denom","s","minX","maxX","minY","maxY","k","bottomRight","getIntegerBoundingBox","boundingBox","epsilon","topDiff","leftDiff","onStripClick","panelWidth","panelHeight","onStripDrag","dragging","marginLeft","marginTop","scrollWidth","scrollHeight","loadPanels","onStripScroll","strip","panelSize","activePanelsStart","activePanelsEnd","miniViewer","panels","activePanel","miniTileSource","referenceStripThumbnailUrl","miniViewers","onStripEnter","marginBottom","onStripLeave","marginRight","querySelector","currentSelected","Spring","initial","exponential","_exponential","current","start","_logValue","resetTo","springTo","shiftBy","setExponential","startValue","targetValue","stiffness","currentValue","exp","oldValue","isAtTargetValue","ImageJob","jobId","errorMsg","selfAbort","abort","finish","onabort","onerror","loadWithAjax","blb","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","URL","webkitURL","createObjectURL","successful","jobQueue","jobsInProgress","addJob","newJob","job","loader","completeJob","Tile","exists","sourceBounds","cacheKey","loaded","loading","imgElement","blendStart","squaredDistance","beingDrawn","lastTouchTime","isRightMost","isBottomMost","_hasTransparencyChannel","cacheImageRecord","getImage","cloneNode","msInterpolationMode","drawCanvas","drawingHandler","shouldRoundPositionAndSize","rendered","sourceWidth","sourceHeight","getRenderedContext","save","globalAlpha","clearRect","tile","restore","getScaleForEdgeSmoothing","getTranslationForEdgeSmoothing","canvasSize","sketchCanvasSize","unload","OverlayPlacement","OverlayRotationMode","NO_ROTATION","EXACT","BOUNDING_BOX","_init","scales","adjust","transformOriginProp","transformProp","positionAndSize","_getOverlayPositionAndSize","_getTransformOrigin","_getSizeInPixels","_getBoundingBox","scaledSize","deltaPixelsFromPointsNoRotate","eltSize","refPoint","_getPlacementPoint","deltaPointsFromPixelsNoRotate","_adjustBoundsForRotation","viewerElementToViewportRectangle","sketchCanvas","sketchContext","dir","viewportSize","_calculateCanvasSize","_imageSmoothingEnabled","viewportCoordToDrawerCoord","vpPoint","clipWithPolygons","polygons","useSketch","_getContext","beginPath","polygon","coord","getOpacity","maxOpacity","needsUpdate","numTilesLoaded","reset","_updateImageSmoothingEnabled","_calculateSketchCanvasSize","_clear","viewportToDrawerRectangle","rectangle","drawTile","resizeSketchCanvas","saveContext","restoreContext","drawRectangle","fillStyle","fillRect","blendSketch","globalCompositeOperation","widthExt","heightExt","widthDiff","heightDiff","drawDebugInfo","colorIndex","lineWidth","font","strokeStyle","_offsetForRotation","_getRotationPoint","_drawer","_flip","strokeRect","tileCenterX","tileCenterY","fillText","_restoreRotationChanges","debugRect","msImageSmoothingEnabled","getCanvasSize","sketch","getCanvasCenter","contentSize","_margins","zoomPoint","_updateContainerInnerSize","zoomSpring","_oldCenterX","_oldCenterY","_oldZoom","resetContentSize","setHomeBounds","contentFactor","_contentBoundsNoRotate","_contentSizeNoRotate","_contentBounds","_contentSize","_contentAspectRatio","homeBounds","contentBounds","getHomeZoom","aspectFactor","getHomeBoundsNoRotate","getMinZoom","homeZoom","getMaxZoom","_containerInnerSize","getMargins","setMargins","getBoundsWithMargins","getBoundsNoRotateWithMargins","oldZoomPixel","deltaZoomPoints","centerCurrent","centerTarget","_pixelFromPoint","_applyZoomConstraints","_applyBoundaryConstraints","newBounds","horizontalThreshold","boundsRight","contentRight","leftDx","rightDx","verticalThreshold","boundsBottom","contentBottom","topDy","bottomDy","_raiseConstraintsEvent","actualZoom","constrainedZoom","ensureVisible","_fitBounds","constraints","aspect","newZoom","newBoundsAspectRatio","newConstrainedZoom","oldZoom","referencePoint","fitVertically","box","fitHorizontally","_adjustCenterSpringsForZoomPoint","newContainerSize","maintain","widthDeltaFactor","changed","zoomSpringHandler","deltaZoomPixels","deltaPoints","deltaPixelsFromPoints","deltaPixels","_pixelFromPointNoRotate","pointFromPixelNoRotate","pixel","_viewportToImageDelta","viewerX","viewerY","viewportToImageCoordinates","_imageToViewportDelta","imageX","imageY","imageToViewportCoordinates","pixelWidth","pixelHeight","coordA","coordB","viewportToImageRectangle","pointWidth","pointHeight","viewerElementToImageCoordinates","imageToViewerElementCoordinates","windowToImageCoordinates","viewerCoordinates","imageToWindowCoordinates","viewerElementToViewportCoordinates","viewportToViewerElementCoordinates","viewportToViewerElementRectangle","windowToViewportCoordinates","viewportToWindowCoordinates","viewportToImageZoom","viewportZoom","imageWidth","imageToViewportZoom","imageZoom","_tileCache","_imageLoader","_clip","normHeight","contentAspectX","tilesMatrix","coverage","loadingCoverage","lastDrawn","lastResetTime","_midDraw","_needsDraw","_hasOpaqueTile","_tilesLoading","_preload","_fullyLoaded","_xSpring","_ySpring","_scaleSpring","_degreesSpring","_updateForScale","_drawingHandler","getFullyLoaded","_setFullyLoaded","flag","fullyLoaded","clearTilesFor","xUpdated","yUpdated","scaleUpdated","degreesUpdated","_updateViewport","_worldWidthCurrent","_worldHeightCurrent","_worldWidthTarget","_worldHeightTarget","getWorldBounds","getClippedBounds","ratio","xMod","yMod","getContentSize","getSizeInWindowCoordinates","_viewportToTiledImageRectangle","sameTarget","_raiseBoundsChange","_setScale","setCroppingPolygons","objectToSimpleXYObject","objs","map","isXYObject","_croppingPolygons","resetCroppingPolygons","anchorProperties","xOffset","yOffset","displayedWidthRatio","displayedHeightRatio","newClip","getPreload","setPreload","getCompositeOperation","_isBottomItem","_getLevelsInterval","lowestLevel","currentZeroRatio","highestLevel","drawArea","tiledImageBounds","levelsInterval","bestTile","haveDrawn","drawLevel","currentRenderPixelRatio","targetRenderPixelRatio","targetZeroRatio","optimalRatio","levelOpacity","levelVisibility","_updateLevel","_providesCoverage","_drawTiles","_loadTile","_getCornerTiles","topLeftBound","bottomRightBound","leftX","rightX","topY","bottomY","topLeftTile","bottomRightTile","best","havedrawn","currenttime","_resetCoverage","cornerTiles","numberOfTiles","viewportCenter","flippedX","_updateTile","_getTile","_setCoverage","_isCovered","_positionTile","_setTileLoaded","imageRecord","getImageRecord","_blendTile","_compareTiles","worldWidth","worldHeight","post","tileRequest","_onTileLoad","cutoff","increment","getCompletionCallback","completionCallback","cacheTile","overlap","boundsTL","boundsSize","positionC","positionT","sizeC","sizeT","tileCenter","tileSquaredDistance","blendTimeMillis","previousBest","sketchScale","sketchTranslate","usedClip","clipRect","clipPoint","placeholderRect","subPixelRoundingRule","subPixelRoundingRules","normalizeSubPixelRoundingRule","DEFAULT_SUBPIXEL_ROUNDING_RULE","isSubPixelRoundingRuleUnknown","determineSubPixelRoundingRule","_drawDebugInfo","cols","covers","TileRecord","ImageRecord","_tiles","_renderedContext","setRenderedContext","renderedContext","addTile","removeTile","getTileCount","_maxImageCacheCount","_tilesLoaded","_imagesLoaded","_imagesLoadedCount","insertionIndex","prevTile","worstTime","worstLevel","prevTime","prevLevel","prevTileRecord","worstTile","worstTileIndex","worstTileRecord","_unloadTile","tileRecord","_items","_autoRefigureSizes","_needsSizesFigured","_delegatedFigureSizes","_figureSizes","oldIndex","_raiseRemoveItem","removedItems","_homeBounds","_contentFactor","wrap","oldHomeBounds","oldContentSize","oldContentFactor","clippedBounds","AnnotationSlider","FullSize","FontSize","FontFamily","ImageSwitch","EditionPagination","WindowResize","UrlSearchParamUpdate","SetDataCookie","module","exports","aot","conf_aot","variants","opt","opt_slider","chg_citation","features","all","class","span_element","active_class","rendered_element","label_class","slider_class","fs","conf_fs","urlparam","hidden","class_to_hide","a_class","svg","fos","conf_fos","default","font_size_14","font_size_18","font_size_22","font_size_26","paragraph","p_class","ff","conf_ff","fonts","font1","font2","font3","is","conf_is","fade","column_small","column_full","class_to_show","class_parent","image_size","il","conf_il","pag_link","pag_tab","img_size","url_param","osd_target","img_source","img_types","inactive_class","bootstrap_class","ep","conf_ep","conf_wr","wr","conf_up","up","set_cookie_aot","build","set_cookie_fs","set_cookie_fos","set_cookie_ff","set_cookie_is","set_cookie_il","set_cookie_ep","customElements","define","pageUrl","textFeatures","fullSreen","fontFamily","viewerSwitch","onpopstate","scrollIntoView","behavior","backgroundColor","HTMLElement","observedAttributes","connectedCallback","render","sessionStorage","getItem","urlParam","URLSearchParams","variant","find","v","active","none_variant","checked","slider","removeAttribute","stateName","stateParam","citation_url","attributeChangedCallback","disconnectedCallback","fullScrean","p_change","s_html","option","family","show","maxWidth","facs","offsetWidth","pos","data_type","dataSource","updateImgPage","dataTab","hrefState","targetID0","targetID1","isResizing","left_container","right_container","handle","text","offsetRight","offsetHeight","alert","includes","select","values","new_value","variantAll","wrg_ft","count_active","slider_all","_current","link","pgOpt","el_id","idn","idNo","tab","_image_type","_osd_container_id","_osd_container_id2","osd_container","osd_container_2","image_src","spinnerID2","setItem","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","defineProperty","enumerable","r","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}